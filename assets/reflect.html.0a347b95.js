import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as e}from"./app.c23862ec.js";const t={},p=e(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p><code>Reflect</code> \u5BF9\u8C61\u4E0E <code>Proxy</code> \u5BF9\u8C61\u4E00\u6837\uFF0C\u4E5F\u662F ES6 \u4E3A\u4E86\u64CD\u4F5C\u5BF9\u8C61\u800C\u63D0\u4F9B\u7684\u65B0 API\u3002<code>Reflect</code> \u5BF9\u8C61\u7684\u8BBE\u8BA1\u76EE\u7684\u6709\u8FD9\u6837\u51E0\u4E2A\u3002</p><p>(1) \u5C06 <code>Object</code> \u5BF9\u8C61\u7684\u4E00\u4E9B\u660E\u663E\u5C5E\u4E8E\u8BED\u8A00\u5185\u90E8\u7684\u65B9\u6CD5(\u6BD4\u5982 <code>Object.defineProperty</code>)\uFF0C\u653E\u5230 <code>Reflect</code> \u5BF9\u8C61\u4E0A\u3002\u73B0\u9636\u6BB5\uFF0C\u67D0\u4E9B\u65B9\u6CD5\u540C\u65F6\u5728 <code>Object</code> \u548C <code>Reflect</code> \u5BF9\u8C61\u4E0A\u90E8\u7F72\uFF0C\u672A\u6765\u7684\u65B0\u65B9\u6CD5\u5C06\u53EA\u90E8\u7F72\u5728 <code>Reflect</code> \u5BF9\u8C61\u4E0A\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4ECE <code>Reflect</code> \u5BF9\u8C61\u4E0A\u53EF\u4EE5\u62FF\u5230\u8BED\u8A00\u5185\u90E8\u7684\u65B9\u6CD5\u3002</p><p>(2) \u4FEE\u6539\u67D0\u4E9B <code>Object</code> \u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8BA9\u5176\u53D8\u5F97\u66F4\u5408\u7406\u3002\u6BD4\u5982\uFF0C<code>Object.defineProperty(obj, name, desc)</code> \u5728\u65E0\u6CD5\u5B9A\u4E49\u5C5E\u6027\u65F6\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u800C <code>Reflect.defineProperty(obj, name, desc)</code> \u5219\u4F1A\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8001\u5199\u6CD5</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(3) \u8BA9 <code>Object</code> \u64CD\u4F5C\u90FD\u53D8\u6210\u51FD\u6570\u884C\u4E3A\u3002\u67D0\u4E9B <code>Object</code> \u64CD\u4F5C\u662F\u547D\u4EE4\u5F0F\uFF0C\u6BD4\u5982 <code>name in obj</code> \u548C <code>delete obj[name]</code>\uFF0C\u800C <code>Reflect.has(obj, name)</code> \u548C <code>Reflect.deleteProperty(obj, name)</code> \u8BA9\u5B83\u4EEC\u53D8\u6210\u4E86\u51FD\u6570\u884C\u4E3A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8001\u5199\u6CD5</span>
<span class="token string">&quot;assign&quot;</span> <span class="token keyword">in</span> Object<span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;assign&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(4)<code>Reflect</code> \u5BF9\u8C61\u7684\u65B9\u6CD5\u4E0E <code>Proxy</code> \u5BF9\u8C61\u7684\u65B9\u6CD5\u4E00\u4E00\u5BF9\u5E94\uFF0C\u53EA\u8981\u662F <code>Proxy</code> \u5BF9\u8C61\u7684\u65B9\u6CD5\uFF0C\u5C31\u80FD\u5728 <code>Reflect</code> \u5BF9\u8C61\u4E0A\u627E\u5230\u5BF9\u5E94\u7684\u65B9\u6CD5\u3002\u8FD9\u5C31\u8BA9 <code>Proxy</code> \u5BF9\u8C61\u53EF\u4EE5\u65B9\u4FBF\u5730\u8C03\u7528\u5BF9\u5E94\u7684 <code>Reflect</code> \u65B9\u6CD5\uFF0C\u5B8C\u6210\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u4F5C\u4E3A\u4FEE\u6539\u884C\u4E3A\u7684\u57FA\u7840\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u7BA1 <code>Proxy</code> \u600E\u4E48\u4FEE\u6539\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u60A8\u603B\u53EF\u4EE5\u5728 <code>Reflect</code> \u4E0A\u83B7\u53D6\u9ED8\u8BA4\u884C\u4E3A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> success <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;property &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot; on &quot;</span> <span class="token operator">+</span> target <span class="token operator">+</span> <span class="token string">&quot; set to &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> success<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Proxy</code> \u65B9\u6CD5\u62E6\u622A <code>target</code> \u5BF9\u8C61\u7684\u5C5E\u6027\u8D4B\u503C\u884C\u4E3A\u3002\u5B83\u91C7\u7528 <code>Reflect.set</code> \u65B9\u6CD5\u5C06\u503C\u8D4B\u503C\u7ED9\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u786E\u4FDD\u5B8C\u6210\u539F\u6709\u7684\u884C\u4E3A\uFF0C\u7136\u540E\u518D\u90E8\u7F72\u989D\u5916\u7684\u529F\u80FD\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> loggedObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;delete&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;has&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6BCF\u4E00\u4E2A <code>Proxy</code> \u5BF9\u8C61\u7684\u62E6\u622A\u64CD\u4F5C(<code>get</code>\u3001<code>delete</code>\u3001<code>has</code>)\uFF0C\u5185\u90E8\u90FD\u8C03\u7528\u5BF9\u5E94\u7684 <code>Reflect</code> \u65B9\u6CD5\uFF0C\u4FDD\u8BC1\u539F\u751F\u884C\u4E3A\u80FD\u591F\u6B63\u5E38\u6267\u884C\u3002\u6DFB\u52A0\u7684\u5DE5\u4F5C\uFF0C\u5C31\u662F\u5C06\u6BCF\u4E00\u4E2A\u64CD\u4F5C\u8F93\u51FA\u4E00\u884C\u65E5\u5FD7\u3002</p><p>\u6709\u4E86 <code>Reflect</code> \u5BF9\u8C61\u4EE5\u540E\uFF0C\u5F88\u591A\u64CD\u4F5C\u4F1A\u66F4\u6613\u8BFB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8001\u5199\u6CD5</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>floor<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1.75</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>floor<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1.75</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5</h2><p><code>Reflect</code> \u5BF9\u8C61\u4E00\u5171\u6709 13 \u4E2A\u9759\u6001\u65B9\u6CD5\u3002</p><ul><li>Reflect.apply(target, thisArg, args)</li><li>Reflect.construct(target, args)</li><li>Reflect.get(target, name, receiver)</li><li>Reflect.set(target, name, value, receiver)</li><li>Reflect.defineProperty(target, name, desc)</li><li>Reflect.deleteProperty(target, name)</li><li>Reflect.has(target, name)</li><li>Reflect.ownKeys(target)</li><li>Reflect.isExtensible(target)</li><li>Reflect.preventExtensions(target)</li><li>Reflect.getOwnPropertyDescriptor(target, name)</li><li>Reflect.getPrototypeOf(target)</li><li>Reflect.setPrototypeOf(target, prototype)</li></ul><p>\u4E0A\u9762\u8FD9\u4E9B\u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u5927\u90E8\u5206\u4E0E <code>Object</code> \u5BF9\u8C61\u7684\u540C\u540D\u65B9\u6CD5\u7684\u4F5C\u7528\u90FD\u662F\u76F8\u540C\u7684\uFF0C\u800C\u4E14\u5B83\u4E0E <code>Proxy</code> \u5BF9\u8C61\u7684\u65B9\u6CD5\u662F\u4E00\u4E00\u5BF9\u5E94\u7684\u3002\u4E0B\u9762\u662F\u5BF9\u5B83\u4EEC\u7684\u89E3\u91CA\u3002</p><h3 id="reflect-get-target-name-receiver" tabindex="-1"><a class="header-anchor" href="#reflect-get-target-name-receiver" aria-hidden="true">#</a> Reflect.get(target, name, receiver)</h3><p><code>Reflect.get</code> \u65B9\u6CD5\u67E5\u627E\u5E76\u8FD4\u56DE <code>target</code> \u5BF9\u8C61\u7684 <code>name</code> \u5C5E\u6027\uFF0C\u5982\u679C\u6CA1\u6709\u8BE5\u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE <code>undefined</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>name</code> \u5C5E\u6027\u90E8\u7F72\u4E86\u8BFB\u53D6\u51FD\u6570(getter)\uFF0C\u5219\u8BFB\u53D6\u51FD\u6570\u7684 <code>this</code> \u7ED1\u5B9A <code>receiver</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> myReceiverObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">,</span> myReceiverObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Reflect.get</code> \u65B9\u6CD5\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-set-target-name-value-receiver" tabindex="-1"><a class="header-anchor" href="#reflect-set-target-name-value-receiver" aria-hidden="true">#</a> Reflect.set(target, name, value, receiver)</h3><p><code>Reflect.set</code> \u65B9\u6CD5\u8BBE\u7F6E <code>target</code> \u5BF9\u8C61\u7684 <code>name</code> \u5C5E\u6027\u7B49\u4E8E <code>value</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

myObject<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 1</span>

Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 2</span>

Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>name</code> \u5C5E\u6027\u8BBE\u7F6E\u4E86\u8D4B\u503C\u51FD\u6570\uFF0C\u5219\u8D4B\u503C\u51FD\u6570\u7684 <code>this</code> \u7ED1\u5B9A <code>receiver</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> myReceiverObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> myReceiverObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 4</span>
myReceiverObject<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5982\u679C Proxy \u5BF9\u8C61\u548C Reflect \u5BF9\u8C61\u8054\u5408\u4F7F\u7528\uFF0C\u524D\u8005\u62E6\u622A\u8D4B\u503C\u64CD\u4F5C\uFF0C\u540E\u8005\u5B8C\u6210\u8D4B\u503C\u7684\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u800C\u4E14\u4F20\u5165\u4E86 <code>receiver</code>\uFF0C\u90A3\u4E48 <code>Reflect.set</code> \u4F1A\u89E6\u53D1 <code>Proxy.defineProperty</code> \u62E6\u622A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;defineProperty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// set</span>
<span class="token comment">// defineProperty</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Proxy.set</code> \u62E6\u622A\u91CC\u9762\u4F7F\u7528\u4E86 <code>Reflect.set</code>\uFF0C\u800C\u4E14\u4F20\u5165\u4E86 <code>receiver</code>\uFF0C\u5BFC\u81F4\u89E6\u53D1 <code>Proxy.defineProperty</code> \u62E6\u622A\u3002\u8FD9\u662F\u56E0\u4E3A <code>Proxy.set</code> \u7684 <code>receiver</code> \u53C2\u6570\u603B\u662F\u6307\u5411\u5F53\u524D\u7684 Proxy \u5B9E\u4F8B(\u5373\u4E0A\u4F8B\u7684 <code>obj</code>)\uFF0C\u800C <code>Reflect.set</code> \u4E00\u65E6\u4F20\u5165 <code>receiver</code>\uFF0C\u5C31\u4F1A\u5C06\u5C5E\u6027\u8D4B\u503C\u5230 <code>receiver</code> \u4E0A\u9762(\u5373 <code>obj</code>)\uFF0C\u5BFC\u81F4\u89E6\u53D1 <code>defineProperty</code> \u62E6\u622A\u3002\u5982\u679C <code>Reflect.set</code> \u6CA1\u6709\u4F20\u5165 <code>receiver</code>\uFF0C\u90A3\u4E48\u5C31\u4E0D\u4F1A\u89E6\u53D1 <code>defineProperty</code> \u62E6\u622A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;defineProperty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// set</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Reflect.set</code> \u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-has-obj-name" tabindex="-1"><a class="header-anchor" href="#reflect-has-obj-name" aria-hidden="true">#</a> Reflect.has(obj, name)</h3><p><code>Reflect.has</code> \u65B9\u6CD5\u5BF9\u5E94 <code>name in obj</code> \u91CC\u9762\u7684 <code>in</code> \u8FD0\u7B97\u7B26\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
<span class="token string">&quot;foo&quot;</span> <span class="token keyword">in</span> myObject<span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Reflect.has</code> \u548C <code>in</code> \u8FD0\u7B97\u7B26\u90FD\u4F1A\u62A5\u9519\u3002</p><h3 id="reflect-deleteproperty-obj-name" tabindex="-1"><a class="header-anchor" href="#reflect-deleteproperty-obj-name" aria-hidden="true">#</a> Reflect.deleteProperty(obj, name)</h3><p><code>Reflect.deleteProperty</code> \u65B9\u6CD5\u7B49\u540C\u4E8E <code>delete obj[name]</code>\uFF0C\u7528\u4E8E\u5220\u9664\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
<span class="token keyword">delete</span> myObj<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>myObj<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002\u5982\u679C\u5220\u9664\u6210\u529F\uFF0C\u6216\u8005\u88AB\u5220\u9664\u7684\u5C5E\u6027\u4E0D\u5B58\u5728\uFF0C\u8FD4\u56DE <code>true</code>\uFF1B\u5220\u9664\u5931\u8D25\uFF0C\u88AB\u5220\u9664\u7684\u5C5E\u6027\u4F9D\u7136\u5B58\u5728\uFF0C\u8FD4\u56DE <code>false</code>\u3002</p><h3 id="reflect-construct-target-args" tabindex="-1"><a class="header-anchor" href="#reflect-construct-target-args" aria-hidden="true">#</a> Reflect.construct(target, args)</h3><p><code>Reflect.construct</code> \u65B9\u6CD5\u7B49\u540C\u4E8E <code>new target(...args)</code>\uFF0C\u8FD9\u63D0\u4F9B\u4E86\u4E00\u79CD\u4E0D\u4F7F\u7528 <code>new</code>\uFF0C\u6765\u8C03\u7528\u6784\u9020\u51FD\u6570\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Greeting</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// new \u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Greeting</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Reflect.construct \u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>Greeting<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-getprototypeof-obj" tabindex="-1"><a class="header-anchor" href="#reflect-getprototypeof-obj" aria-hidden="true">#</a> Reflect.getPrototypeOf(obj)</h3><p><code>Reflect.getPrototypeOf</code> \u65B9\u6CD5\u7528\u4E8E\u8BFB\u53D6\u5BF9\u8C61\u7684 <code>__proto__</code> \u5C5E\u6027\uFF0C\u5BF9\u5E94 <code>Object.getPrototypeOf(obj)</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FancyThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">FancyThing</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">FancyThing</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Reflect.getPrototypeOf</code> \u548C <code>Object.getPrototypeOf</code> \u7684\u4E00\u4E2A\u533A\u522B\u662F\uFF0C\u5982\u679C\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.getPrototypeOf</code> \u4F1A\u5C06\u8FD9\u4E2A\u53C2\u6570\u8F6C\u4E3A\u5BF9\u8C61\uFF0C\u7136\u540E\u518D\u8FD0\u884C\uFF0C\u800C <code>Reflect.getPrototypeOf</code> \u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Number {[[PrimitiveValue]]: 0}</span>
Reflect<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-setprototypeof-obj-newproto" tabindex="-1"><a class="header-anchor" href="#reflect-setprototypeof-obj-newproto" aria-hidden="true">#</a> Reflect.setPrototypeOf(obj, newProto)</h3><p><code>Reflect.setPrototypeOf</code> \u65B9\u6CD5\u7528\u4E8E\u8BBE\u7F6E\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B(prototype)\uFF0C\u5BF9\u5E94 <code>Object.setPrototypeOf(obj, newProto)</code> \u65B9\u6CD5\u3002\u5B83\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u8BBE\u7F6E\u6210\u529F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">,</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">,</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

myObj<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u65E0\u6CD5\u8BBE\u7F6E\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B(\u6BD4\u5982\uFF0C\u76EE\u6807\u5BF9\u8C61\u7981\u6B62\u6269\u5C55)\uFF0C<code>Reflect.setPrototypeOf</code> \u65B9\u6CD5\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.setPrototypeOf</code> \u4F1A\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u53C2\u6570\u672C\u8EAB\uFF0C\u800C <code>Reflect.setPrototypeOf</code> \u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>

Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Reflect.setPrototypeOf called on non-object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>undefined</code> \u6216 <code>null</code>\uFF0C<code>Object.setPrototypeOf</code> \u548C <code>Reflect.setPrototypeOf</code> \u90FD\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Object.setPrototypeOf called on null or undefined</span>

Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Reflect.setPrototypeOf called on non-object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-apply-func-thisarg-args" tabindex="-1"><a class="header-anchor" href="#reflect-apply-func-thisarg-args" aria-hidden="true">#</a> Reflect.apply(func, thisArg, args)</h3><p><code>Reflect.apply</code> \u65B9\u6CD5\u7B49\u540C\u4E8E <code>Function.prototype.apply.call(func, thisArg, args)</code>\uFF0C\u7528\u4E8E\u7ED1\u5B9A <code>this</code> \u5BF9\u8C61\u540E\u6267\u884C\u7ED9\u5B9A\u51FD\u6570\u3002</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u5982\u679C\u8981\u7ED1\u5B9A\u4E00\u4E2A\u51FD\u6570\u7684 <code>this</code> \u5BF9\u8C61\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199 <code>fn.apply(obj, args)</code>\uFF0C\u4F46\u662F\u5982\u679C\u51FD\u6570\u5B9A\u4E49\u4E86\u81EA\u5DF1\u7684 <code>apply</code> \u65B9\u6CD5\uFF0C\u5C31\u53EA\u80FD\u5199\u6210 <code>Function.prototype.apply.call(fn, obj, args)</code>\uFF0C\u91C7\u7528 <code>Reflect</code> \u5BF9\u8C61\u53EF\u4EE5\u7B80\u5316\u8FD9\u79CD\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
<span class="token keyword">const</span> youngest <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> oldest <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>youngest<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token keyword">const</span> youngest <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>min<span class="token punctuation">,</span> Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> oldest <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>max<span class="token punctuation">,</span> Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">,</span> youngest<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-defineproperty-target-propertykey-attributes" tabindex="-1"><a class="header-anchor" href="#reflect-defineproperty-target-propertykey-attributes" aria-hidden="true">#</a> Reflect.defineProperty(target, propertyKey, attributes)</h3><p><code>Reflect.defineProperty</code> \u65B9\u6CD5\u57FA\u672C\u7B49\u540C\u4E8E <code>Object.defineProperty</code>\uFF0C\u7528\u6765\u4E3A\u5BF9\u8C61\u5B9A\u4E49\u5C5E\u6027\u3002\u672A\u6765\uFF0C\u540E\u8005\u4F1A\u88AB\u9010\u6E10\u5E9F\u9664\uFF0C\u8BF7\u4ECE\u73B0\u5728\u5F00\u59CB\u5C31\u4F7F\u7528 <code>Reflect.defineProperty</code> \u4EE3\u66FF\u5B83\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">MyDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/*\u2026*/</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>MyDate<span class="token punctuation">,</span> <span class="token string">&quot;now&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>MyDate<span class="token punctuation">,</span> <span class="token string">&quot;now&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>Reflect.defineProperty</code> \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u6BD4\u5982 <code>Reflect.defineProperty(1, &#39;foo&#39;)</code>\u3002</p><p>\u8FD9\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u4E0E <code>Proxy.defineProperty</code> \u914D\u5408\u4F7F\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> descriptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> descriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// {value: &quot;bar&quot;, writable: true, enumerable: true, configurable: true}</span>

p<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// &quot;bar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Proxy.defineProperty</code> \u5BF9\u5C5E\u6027\u8D4B\u503C\u8BBE\u7F6E\u4E86\u62E6\u622A\uFF0C\u7136\u540E\u4F7F\u7528 <code>Reflect.defineProperty</code> \u5B8C\u6210\u4E86\u8D4B\u503C\u3002</p><h3 id="reflect-getownpropertydescriptor-target-propertykey" tabindex="-1"><a class="header-anchor" href="#reflect-getownpropertydescriptor-target-propertykey" aria-hidden="true">#</a> Reflect.getOwnPropertyDescriptor(target, propertyKey)</h3><p><code>Reflect.getOwnPropertyDescriptor</code> \u57FA\u672C\u7B49\u540C\u4E8E <code>Object.getOwnPropertyDescriptor</code>\uFF0C\u7528\u4E8E\u5F97\u5230\u6307\u5B9A\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\uFF0C\u5C06\u6765\u4F1A\u66FF\u4EE3\u6389\u540E\u8005\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
<span class="token keyword">var</span> theDescriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token keyword">var</span> theDescriptor <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Reflect.getOwnPropertyDescriptor</code> \u548C <code>Object.getOwnPropertyDescriptor</code> \u7684\u4E00\u4E2A\u533A\u522B\u662F\uFF0C\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.getOwnPropertyDescriptor(1, &#39;foo&#39;)</code> \u4E0D\u62A5\u9519\uFF0C\u8FD4\u56DE <code>undefined</code>\uFF0C\u800C <code>Reflect.getOwnPropertyDescriptor(1, &#39;foo&#39;)</code> \u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u8868\u793A\u53C2\u6570\u975E\u6CD5\u3002</p><h3 id="reflect-isextensible-target" tabindex="-1"><a class="header-anchor" href="#reflect-isextensible-target" aria-hidden="true">#</a> Reflect.isExtensible (target)</h3><p><code>Reflect.isExtensible</code> \u65B9\u6CD5\u5BF9\u5E94 <code>Object.isExtensible</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5F53\u524D\u5BF9\u8C61\u662F\u5426\u53EF\u6269\u5C55\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.isExtensible</code> \u4F1A\u8FD4\u56DE <code>false</code>\uFF0C\u56E0\u4E3A\u975E\u5BF9\u8C61\u672C\u6765\u5C31\u662F\u4E0D\u53EF\u6269\u5C55\u7684\uFF0C\u800C <code>Reflect.isExtensible</code> \u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Reflect<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-preventextensions-target" tabindex="-1"><a class="header-anchor" href="#reflect-preventextensions-target" aria-hidden="true">#</a> Reflect.preventExtensions(target)</h3><p><code>Reflect.preventExtensions</code> \u5BF9\u5E94 <code>Object.preventExtensions</code> \u65B9\u6CD5\uFF0C\u7528\u4E8E\u8BA9\u4E00\u4E2A\u5BF9\u8C61\u53D8\u4E3A\u4E0D\u53EF\u6269\u5C55\u3002\u5B83\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u64CD\u4F5C\u6210\u529F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Object {}</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.preventExtensions</code> \u5728 ES5 \u73AF\u5883\u62A5\u9519\uFF0C\u5728 ES6 \u73AF\u5883\u8FD4\u56DE\u4F20\u5165\u7684\u53C2\u6570\uFF0C\u800C <code>Reflect.preventExtensions</code> \u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5 \u73AF\u5883</span>
Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>

<span class="token comment">// ES6 \u73AF\u5883</span>
Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect-ownkeys-target" tabindex="-1"><a class="header-anchor" href="#reflect-ownkeys-target" aria-hidden="true">#</a> Reflect.ownKeys (target)</h3><p><code>Reflect.ownKeys</code> \u65B9\u6CD5\u7528\u4E8E\u8FD4\u56DE\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF0C\u57FA\u672C\u7B49\u540C\u4E8E <code>Object.getOwnPropertyNames</code> \u4E0E <code>Object.getOwnPropertySymbols</code> \u4E4B\u548C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;bing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;]</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//[Symbol(baz), Symbol(bing)]</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;, Symbol(baz), Symbol(bing)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u4F8B-\u4F7F\u7528-proxy-\u5B9E\u73B0\u89C2\u5BDF\u8005\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-\u4F7F\u7528-proxy-\u5B9E\u73B0\u89C2\u5BDF\u8005\u6A21\u5F0F" aria-hidden="true">#</a> \u5B9E\u4F8B: \u4F7F\u7528 Proxy \u5B9E\u73B0\u89C2\u5BDF\u8005\u6A21\u5F0F</h2><p>\u89C2\u5BDF\u8005\u6A21\u5F0F(Observer mode)\u6307\u7684\u662F\u51FD\u6570\u81EA\u52A8\u89C2\u5BDF\u6570\u636E\u5BF9\u8C61\uFF0C\u4E00\u65E6\u5BF9\u8C61\u6709\u53D8\u5316\uFF0C\u51FD\u6570\u5C31\u4F1A\u81EA\u52A8\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token function">observable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">observe</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA</span>
<span class="token comment">// \u674E\u56DB, 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6570\u636E\u5BF9\u8C61 <code>person</code> \u662F\u89C2\u5BDF\u76EE\u6807\uFF0C\u51FD\u6570 <code>print</code> \u662F\u89C2\u5BDF\u8005\u3002\u4E00\u65E6\u6570\u636E\u5BF9\u8C61\u53D1\u751F\u53D8\u5316\uFF0C<code>print</code> \u5C31\u4F1A\u81EA\u52A8\u6267\u884C\u3002</p><p>\u4E0B\u9762\uFF0C\u4F7F\u7528 Proxy \u5199\u4E00\u4E2A\u89C2\u5BDF\u8005\u6A21\u5F0F\u7684\u6700\u7B80\u5355\u5B9E\u73B0\uFF0C\u5373\u5B9E\u73B0 <code>observable</code> \u548C <code>observe</code> \u8FD9\u4E24\u4E2A\u51FD\u6570\u3002\u601D\u8DEF\u662F <code>observable</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u539F\u59CB\u5BF9\u8C61\u7684 Proxy \u4EE3\u7406\uFF0C\u62E6\u622A\u8D4B\u503C\u64CD\u4F5C\uFF0C\u89E6\u53D1\u5145\u5F53\u89C2\u5BDF\u8005\u7684\u5404\u4E2A\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> queuedObservers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">observe</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> queuedObservers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">observable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span> set <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  queuedObservers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">observer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">observer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>Set</code> \u96C6\u5408\uFF0C\u6240\u6709\u89C2\u5BDF\u8005\u51FD\u6570\u90FD\u653E\u8FDB\u8FD9\u4E2A\u96C6\u5408\u3002\u7136\u540E\uFF0C<code>observable</code> \u51FD\u6570\u8FD4\u56DE\u539F\u59CB\u5BF9\u8C61\u7684\u4EE3\u7406\uFF0C\u62E6\u622A\u8D4B\u503C\u64CD\u4F5C\u3002\u62E6\u622A\u51FD\u6570 <code>set</code> \u4E4B\u4E2D\uFF0C\u4F1A\u81EA\u52A8\u6267\u884C\u6240\u6709\u89C2\u5BDF\u8005\u3002</p>`,97),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","reflect.html.vue"]]);export{d as default};
