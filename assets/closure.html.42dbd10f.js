import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.6f239d00.js";const t={},e=p(`<h2 id="\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C</h2><p>\u9AD8\u9636\u51FD\u6570\u9664\u4E86\u53EF\u4EE5\u63A5\u53D7\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u5916\uFF0C\u8FD8\u53EF\u4EE5\u628A\u51FD\u6570\u4F5C\u4E3A\u7ED3\u679C\u503C\u8FD4\u56DE\u3002</p><p>\u6211\u4EEC\u6765\u5B9E\u73B0\u4E00\u4E2A\u5BF9 Array \u7684\u6C42\u548C\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u6C42\u548C\u7684\u51FD\u6570\u662F\u8FD9\u6837\u5B9A\u4E49\u7684:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u53D8\u91CF <code>sum</code> \u7B49\u540C\u4E8E:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>\u4F46\u662F\uFF0C\u5982\u679C\u4E0D\u9700\u8981\u7ACB\u523B\u6C42\u548C\uFF0C\u800C\u662F\u5728\u540E\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u6839\u636E\u9700\u8981\u518D\u8BA1\u7B97\u600E\u4E48\u529E? \u53EF\u4EE5\u4E0D\u8FD4\u56DE\u6C42\u548C\u7684\u7ED3\u679C\uFF0C\u800C\u662F\u8FD4\u56DE\u6C42\u548C\u7684\u51FD\u6570!</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">lazy_sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u4E0A\u9762\u7684 <code>lazy_sum()</code> \u7B49\u540C\u4E8E:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">lazy_sum</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>\u5F53\u6211\u4EEC\u8C03\u7528 <code>lazy_sum()</code> \u65F6\uFF0C\u8FD4\u56DE\u7684\u5E76\u4E0D\u662F\u6C42\u548C\u7ED3\u679C\uFF0C\u800C\u662F\u6C42\u548C\u51FD\u6570:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token function">lazy_sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function sum()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8C03\u7528\u51FD\u6570 f \u65F6\uFF0C\u624D\u771F\u6B63\u8BA1\u7B97\u6C42\u548C\u7684\u7ED3\u679C:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4E5F\u5F88\u597D\u7684\u8BC1\u660E\u4E86\u7BAD\u5934\u51FD\u6570\u7684\u7B80\u6D01\u6027\u3002</p><p>\u968F\u7740\u5F00\u53D1\u7684\u6DF1\u5165\uFF0C\u5E94\u5F53\u9010\u6E10\u719F\u6089\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u6765\u5199\u51FA\u66F4\u7B80\u6D01\u7684\u5199\u6CD5\u3002</p></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5728\u51FD\u6570 <code>lazy_sum</code> \u4E2D\u53C8\u5B9A\u4E49\u4E86\u51FD\u6570 <code>sum</code>\uFF0C\u5E76\u4E14\uFF0C\u5185\u90E8\u51FD\u6570 <code>sum</code> \u53EF\u4EE5\u5F15\u7528\u5916\u90E8\u51FD\u6570 <code>lazy_sum</code> \u7684\u53C2\u6570\u548C\u5C40\u90E8\u53D8\u91CF\uFF0C\u5F53 <code>lazy_sum</code> \u8FD4\u56DE\u51FD\u6570 <code>sum</code> \u65F6\uFF0C\u76F8\u5173\u53C2\u6570\u548C\u53D8\u91CF\u90FD\u4FDD\u5B58\u5728\u8FD4\u56DE\u7684\u51FD\u6570\u4E2D\uFF0C\u8FD9\u79CD\u79F0\u4E3A\u201C\u95ED\u5305(Closure)\u201D\u7684\u7A0B\u5E8F\u7ED3\u6784\u62E5\u6709\u6781\u5927\u7684\u5A01\u529B\u3002</p><p>\u8BF7\u518D\u6CE8\u610F\u4E00\u70B9\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528 <code>lazy_sum()</code> \u65F6\uFF0C\u6BCF\u6B21\u8C03\u7528\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u5373\u4F7F\u4F20\u5165\u76F8\u540C\u7684\u53C2\u6570:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token function">lazy_sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token function">lazy_sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

f1 <span class="token operator">===</span> f2<span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>f1()</code> \u548C <code>f2()</code> \u7684\u8C03\u7528\u7ED3\u679C\u4E92\u4E0D\u5F71\u54CD\u3002</p><h2 id="\u95ED\u5305\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> \u95ED\u5305\u6CE8\u610F\u4E8B\u9879</h2><p>\u6CE8\u610F\u5230\u8FD4\u56DE\u7684\u51FD\u6570\u5728\u5176\u5B9A\u4E49\u5185\u90E8\u5F15\u7528\u4E86\u5C40\u90E8\u53D8\u91CF <code>arr</code>\uFF0C\u6240\u4EE5\uFF0C\u5F53\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE\u4E86\u4E00\u4E2A\u51FD\u6570\u540E\uFF0C\u5176\u5185\u90E8\u7684\u5C40\u90E8\u53D8\u91CF\u8FD8\u88AB\u65B0\u51FD\u6570\u5F15\u7528\uFF0C\u6240\u4EE5\uFF0C\u95ED\u5305\u7528\u8D77\u6765\u7B80\u5355\uFF0C\u5B9E\u73B0\u8D77\u6765\u53EF\u4E0D\u5BB9\u6613\u3002</p><p>\u53E6\u4E00\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u662F\uFF0C\u8FD4\u56DE\u7684\u51FD\u6570\u5E76\u6CA1\u6709\u7ACB\u523B\u6267\u884C\uFF0C\u800C\u662F\u76F4\u5230\u8C03\u7528\u4E86 <code>f()</code> \u624D\u6267\u884C\u3002\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f1 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f2 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f3 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6BCF\u6B21\u5FAA\u73AF\uFF0C\u90FD\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u51FD\u6570\uFF0C\u7136\u540E\uFF0C\u628A\u521B\u5EFA\u7684 3 \u4E2A\u51FD\u6570\u90FD\u6DFB\u52A0\u5230\u4E00\u4E2A Array \u4E2D\u8FD4\u56DE\u4E86\u3002</p><p>\u60A8\u53EF\u80FD\u8BA4\u4E3A\u8C03\u7528 <code>f1()</code>\uFF0C<code>f2()</code> \u548C <code>f3()</code> \u7ED3\u679C\u5E94\u8BE5\u662F <code>1\uFF0C4\uFF0C9</code>\uFF0C\u4F46\u5B9E\u9645\u7ED3\u679C\u662F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16</span>
<span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16</span>
<span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5168\u90E8\u90FD\u662F 16! \u539F\u56E0\u5C31\u5728\u4E8E\u8FD4\u56DE\u7684\u51FD\u6570\u5F15\u7528\u4E86\u53D8\u91CF <code>i</code>\uFF0C\u4F46\u5B83\u5E76\u975E\u7ACB\u523B\u6267\u884C\u3002\u7B49\u5230 3 \u4E2A\u51FD\u6570\u90FD\u8FD4\u56DE\u65F6\uFF0C\u5B83\u4EEC\u6240\u5F15\u7528\u7684\u53D8\u91CF i \u5DF2\u7ECF\u53D8\u6210\u4E86 <code>4</code>\uFF0C\u56E0\u6B64\u6700\u7EC8\u7ED3\u679C\u4E3A <code>16</code>\u3002</p><p>\u8FD4\u56DE\u95ED\u5305\u65F6\u7262\u8BB0\u7684\u4E00\u70B9\u5C31\u662F: \u8FD4\u56DE\u51FD\u6570\u4E0D\u8981\u5F15\u7528\u4EFB\u4F55\u5FAA\u73AF\u53D8\u91CF\uFF0C\u6216\u8005\u540E\u7EED\u4F1A\u53D1\u751F\u53D8\u5316\u7684\u53D8\u91CF\u3002</p><p>\u5982\u679C\u4E00\u5B9A\u8981\u5F15\u7528\u5FAA\u73AF\u53D8\u91CF\u600E\u4E48\u529E? \u65B9\u6CD5\u662F\u518D\u521B\u5EFA\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u8BE5\u51FD\u6570\u7684\u53C2\u6570\u7ED1\u5B9A\u5FAA\u73AF\u53D8\u91CF\u5F53\u524D\u7684\u503C\uFF0C\u65E0\u8BBA\u8BE5\u5FAA\u73AF\u53D8\u91CF\u540E\u7EED\u5982\u4F55\u66F4\u6539\uFF0C\u5DF2\u7ED1\u5B9A\u5230\u51FD\u6570\u53C2\u6570\u7684\u503C\u4E0D\u53D8:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          n <span class="token operator">*</span> n
      <span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f1 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f2 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> f3 <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u7528\u4E86\u4E00\u4E2A\u201C\u521B\u5EFA\u4E00\u4E2A\u533F\u540D\u51FD\u6570\u5E76\u7ACB\u523B\u6267\u884C\u201D\u7684\u8BED\u6CD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7406\u8BBA\u4E0A\u8BB2\uFF0C\u521B\u5EFA\u4E00\u4E2A\u533F\u540D\u51FD\u6570\u5E76\u7ACB\u523B\u6267\u884C\u53EF\u4EE5\u8FD9\u4E48\u5199:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">*</span> x <span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F46\u662F\u7531\u4E8E JavaScript \u8BED\u6CD5\u89E3\u6790\u7684\u95EE\u9898\uFF0C\u4F1A\u62A5 SyntaxError \u9519\u8BEF\uFF0C\u56E0\u6B64\u9700\u8981\u7528\u62EC\u53F7\u628A\u6574\u4E2A\u51FD\u6570\u5B9A\u4E49\u62EC\u8D77\u6765:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u7684\u5199\u6CD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u901A\u5E38\uFF0C\u4E00\u4E2A\u7ACB\u5373\u6267\u884C\u7684\u533F\u540D\u51FD\u6570\u53EF\u4EE5\u628A\u51FD\u6570\u4F53\u62C6\u5F00\uFF0C\u4E00\u822C\u8FD9\u4E48\u5199:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF4\u4E86\u8FD9\u4E48\u591A\uFF0C\u96BE\u9053\u95ED\u5305\u5C31\u662F\u4E3A\u4E86\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u7136\u540E\u5EF6\u8FDF\u6267\u884C\u5417?</p><p>\u5F53\u7136\u4E0D\u662F! \u95ED\u5305\u6709\u975E\u5E38\u5F3A\u5927\u7684\u529F\u80FD\u3002\u4E3E\u4E2A\u6817\u5B50:</p><p>\u5728\u9762\u5411\u5BF9\u8C61\u7684\u7A0B\u5E8F\u8BBE\u8BA1\u8BED\u8A00\u91CC\uFF0C\u6BD4\u5982 Java \u548C C++\uFF0C\u8981\u5728\u5BF9\u8C61\u5185\u90E8\u5C01\u88C5\u4E00\u4E2A\u79C1\u6709\u53D8\u91CF\uFF0C\u53EF\u4EE5\u7528 <code>private</code> \u4FEE\u9970\u4E00\u4E2A\u6210\u5458\u53D8\u91CF\u3002</p><p>\u5728\u6CA1\u6709 class \u673A\u5236\uFF0C\u53EA\u6709\u51FD\u6570\u7684\u8BED\u8A00\u91CC\uFF0C\u501F\u52A9\u95ED\u5305\uFF0C\u540C\u6837\u53EF\u4EE5\u5C01\u88C5\u4E00\u4E2A\u79C1\u6709\u53D8\u91CF\u3002\u6211\u4EEC\u7528 JavaScript \u521B\u5EFA\u4E00\u4E2A\u8BA1\u6570\u5668:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">create_counter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">counter <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">inc</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    counter <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> counter<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">\u6700\u540E\u7684\u63D0\u793A</p><p>\u4E0A\u9762\u7684\u51FD\u6570\u7B49\u6548\u4E8E:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">create_counter</span><span class="token punctuation">(</span><span class="token parameter">initial</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> initial <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      x <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u6700\u540E\u4E00\u4E2A\u63D0\u793A\u4E86\u3002</p><p>\u4E4B\u540E\uFF0C\u7565\u5FAE\u590D\u6742\u7684\u7BAD\u5934\u51FD\u6570\u5C06\u4E0D\u518D\u5305\u542B\u6B63\u5E38\u5199\u6CD5\u7684\u7248\u672C\uFF0C\u5982\u679C\u7406\u89E3\u8D77\u6765\u5403\u529B\uFF0C\u8BF7\u591A\u52A0\u9605\u8BFB\u7BAD\u5934\u51FD\u6570\u7AE0\u8282\u5E76\u9488\u5BF9\u4EE5\u4E0A\u6848\u4F8B\u5145\u5206\u7406\u89E3\u3002</p></div><p>\u5B83\u7528\u8D77\u6765\u50CF\u8FD9\u6837:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> c1 <span class="token operator">=</span> <span class="token function">create_counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
c1<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
c1<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
c1<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>

<span class="token keyword">const</span> c2 <span class="token operator">=</span> <span class="token function">create_counter</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
c2<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11</span>
c2<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
c2<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD4\u56DE\u7684\u5BF9\u8C61\u4E2D\uFF0C\u5B9E\u73B0\u4E86\u4E00\u4E2A\u95ED\u5305\uFF0C\u8BE5\u95ED\u5305\u643A\u5E26\u4E86\u5C40\u90E8\u53D8\u91CF <code>x</code>\uFF0C\u5E76\u4E14\uFF0C\u4ECE\u5916\u90E8\u4EE3\u7801\u6839\u672C\u65E0\u6CD5\u8BBF\u95EE\u5230\u53D8\u91CF <code>x</code>\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u95ED\u5305\u5C31\u662F\u643A\u5E26\u72B6\u6001\u7684\u51FD\u6570\uFF0C\u5E76\u4E14\u5B83\u7684\u72B6\u6001\u53EF\u4EE5\u5B8C\u5168\u5BF9\u5916\u9690\u85CF\u8D77\u6765\u3002</p><p>\u95ED\u5305\u8FD8\u53EF\u4EE5\u628A\u591A\u53C2\u6570\u7684\u51FD\u6570\u53D8\u6210\u5355\u53C2\u6570\u7684\u51FD\u6570\u3002\u4F8B\u5982\uFF0C\u8981\u8BA1\u7B97 <code>xy</code> \u53EF\u4EE5\u7528 <code>Math.pow(x, y)</code> \u51FD\u6570\uFF0C\u4E0D\u8FC7\u8003\u8651\u5230\u7ECF\u5E38\u8BA1\u7B97 <code>x2</code> \u6216 <code>x3</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u95ED\u5305\u521B\u5EFA\u65B0\u7684\u51FD\u6570 <code>pow2</code> \u548C <code>pow3</code>:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">make_pow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u521B\u5EFA\u4E24\u4E2A\u65B0\u51FD\u6570:</span>
<span class="token keyword">const</span> pow2 <span class="token operator">=</span> <span class="token function">make_pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> pow3 <span class="token operator">=</span> <span class="token function">make_pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">pow2</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">pow3</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 343</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u8111\u6D1E\u5927\u5F00</p><p>\u5F88\u4E45\u5F88\u4E45\u4EE5\u524D\uFF0C\u6709\u4E2A\u53EB\u963F\u9686\u4F50\xB7\u90B1\u5947\u7684\u5E05\u54E5\uFF0C\u53D1\u73B0\u53EA\u9700\u8981\u7528\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u7528\u8BA1\u7B97\u673A\u5B9E\u73B0\u8FD0\u7B97\uFF0C\u800C\u4E0D\u9700\u8981 <code>0</code>\u3001<code>1</code>\u3001<code>2</code>\u3001<code>3</code> \u8FD9\u4E9B\u6570\u5B57\u548C <code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u8FD9\u4E9B\u7B26\u53F7\u3002</p><p>JavaScript \u652F\u6301\u51FD\u6570\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528 JavaScript \u7528\u51FD\u6570\u6765\u5199\u8FD9\u4E9B\u8BA1\u7B97\u3002\u6765\u8BD5\u8BD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9A\u4E49\u6570\u5B570:</span>
<span class="token keyword">const</span> <span class="token function-variable function">zero</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>

<span class="token comment">// \u5B9A\u4E49\u6570\u5B571:</span>
<span class="token keyword">const</span> <span class="token function-variable function">one</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9A\u4E49\u52A0\u6CD5:</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">m</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BA1\u7B97\u6570\u5B572 = 1 + 1:</span>
<span class="token keyword">const</span> two <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>one<span class="token punctuation">,</span> one<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BA1\u7B97\u6570\u5B573 = 1 + 2:</span>
<span class="token keyword">const</span> three <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>one<span class="token punctuation">,</span> two<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BA1\u7B97\u6570\u5B575 = 2 + 3:</span>
<span class="token keyword">const</span> five <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>two<span class="token punctuation">,</span> three<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u60A8\u8BF4\u5B83\u662F 3 \u5C31\u662F 3\uFF0C\u60A8\u8BF4\u5B83\u662F 5 \u5C31\u662F 5\uFF0C\u60A8\u600E\u4E48\u8BC1\u660E?</span>

<span class="token comment">// \u5475\u5475\uFF0C\u770B\u8FD9\u91CC:</span>

<span class="token comment">// \u7ED9 3 \u4F20\u4E00\u4E2A\u51FD\u6570,\u4F1A\u6253\u5370 3 \u6B21:</span>
<span class="token function">three</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;print 3 times&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED9 5 \u4F20\u4E00\u4E2A\u51FD\u6570,\u4F1A\u6253\u5370 5 \u6B21:</span>
<span class="token function">five</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;print 5 times&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7EE7\u7EED\u63A5\u7740\u73A9\u4E00\u4F1A...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,50),c=[e];function o(u,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","closure.html.vue"]]);export{k as default};
