import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,a as s,b as n,f as a}from"./app.963e91c8.js";const l={},c=s("p",null,[n("\u8981\u8BA1\u7B97 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"},"1+2+3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])]),n(" \uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u5199\u8868\u8FBE\u5F0F:")],-1),o=a(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span>
<span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),i=s("p",null,[n("\u8981\u8BA1\u7B97 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"3"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mn",null,"10")]),s("annotation",{encoding:"application/x-tex"},"1+2+3+...+10")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"10")])])]),n(" \uFF0C\u52C9\u5F3A\u4E5F\u80FD\u5199\u51FA\u6765\u3002")],-1),r=s("p",null,[n("\u4F46\u662F\uFF0C\u8981\u8BA1\u7B97 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mn",null,"2"),s("mo",null,"+"),s("mn",null,"3"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mn",null,"10000")]),s("annotation",{encoding:"application/x-tex"},"1+2+3+...+10000")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"10000")])])]),n(" \uFF0C\u76F4\u63A5\u5199\u8868\u8FBE\u5F0F\u5C31\u4E0D\u53EF\u80FD\u4E86\u3002")],-1),u=a(`<p>\u4E3A\u4E86\u8BA9\u8BA1\u7B97\u673A\u80FD\u8BA1\u7B97\u6210\u5343\u4E0A\u4E07\u6B21\u7684\u91CD\u590D\u8FD0\u7B97\uFF0C\u6211\u4EEC\u5C31\u9700\u8981\u5FAA\u73AF\u8BED\u53E5\u3002</p><p>Python \u7684\u5FAA\u73AF\u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u662F <code>for...in</code> \u5FAA\u73AF\uFF0C\u4F9D\u6B21\u628A list \u6216 tuple \u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u8FED\u4EE3\u51FA\u6765\uFF0C\u770B\u4F8B\u5B50:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Michael&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tracy&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u8FD9\u6BB5\u4EE3\u7801\uFF0C\u4F1A\u4F9D\u6B21\u6253\u5370 <code>names</code> \u7684\u6BCF\u4E00\u4E2A\u5143\u7D20:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Michael
Bob
Tracy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5 <code>for x in ...</code> \u5FAA\u73AF\u5C31\u662F\u628A\u6BCF\u4E2A\u5143\u7D20\u4EE3\u5165\u53D8\u91CF <code>x</code>\uFF0C\u7136\u540E\u6267\u884C\u7F29\u8FDB\u5757\u7684\u8BED\u53E5\u3002</p><p>\u518D\u6BD4\u5982\u6211\u4EEC\u60F3\u8BA1\u7B97 1-10 \u7684\u6574\u6570\u4E4B\u548C\uFF0C\u53EF\u4EE5\u7528\u4E00\u4E2A <code>sum</code> \u53D8\u91CF\u505A\u7D2F\u52A0:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">+</span> x
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8981\u8BA1\u7B97 1-100 \u7684\u6574\u6570\u4E4B\u548C\uFF0C\u4ECE 1 \u5199\u5230 100 \u6709\u70B9\u56F0\u96BE\uFF0C\u5E78\u597D Python \u63D0\u4F9B\u4E00\u4E2A <code>range()</code> \u51FD\u6570\uFF0C\u53EF\u4EE5\u751F\u6210\u4E00\u4E2A\u6574\u6570\u5E8F\u5217\uFF0C\u518D\u901A\u8FC7 <code>list()</code> \u51FD\u6570\u53EF\u4EE5\u8F6C\u6362\u4E3A list\u3002\u6BD4\u5982 <code>range(5)</code> \u751F\u6210\u7684\u5E8F\u5217\u662F\u4ECE 0 \u5F00\u59CB\u5C0F\u4E8E 5 \u7684\u6574\u6570:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>range(101)</code> \u5C31\u53EF\u4EE5\u751F\u6210 0-100 \u7684\u6574\u6570\u5E8F\u5217\uFF0C\u8BA1\u7B97\u5982\u4E0B:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">+</span> x
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF7\u81EA\u884C\u8FD0\u884C\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u770B\u770B\u7ED3\u679C\u662F\u4E0D\u662F\u5F53\u5E74\u9AD8\u65AF\u540C\u5B66\u5FC3\u7B97\u51FA\u7684 5050\u3002</p><p>\u7B2C\u4E8C\u79CD\u5FAA\u73AF\u662F <code>while</code> \u5FAA\u73AF\uFF0C\u53EA\u8981\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u5C31\u4E0D\u65AD\u5FAA\u73AF\uFF0C\u6761\u4EF6\u4E0D\u6EE1\u8DB3\u65F6\u9000\u51FA\u5FAA\u73AF\u3002\u6BD4\u5982\u6211\u4EEC\u8981\u8BA1\u7B97 100 \u4EE5\u5185\u6240\u6709\u5947\u6570\u4E4B\u548C\uFF0C\u53EF\u4EE5\u7528 <code>while</code> \u5FAA\u73AF\u5B9E\u73B0:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
n <span class="token operator">=</span> <span class="token number">99</span>
<span class="token keyword">while</span> n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">+</span> n
    n <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5FAA\u73AF\u5185\u90E8\u53D8\u91CF <code>n</code> \u4E0D\u65AD\u81EA\u51CF\uFF0C\u76F4\u5230\u53D8\u4E3A <code>-1</code> \u65F6\uFF0C\u4E0D\u518D\u6EE1\u8DB3 <code>while</code> \u6761\u4EF6\uFF0C\u5FAA\u73AF\u9000\u51FA\u3002</p><h2 id="break" tabindex="-1"><a class="header-anchor" href="#break" aria-hidden="true">#</a> break</h2><p>\u5728\u5FAA\u73AF\u4E2D\uFF0C<code>break</code> \u8BED\u53E5\u53EF\u4EE5\u63D0\u524D\u9000\u51FA\u5FAA\u73AF\u3002\u4F8B\u5982\uFF0C\u672C\u6765\u8981\u5FAA\u73AF\u6253\u5370 1 \uFF5E 100 \u7684\u6570\u5B57:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> n <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;END&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u6253\u5370\u51FA 1~100\u3002</p><p>\u5982\u679C\u8981\u63D0\u524D\u7ED3\u675F\u5FAA\u73AF\uFF0C\u53EF\u4EE5\u7528 <code>break</code> \u8BED\u53E5:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> n <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> n <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">:</span> <span class="token comment"># \u5F53n = 11\u65F6\uFF0C\u6761\u4EF6\u6EE1\u8DB3\uFF0C\u6267\u884Cbreak\u8BED\u53E5</span>
        <span class="token keyword">break</span> <span class="token comment"># break\u8BED\u53E5\u4F1A\u7ED3\u675F\u5F53\u524D\u5FAA\u73AF</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;END&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u6253\u5370\u51FA 1~10 \u540E\uFF0C\u7D27\u63A5\u7740\u6253\u5370 <code>END</code>\uFF0C\u7A0B\u5E8F\u7ED3\u675F\u3002</p><p>\u53EF\u89C1 <code>break</code> \u7684\u4F5C\u7528\u662F\u63D0\u524D\u7ED3\u675F\u5FAA\u73AF\u3002</p><h2 id="continue" tabindex="-1"><a class="header-anchor" href="#continue" aria-hidden="true">#</a> continue</h2><p>\u5728\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>continue</code> \u8BED\u53E5\uFF0C\u8DF3\u8FC7\u5F53\u524D\u7684\u8FD9\u6B21\u5FAA\u73AF\uFF0C\u76F4\u63A5\u5F00\u59CB\u4E0B\u4E00\u6B21\u5FAA\u73AF\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> n <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u7A0B\u5E8F\u53EF\u4EE5\u6253\u5370\u51FA 1 \uFF5E 10\u3002\u4F46\u662F\uFF0C\u5982\u679C\u6211\u4EEC\u60F3\u53EA\u6253\u5370\u5947\u6570\uFF0C\u53EF\u4EE5\u7528 <code>continue</code> \u8BED\u53E5\u8DF3\u8FC7\u67D0\u4E9B\u5FAA\u73AF:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> n <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    n <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token keyword">if</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment"># \u5982\u679Cn\u662F\u5076\u6570\uFF0C\u6267\u884Ccontinue\u8BED\u53E5</span>
        <span class="token keyword">continue</span> <span class="token comment"># continue\u8BED\u53E5\u4F1A\u76F4\u63A5\u7EE7\u7EED\u4E0B\u4E00\u8F6E\u5FAA\u73AF\uFF0C\u540E\u7EED\u7684print()\u8BED\u53E5\u4E0D\u4F1A\u6267\u884C</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u6253\u5370\u7684\u4E0D\u518D\u662F 1 \uFF5E 10\uFF0C\u800C\u662F 1\uFF0C3\uFF0C5\uFF0C7\uFF0C9\u3002</p><p>\u53EF\u89C1 <code>continue</code> \u7684\u4F5C\u7528\u662F\u63D0\u524D\u7ED3\u675F\u672C\u8F6E\u5FAA\u73AF\uFF0C\u5E76\u76F4\u63A5\u5F00\u59CB\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002</p><h2 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h2><p>\u5FAA\u73AF\u662F\u8BA9\u8BA1\u7B97\u673A\u505A\u91CD\u590D\u4EFB\u52A1\u7684\u6709\u6548\u7684\u65B9\u6CD5\u3002</p><p><code>break</code> \u8BED\u53E5\u53EF\u4EE5\u5728\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\u76F4\u63A5\u9000\u51FA\u5FAA\u73AF\uFF0C\u800C <code>continue</code> \u8BED\u53E5\u53EF\u4EE5\u63D0\u524D\u7ED3\u675F\u672C\u8F6E\u5FAA\u73AF\uFF0C\u5E76\u76F4\u63A5\u5F00\u59CB\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002\u8FD9\u4E24\u4E2A\u8BED\u53E5\u901A\u5E38\u90FD\u5FC5\u987B\u914D\u5408 <code>if</code> \u8BED\u53E5\u4F7F\u7528\u3002</p><p>\u8981\u7279\u522B\u6CE8\u610F\uFF0C\u4E0D\u8981\u6EE5\u7528 <code>break</code> \u548C <code>continue</code> \u8BED\u53E5\u3002<code>break</code> \u548C <code>continue</code> \u4F1A\u9020\u6210\u4EE3\u7801\u6267\u884C\u903B\u8F91\u5206\u53C9\u8FC7\u591A\uFF0C\u5BB9\u6613\u51FA\u9519\u3002\u5927\u591A\u6570\u5FAA\u73AF\u5E76\u4E0D\u9700\u8981\u7528\u5230 <code>break</code> \u548C <code>continue</code> \u8BED\u53E5\uFF0C\u4E0A\u9762\u7684\u4E24\u4E2A\u4F8B\u5B50\uFF0C\u90FD\u53EF\u4EE5\u901A\u8FC7\u6539\u5199\u5FAA\u73AF\u6761\u4EF6\u6216\u8005\u4FEE\u6539\u5FAA\u73AF\u903B\u8F91\uFF0C\u53BB\u6389 <code>break</code> \u548C <code>continue</code> \u8BED\u53E5\u3002</p><p>\u6709\u4E9B\u65F6\u5019\uFF0C\u5982\u679C\u4EE3\u7801\u5199\u5F97\u6709\u95EE\u9898\uFF0C\u4F1A\u8BA9\u7A0B\u5E8F\u9677\u5165\u201C\u6B7B\u5FAA\u73AF\u201D\uFF0C\u4E5F\u5C31\u662F\u6C38\u8FDC\u5FAA\u73AF\u4E0B\u53BB\u3002\u8FD9\u65F6\u53EF\u4EE5\u7528 <code>Ctrl + C</code> \u9000\u51FA\u7A0B\u5E8F\uFF0C\u6216\u8005\u5F3A\u5236\u7ED3\u675F Python \u8FDB\u7A0B\u3002</p>`,36),d=[c,o,i,r,u];function m(k,b){return p(),t("div",null,d)}const g=e(l,[["render",m],["__file","loop.html.vue"]]);export{g as default};
