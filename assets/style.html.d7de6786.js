import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as t,a as n,b as s,e as o,f as c,r as l}from"./app.8754ca23.js";const i={},u=n("h1",{id:"\u7F16\u7A0B\u98CE\u683C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7F16\u7A0B\u98CE\u683C","aria-hidden":"true"},"#"),s(" \u7F16\u7A0B\u98CE\u683C")],-1),r=n("p",null,"\u672C\u7AE0\u63A2\u8BA8\u5982\u4F55\u5C06 ES6 \u7684\u65B0\u8BED\u6CD5\uFF0C\u8FD0\u7528\u5230\u7F16\u7801\u5B9E\u8DF5\u4E4B\u4E2D\uFF0C\u4E0E\u4F20\u7EDF\u7684 JavaScript \u8BED\u6CD5\u7ED3\u5408\u5728\u4E00\u8D77\uFF0C\u5199\u51FA\u5408\u7406\u7684\u3001\u6613\u4E8E\u9605\u8BFB\u548C\u7EF4\u62A4\u7684\u4EE3\u7801\u3002",-1),d={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="\u5757\u7EA7\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u5757\u7EA7\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u5757\u7EA7\u4F5C\u7528\u57DF</h2><ol><li><p><code>let</code> \u53D6\u4EE3 <code>var</code></p><p>ES6 \u63D0\u51FA\u4E86\u4E24\u4E2A\u65B0\u7684\u58F0\u660E\u53D8\u91CF\u7684\u547D\u4EE4: <code>let</code> \u548C <code>const</code>\u3002\u5176\u4E2D\uFF0C<code>let</code> \u5B8C\u5168\u53EF\u4EE5\u53D6\u4EE3 <code>var</code>\uFF0C\u56E0\u4E3A\u4E24\u8005\u8BED\u4E49\u76F8\u540C\uFF0C\u800C\u4E14 <code>let</code> \u6CA1\u6709\u526F\u4F5C\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5982\u679C\u7528 <code>var</code> \u66FF\u4EE3 <code>let</code>\uFF0C\u5B9E\u9645\u4E0A\u5C31\u58F0\u660E\u4E86\u4E24\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u8FD9\u663E\u7136\u4E0D\u662F\u672C\u610F\u3002\u53D8\u91CF\u5E94\u8BE5\u53EA\u5728\u5176\u58F0\u660E\u7684\u4EE3\u7801\u5757\u5185\u6709\u6548\uFF0C<code>var</code> \u547D\u4EE4\u505A\u4E0D\u5230\u8FD9\u4E00\u70B9\u3002</p><p><code>var</code> \u547D\u4EE4\u5B58\u5728\u53D8\u91CF\u63D0\u5347\u6548\u7528\uFF0C<code>let</code> \u547D\u4EE4\u6CA1\u6709\u8FD9\u4E2A\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5982\u679C\u4F7F\u7528 <code>var</code> \u66FF\u4EE3 <code>let</code>\uFF0C<code>console.log</code> \u90A3\u4E00\u884C\u5C31\u4E0D\u4F1A\u62A5\u9519\uFF0C\u800C\u662F\u4F1A\u8F93\u51FA <code>undefined</code>\uFF0C\u56E0\u4E3A\u53D8\u91CF\u58F0\u660E\u63D0\u5347\u5230\u4EE3\u7801\u5757\u7684\u5934\u90E8\u3002\u8FD9\u8FDD\u53CD\u4E86\u53D8\u91CF\u5148\u58F0\u660E\u540E\u4F7F\u7528\u7684\u539F\u5219\u3002</p><p>\u6240\u4EE5\uFF0C\u5EFA\u8BAE\u4E0D\u518D\u4F7F\u7528 <code>var</code> \u547D\u4EE4\uFF0C\u800C\u662F\u4F7F\u7528 <code>let</code> \u547D\u4EE4\u53D6\u4EE3\u3002</p></li><li><p>\u5168\u5C40\u5E38\u91CF\u548C\u7EBF\u7A0B\u5B89\u5168</p><p>\u5728 <code>let</code> \u548C <code>const</code> \u4E4B\u95F4\uFF0C\u5EFA\u8BAE\u4F18\u5148\u4F7F\u7528 <code>const</code>\uFF0C\u5C24\u5176\u662F\u5728\u5168\u5C40\u73AF\u5883\uFF0C\u4E0D\u5E94\u8BE5\u8BBE\u7F6E\u53D8\u91CF\uFF0C\u53EA\u5E94\u8BBE\u7F6E\u5E38\u91CF\u3002</p><p><code>const</code> \u4F18\u4E8E <code>let</code> \u6709\u51E0\u4E2A\u539F\u56E0\u3002\u4E00\u4E2A\u662F <code>const</code> \u53EF\u4EE5\u63D0\u9192\u9605\u8BFB\u7A0B\u5E8F\u7684\u4EBA\uFF0C\u8FD9\u4E2A\u53D8\u91CF\u4E0D\u5E94\u8BE5\u6539\u53D8\uFF1B\u53E6\u4E00\u4E2A\u662F <code>const</code> \u6BD4\u8F83\u7B26\u5408\u51FD\u6570\u5F0F\u7F16\u7A0B\u601D\u60F3\uFF0C\u8FD0\u7B97\u4E0D\u6539\u53D8\u503C\uFF0C\u53EA\u662F\u65B0\u5EFA\u503C\uFF0C\u800C\u4E14\u8FD9\u6837\u4E5F\u6709\u5229\u4E8E\u5C06\u6765\u7684\u5206\u5E03\u5F0F\u8FD0\u7B97\uFF1B\u6700\u540E\u4E00\u4E2A\u539F\u56E0\u662F JavaScript \u7F16\u8BD1\u5668\u4F1A\u5BF9 <code>const</code> \u8FDB\u884C\u4F18\u5316\uFF0C\u6240\u4EE5\u591A\u4F7F\u7528 <code>const</code>\uFF0C\u6709\u5229\u4E8E\u63D0\u9AD8\u7A0B\u5E8F\u7684\u8FD0\u884C\u6548\u7387\uFF0C\u4E5F\u5C31\u662F\u8BF4 <code>let</code> \u548C <code>const</code> \u7684\u672C\u8D28\u533A\u522B\uFF0C\u5176\u5B9E\u662F\u7F16\u8BD1\u5668\u5185\u90E8\u7684\u5904\u7406\u4E0D\u540C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>const</code> \u58F0\u660E\u5E38\u91CF\u8FD8\u6709\u4E24\u4E2A\u597D\u5904\uFF0C\u4E00\u662F\u9605\u8BFB\u4EE3\u7801\u7684\u4EBA\u7ACB\u523B\u4F1A\u610F\u8BC6\u5230\u4E0D\u5E94\u8BE5\u4FEE\u6539\u8FD9\u4E2A\u503C\uFF0C\u4E8C\u662F\u9632\u6B62\u4E86\u65E0\u610F\u95F4\u4FEE\u6539\u53D8\u91CF\u503C\u6240\u5BFC\u81F4\u7684\u9519\u8BEF\u3002</p><p>\u6240\u6709\u7684\u51FD\u6570\u90FD\u5E94\u8BE5\u8BBE\u7F6E\u4E3A\u5E38\u91CF\u3002</p><p>\u957F\u8FDC\u6765\u770B\uFF0CJavaScript \u53EF\u80FD\u4F1A\u6709\u591A\u7EBF\u7A0B\u7684\u5B9E\u73B0(\u6BD4\u5982 Intel \u516C\u53F8\u7684 River Trail \u90A3\u4E00\u7C7B\u7684\u9879\u76EE)\uFF0C\u8FD9\u65F6 <code>let</code> \u8868\u793A\u7684\u53D8\u91CF\uFF0C\u53EA\u5E94\u51FA\u73B0\u5728\u5355\u7EBF\u7A0B\u8FD0\u884C\u7684\u4EE3\u7801\u4E2D\uFF0C\u4E0D\u80FD\u662F\u591A\u7EBF\u7A0B\u5171\u4EAB\u7684\uFF0C\u8FD9\u6837\u6709\u5229\u4E8E\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\u3002</p></li></ol><h2 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h2><p>\u9759\u6001\u5B57\u7B26\u4E32\u4E00\u5F8B\u4F7F\u7528\u5355\u5F15\u53F7\u6216\u53CD\u5F15\u53F7\uFF0C\u4E0D\u4F7F\u7528\u53CC\u5F15\u53F7\u3002\u52A8\u6001\u5B57\u7B26\u4E32\u4F7F\u7528\u53CD\u5F15\u53F7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&quot;foobar&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span> <span class="token operator">+</span> a <span class="token operator">+</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// acceptable</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">foobar</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token string">&quot;foobar&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">foo</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">bar</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> \u89E3\u6784\u8D4B\u503C</h2><p>\u4F7F\u7528\u6570\u7EC4\u6210\u5458\u5BF9\u53D8\u91CF\u8D4B\u503C\u65F6\uFF0C\u4F18\u5148\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> first <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> second <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>first<span class="token punctuation">,</span> second<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u51FD\u6570\u7684\u53C2\u6570\u5982\u679C\u662F\u5BF9\u8C61\u7684\u6210\u5458\uFF0C\u4F18\u5148\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> firstName <span class="token operator">=</span> user<span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>
  <span class="token keyword">const</span> lastName <span class="token operator">=</span> user<span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// best</span>
<span class="token keyword">function</span> <span class="token function">getFullName</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> firstName<span class="token punctuation">,</span> lastName <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u51FD\u6570\u8FD4\u56DE\u591A\u4E2A\u503C\uFF0C\u4F18\u5148\u4F7F\u7528\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\uFF0C\u800C\u4E0D\u662F\u6570\u7EC4\u7684\u89E3\u6784\u8D4B\u503C\u3002\u8FD9\u6837\u4FBF\u4E8E\u4EE5\u540E\u6DFB\u52A0\u8FD4\u56DE\u503C\uFF0C\u4EE5\u53CA\u66F4\u6539\u8FD4\u56DE\u503C\u7684\u987A\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">processInput</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> bottom <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> left<span class="token punctuation">,</span> right <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">processInput</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61" aria-hidden="true">#</a> \u5BF9\u8C61</h2><p>\u5355\u884C\u5B9A\u4E49\u7684\u5BF9\u8C61\uFF0C\u6700\u540E\u4E00\u4E2A\u6210\u5458\u4E0D\u4EE5\u9017\u53F7\u7ED3\u5C3E\u3002\u591A\u884C\u5B9A\u4E49\u7684\u5BF9\u8C61\uFF0C\u6700\u540E\u4E00\u4E2A\u6210\u5458\u4EE5\u9017\u53F7\u7ED3\u5C3E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">k1</span><span class="token operator">:</span> v1<span class="token punctuation">,</span> <span class="token literal-property property">k2</span><span class="token operator">:</span> v2<span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">k1</span><span class="token operator">:</span> v1<span class="token punctuation">,</span>
  <span class="token literal-property property">k2</span><span class="token operator">:</span> v2
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">k1</span><span class="token operator">:</span> v1<span class="token punctuation">,</span> <span class="token literal-property property">k2</span><span class="token operator">:</span> v2 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">k1</span><span class="token operator">:</span> v1<span class="token punctuation">,</span>
  <span class="token literal-property property">k2</span><span class="token operator">:</span> v2<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u8C61\u5C3D\u91CF\u9759\u6001\u5316\uFF0C\u4E00\u65E6\u5B9A\u4E49\uFF0C\u5C31\u4E0D\u5F97\u968F\u610F\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\u3002\u5982\u679C\u6DFB\u52A0\u5C5E\u6027\u4E0D\u53EF\u907F\u514D\uFF0C\u8981\u4F7F\u7528 <code>Object.assign</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment">// if reshape unavoidable</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u662F\u52A8\u6001\u7684\uFF0C\u53EF\u4EE5\u5728\u521B\u9020\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u4F7F\u7528\u5C5E\u6027\u8868\u8FBE\u5F0F\u5B9A\u4E49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;San Francisco&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&quot;enabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;San Francisco&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token string">&quot;enabled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61 <code>obj</code> \u7684\u6700\u540E\u4E00\u4E2A\u5C5E\u6027\u540D\uFF0C\u9700\u8981\u8BA1\u7B97\u5F97\u5230\u3002\u8FD9\u65F6\u6700\u597D\u91C7\u7528\u5C5E\u6027\u8868\u8FBE\u5F0F\uFF0C\u5728\u65B0\u5EFA <code>obj</code> \u7684\u65F6\u5019\uFF0C\u5C06\u8BE5\u5C5E\u6027\u4E0E\u5176\u4ED6\u5C5E\u6027\u5B9A\u4E49\u5728\u4E00\u8D77\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u6240\u6709\u5C5E\u6027\u5C31\u5728\u4E00\u4E2A\u5730\u65B9\u5B9A\u4E49\u4E86\u3002</p><p>\u53E6\u5916\uFF0C\u5BF9\u8C61\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u5C3D\u91CF\u91C7\u7528\u7B80\u6D01\u8868\u8FBE\u6CD5\uFF0C\u8FD9\u6837\u6613\u4E8E\u63CF\u8FF0\u548C\u4E66\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ref <span class="token operator">=</span> <span class="token string">&quot;some value&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// bad</span>
<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">ref</span><span class="token operator">:</span> ref<span class="token punctuation">,</span>

  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token function-variable function">addValue</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> atom <span class="token operator">=</span> <span class="token punctuation">{</span>
  ref<span class="token punctuation">,</span>

  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>

  <span class="token function">addValue</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> atom<span class="token punctuation">.</span>value <span class="token operator">+</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><p>\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26(...)\u62F7\u8D1D\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> len <span class="token operator">=</span> items<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> i<span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  itemsCopy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 Array.from \u65B9\u6CD5\uFF0C\u5C06\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\u8F6C\u4E3A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><p>\u7ACB\u5373\u6267\u884C\u51FD\u6570\u53EF\u4EE5\u5199\u6210\u7BAD\u5934\u51FD\u6570\u7684\u5F62\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome to the Internet.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E9B\u9700\u8981\u4F7F\u7528\u51FD\u6570\u8868\u8FBE\u5F0F\u7684\u573A\u5408\uFF0C\u5C3D\u91CF\u7528\u7BAD\u5934\u51FD\u6570\u4EE3\u66FF\u3002\u56E0\u4E3A\u8FD9\u6837\u66F4\u7B80\u6D01\uFF0C\u800C\u4E14\u7ED1\u5B9A\u4E86 this\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7BAD\u5934\u51FD\u6570\u53D6\u4EE3 <code>Function.prototype.bind</code>\uFF0C\u4E0D\u5E94\u518D\u7528 self/_this/that \u7ED1\u5B9A this\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">boundMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// acceptable</span>
<span class="token keyword">const</span> boundMethod <span class="token operator">=</span> <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// best</span>
<span class="token keyword">const</span> <span class="token function-variable function">boundMethod</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">method</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u7684\u3001\u5355\u884C\u7684\u3001\u4E0D\u4F1A\u590D\u7528\u7684\u51FD\u6570\uFF0C\u5EFA\u8BAE\u91C7\u7528\u7BAD\u5934\u51FD\u6570\u3002\u5982\u679C\u51FD\u6570\u4F53\u8F83\u4E3A\u590D\u6742\uFF0C\u884C\u6570\u8F83\u591A\uFF0C\u8FD8\u662F\u5E94\u8BE5\u91C7\u7528\u4F20\u7EDF\u7684\u51FD\u6570\u5199\u6CD5\u3002</p><p>\u6240\u6709\u914D\u7F6E\u9879\u90FD\u5E94\u8BE5\u96C6\u4E2D\u5728\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u653E\u5728\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u5E03\u5C14\u503C\u4E0D\u53EF\u4EE5\u76F4\u63A5\u4F5C\u4E3A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> option <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token punctuation">{</span> option <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8981\u5728\u51FD\u6570\u4F53\u5185\u4F7F\u7528 arguments \u53D8\u91CF\uFF0C\u4F7F\u7528 rest \u8FD0\u7B97\u7B26 <code>...</code> \u4EE3\u66FF\u3002\u56E0\u4E3A rest \u8FD0\u7B97\u7B26\u663E\u5F0F\u8868\u660E\u60A8\u60F3\u8981\u83B7\u53D6\u53C2\u6570\uFF0C\u800C\u4E14 arguments \u662F\u4E00\u4E2A\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF0C\u800C rest \u8FD0\u7B97\u7B26\u53EF\u4EE5\u63D0\u4F9B\u4E00\u4E2A\u771F\u6B63\u7684\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">concatenateAll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u9ED8\u8BA4\u503C\u8BED\u6CD5\u8BBE\u7F6E\u51FD\u6570\u53C2\u6570\u7684\u9ED8\u8BA4\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  opts <span class="token operator">=</span> opts <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// good</span>
<span class="token keyword">function</span> <span class="token function">handleThings</span><span class="token punctuation">(</span><span class="token parameter">opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map-\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#map-\u7ED3\u6784" aria-hidden="true">#</a> Map \u7ED3\u6784</h2><p>\u6CE8\u610F\u533A\u5206 Object \u548C Map\uFF0C\u53EA\u6709\u6A21\u62DF\u73B0\u5B9E\u4E16\u754C\u7684\u5B9E\u4F53\u5BF9\u8C61\u65F6\uFF0C\u624D\u4F7F\u7528 Object\u3002\u5982\u679C\u53EA\u662F\u9700\u8981 <code>key: value</code> \u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F7F\u7528 Map \u7ED3\u6784\u3002\u56E0\u4E3A Map \u6709\u5185\u5EFA\u7684\u904D\u5386\u673A\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="class" tabindex="-1"><a class="header-anchor" href="#class" aria-hidden="true">#</a> Class</h2><p>\u603B\u662F\u7528 Class\uFF0C\u53D6\u4EE3\u9700\u8981 prototype \u7684\u64CD\u4F5C\u3002\u56E0\u4E3A Class \u7684\u5199\u6CD5\u66F4\u7B80\u6D01\uFF0C\u66F4\u6613\u4E8E\u7406\u89E3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">function</span> <span class="token function">Queue</span><span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Queue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>contents<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>extends</code> \u5B9E\u73B0\u7EE7\u627F\uFF0C\u56E0\u4E3A\u8FD9\u6837\u66F4\u7B80\u5355\uFF0C\u4E0D\u4F1A\u6709\u7834\u574F <code>instanceof</code> \u8FD0\u7B97\u7684\u5371\u9669\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> inherits <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;inherits&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">PeekableQueue</span><span class="token punctuation">(</span><span class="token parameter">contents</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Queue</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> contents<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">inherits</span><span class="token punctuation">(</span>PeekableQueue<span class="token punctuation">,</span> Queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">PeekableQueue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">peek</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">class</span> <span class="token class-name">PeekableQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757" aria-hidden="true">#</a> \u6A21\u5757</h2><p>\u9996\u5148\uFF0CModule \u8BED\u6CD5\u662F JavaScript \u6A21\u5757\u7684\u6807\u51C6\u5199\u6CD5\uFF0C\u575A\u6301\u4F7F\u7528\u8FD9\u79CD\u5199\u6CD5\u3002\u4F7F\u7528 <code>import</code> \u53D6\u4EE3 <code>require</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;moduleA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> func1 <span class="token operator">=</span> moduleA<span class="token punctuation">.</span>func1<span class="token punctuation">;</span>
<span class="token keyword">const</span> func2 <span class="token operator">=</span> moduleA<span class="token punctuation">.</span>func2<span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> func1<span class="token punctuation">,</span> func2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;moduleA&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>export</code> \u53D6\u4EE3 <code>module.exports</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// commonJS\u7684\u5199\u6CD5</span>
<span class="token keyword">var</span> React <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;react&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> Breadcrumbs <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>nav <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Breadcrumbs<span class="token punctuation">;</span>

<span class="token comment">// ES6\u7684\u5199\u6CD5</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Breadcrumbs</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>nav <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Breadcrumbs<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6A21\u5757\u53EA\u6709\u4E00\u4E2A\u8F93\u51FA\u503C\uFF0C\u5C31\u4F7F\u7528 <code>export default</code>\uFF0C\u5982\u679C\u6A21\u5757\u6709\u591A\u4E2A\u8F93\u51FA\u503C\uFF0C\u5C31\u4E0D\u4F7F\u7528 <code>export default</code>\uFF0C<code>export default</code> \u4E0E\u666E\u901A\u7684 <code>export</code> \u4E0D\u8981\u540C\u65F6\u4F7F\u7528\u3002</p><p>\u4E0D\u8981\u5728\u6A21\u5757\u8F93\u5165\u4E2D\u4F7F\u7528\u901A\u914D\u7B26\u3002\u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u786E\u4FDD\u60A8\u7684\u6A21\u5757\u4E4B\u4E2D\uFF0C\u6709\u4E00\u4E2A\u9ED8\u8BA4\u8F93\u51FA(export default)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> myObject <span class="token keyword">from</span> <span class="token string">&quot;./importModule&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
<span class="token keyword">import</span> myObject <span class="token keyword">from</span> <span class="token string">&quot;./importModule&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6A21\u5757\u9ED8\u8BA4\u8F93\u51FA\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u540D\u7684\u9996\u5B57\u6BCD\u5E94\u8BE5\u5C0F\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">makeStyleGuide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> makeStyleGuide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6A21\u5757\u9ED8\u8BA4\u8F93\u51FA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u540D\u7684\u9996\u5B57\u6BCD\u5E94\u8BE5\u5927\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> StyleGuide <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">es6</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> StyleGuide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="eslint-\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#eslint-\u7684\u4F7F\u7528" aria-hidden="true">#</a> ESLint \u7684\u4F7F\u7528</h2><p>ESLint \u662F\u4E00\u4E2A\u8BED\u6CD5\u89C4\u5219\u548C\u4EE3\u7801\u98CE\u683C\u7684\u68C0\u67E5\u5DE5\u5177\uFF0C\u53EF\u4EE5\u7528\u6765\u4FDD\u8BC1\u5199\u51FA\u8BED\u6CD5\u6B63\u786E\u3001\u98CE\u683C\u7EDF\u4E00\u7684\u4EE3\u7801\u3002</p><p>\u9996\u5148\uFF0C\u5B89\u88C5 ESLint\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> eslint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u5B89\u88C5 Airbnb \u8BED\u6CD5\u89C4\u5219\uFF0C\u4EE5\u53CA import\u3001a11y\u3001react \u63D2\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> eslint-config-airbnb
<span class="token function">npm</span> i <span class="token parameter variable">-g</span> eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\uFF0C\u5728\u9879\u76EE\u7684\u6839\u76EE\u5F55\u4E0B\u65B0\u5EFA\u4E00\u4E2A <code>.eslintrc</code> \u6587\u4EF6\uFF0C\u914D\u7F6E ESLint\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint-config-airbnb&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u5C31\u53EF\u4EE5\u68C0\u67E5\uFF0C\u5F53\u524D\u9879\u76EE\u7684\u4EE3\u7801\u662F\u5426\u7B26\u5408\u9884\u8BBE\u7684\u89C4\u5219\u3002</p><p><code>index.js</code> \u6587\u4EF6\u7684\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> unusued <span class="token operator">=</span> <span class="token string">&quot;I have no purpose!&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">;</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 ESLint \u68C0\u67E5\u8FD9\u4E2A\u6587\u4EF6\uFF0C\u5C31\u4F1A\u62A5\u51FA\u9519\u8BEF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ eslint index.js
index.js
  <span class="token number">1</span>:1  error  Unexpected var, use <span class="token builtin class-name">let</span> or const instead          no-var
  <span class="token number">1</span>:5  error  unusued is defined but never used                 no-unused-vars
  <span class="token number">4</span>:5  error  Expected indentation of <span class="token number">2</span> characters but found <span class="token number">4</span>  indent
  <span class="token number">4</span>:5  error  Unexpected var, use <span class="token builtin class-name">let</span> or const instead          no-var
  <span class="token number">5</span>:5  error  Expected indentation of <span class="token number">2</span> characters but found <span class="token number">4</span>  indent

\u2716 <span class="token number">5</span> problems <span class="token punctuation">(</span><span class="token number">5</span> errors, <span class="token number">0</span> warnings<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\uFF0C\u539F\u6587\u4EF6\u6709\u4E94\u4E2A\u9519\u8BEF\uFF0C\u5176\u4E2D\u4E24\u4E2A\u662F\u4E0D\u5E94\u8BE5\u4F7F\u7528 <code>var</code> \u547D\u4EE4\uFF0C\u800C\u8981\u4F7F\u7528 <code>let</code> \u6216 <code>const</code>\uFF1B\u4E00\u4E2A\u662F\u5B9A\u4E49\u4E86\u53D8\u91CF\uFF0C\u5374\u6CA1\u6709\u4F7F\u7528\uFF1B\u53E6\u5916\u4E24\u4E2A\u662F\u884C\u9996\u7F29\u8FDB\u4E3A 4 \u4E2A\u7A7A\u683C\uFF0C\u800C\u4E0D\u662F\u89C4\u5B9A\u7684 2 \u4E2A\u7A7A\u683C\u3002</p>`,75);function v(m,b){const a=l("ExternalLinkIcon");return e(),t("div",null,[u,r,n("p",null,[s("\u591A\u5BB6\u516C\u53F8\u548C\u7EC4\u7EC7\u5DF2\u7ECF\u516C\u5F00\u4E86\u5B83\u4EEC\u7684\u98CE\u683C\u89C4\u8303\uFF0C\u4E0B\u9762\u7684\u5185\u5BB9\u4E3B\u8981\u53C2\u8003\u4E86 "),n("a",d,[s("Airbnb"),o(a)]),s(" \u516C\u53F8\u7684 JavaScript \u98CE\u683C\u89C4\u8303\u3002")]),k])}const f=p(i,[["render",v],["__file","style.html.vue"]]);export{f as default};
