import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as i,a as n,b as s,e as p,f as a,r as u}from"./app.9d9222aa.js";const l={},k=n("p",null,"ES2017 \u6807\u51C6\u5F15\u5165\u4E86 async \u51FD\u6570\uFF0C\u4F7F\u5F97\u5F02\u6B65\u64CD\u4F5C\u53D8\u5F97\u66F4\u52A0\u65B9\u4FBF\u3002",-1),r=n("p",null,"Async \u51FD\u6570\u662F\u4EC0\u4E48? \u4E00\u53E5\u8BDD\uFF0C\u5B83\u5C31\u662F Generator \u51FD\u6570\u7684\u8BED\u6CD5\u7CD6\u3002",-1),d=a(`<p>\u524D\u6587\u6709\u4E00\u4E2A Generator \u51FD\u6570\uFF0C\u4F9D\u6B21\u8BFB\u53D6\u4E24\u4E2A\u6587\u4EF6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">readFile</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;/etc/fstab&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;/etc/shells&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5199\u6210 <code>async</code> \u51FD\u6570\uFF0C\u5C31\u662F\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">asyncReadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;/etc/fstab&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;/etc/shells&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u6BD4\u8F83\u5C31\u4F1A\u53D1\u73B0\uFF0C<code>async</code> \u51FD\u6570\u5C31\u662F\u5C06 Generator \u51FD\u6570\u7684\u661F\u53F7(<code>*</code>)\u66FF\u6362\u6210 <code>async</code>\uFF0C\u5C06 <code>yield</code> \u66FF\u6362\u6210 <code>await</code>\uFF0C\u4EC5\u6B64\u800C\u5DF2\u3002</p><p><code>async</code> \u51FD\u6570\u5BF9 Generator \u51FD\u6570\u7684\u6539\u8FDB\uFF0C\u4F53\u73B0\u5728\u4EE5\u4E0B\u56DB\u70B9\u3002</p><p>(1)\u5185\u7F6E\u6267\u884C\u5668\u3002</p><p>Generator \u51FD\u6570\u7684\u6267\u884C\u5FC5\u987B\u9760\u6267\u884C\u5668\uFF0C\u6240\u4EE5\u624D\u6709\u4E86 <code>co</code> \u6A21\u5757\uFF0C\u800C <code>async</code> \u51FD\u6570\u81EA\u5E26\u6267\u884C\u5668\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>async</code> \u51FD\u6570\u7684\u6267\u884C\uFF0C\u4E0E\u666E\u901A\u51FD\u6570\u4E00\u6A21\u4E00\u6837\uFF0C\u53EA\u8981\u4E00\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">asyncReadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u8C03\u7528\u4E86 <code>asyncReadFile</code> \u51FD\u6570\uFF0C\u7136\u540E\u5B83\u5C31\u4F1A\u81EA\u52A8\u6267\u884C\uFF0C\u8F93\u51FA\u6700\u540E\u7ED3\u679C\u3002\u8FD9\u5B8C\u5168\u4E0D\u50CF Generator \u51FD\u6570\uFF0C\u9700\u8981\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u6216\u8005\u7528 <code>co</code> \u6A21\u5757\uFF0C\u624D\u80FD\u771F\u6B63\u6267\u884C\uFF0C\u5F97\u5230\u6700\u540E\u7ED3\u679C\u3002</p><p>(2)\u66F4\u597D\u7684\u8BED\u4E49\u3002</p><p><code>async</code> \u548C <code>await</code>\uFF0C\u6BD4\u8D77\u661F\u53F7\u548C <code>yield</code>\uFF0C\u8BED\u4E49\u66F4\u6E05\u695A\u4E86\u3002<code>async</code> \u8868\u793A\u51FD\u6570\u91CC\u6709\u5F02\u6B65\u64CD\u4F5C\uFF0C<code>await</code> \u8868\u793A\u7D27\u8DDF\u5728\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u9700\u8981\u7B49\u5F85\u7ED3\u679C\u3002</p><p>(3)\u66F4\u5E7F\u7684\u9002\u7528\u6027\u3002</p><p><code>co</code> \u6A21\u5757\u7EA6\u5B9A\uFF0C<code>yield</code> \u547D\u4EE4\u540E\u9762\u53EA\u80FD\u662F Thunk \u51FD\u6570\u6216 Promise \u5BF9\u8C61\uFF0C\u800C <code>async</code> \u51FD\u6570\u7684 <code>await</code> \u547D\u4EE4\u540E\u9762\uFF0C\u53EF\u4EE5\u662F Promise \u5BF9\u8C61\u548C\u539F\u59CB\u7C7B\u578B\u7684\u503C(\u6570\u503C\u3001\u5B57\u7B26\u4E32\u548C\u5E03\u5C14\u503C\uFF0C\u4F46\u8FD9\u65F6\u7B49\u540C\u4E8E\u540C\u6B65\u64CD\u4F5C)\u3002</p><p>(4)\u8FD4\u56DE\u503C\u662F Promise\u3002</p><p><code>async</code> \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F Promise \u5BF9\u8C61\uFF0C\u8FD9\u6BD4 Generator \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F Iterator \u5BF9\u8C61\u65B9\u4FBF\u591A\u4E86\u3002\u60A8\u53EF\u4EE5\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u4E0B\u4E00\u6B65\u7684\u64CD\u4F5C\u3002</p><p>\u8FDB\u4E00\u6B65\u8BF4\uFF0C<code>async</code> \u51FD\u6570\u5B8C\u5168\u53EF\u4EE5\u770B\u4F5C\u591A\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5305\u88C5\u6210\u7684\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u800C <code>await</code> \u547D\u4EE4\u5C31\u662F\u5185\u90E8 <code>then</code> \u547D\u4EE4\u7684\u8BED\u6CD5\u7CD6\u3002</p><h2 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h2><p><code>async</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002\u5F53\u51FD\u6570\u6267\u884C\u7684\u65F6\u5019\uFF0C\u4E00\u65E6\u9047\u5230 <code>await</code> \u5C31\u4F1A\u5148\u8FD4\u56DE\uFF0C\u7B49\u5230\u5F02\u6B65\u64CD\u4F5C\u5B8C\u6210\uFF0C\u518D\u63A5\u7740\u6267\u884C\u51FD\u6570\u4F53\u5185\u540E\u9762\u7684\u8BED\u53E5\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getStockPriceByName</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> symbol <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getStockSymbol</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> stockPrice <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getStockPrice</span><span class="token punctuation">(</span>symbol<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> stockPrice<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getStockPriceByName</span><span class="token punctuation">(</span><span class="token string">&quot;goog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u662F\u4E00\u4E2A\u83B7\u53D6\u80A1\u7968\u62A5\u4EF7\u7684\u51FD\u6570\uFF0C\u51FD\u6570\u524D\u9762\u7684 <code>async</code> \u5173\u952E\u5B57\uFF0C\u8868\u660E\u8BE5\u51FD\u6570\u5185\u90E8\u6709\u5F02\u6B65\u64CD\u4F5C\u3002\u8C03\u7528\u8BE5\u51FD\u6570\u65F6\uFF0C\u4F1A\u7ACB\u5373\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u6307\u5B9A\u591A\u5C11\u6BEB\u79D2\u540E\u8F93\u51FA\u4E00\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncPrint</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">timeout</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">asyncPrint</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u6307\u5B9A 50 \u6BEB\u79D2\u4EE5\u540E\uFF0C\u8F93\u51FA <code>hello world</code>\u3002</p><p>\u7531\u4E8E <code>async</code> \u51FD\u6570\u8FD4\u56DE\u7684\u662F Promise \u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F5C\u4E3A <code>await</code> \u547D\u4EE4\u7684\u53C2\u6570\u3002\u6240\u4EE5\uFF0C\u4E0A\u9762\u7684\u4F8B\u5B50\u4E5F\u53EF\u4EE5\u5199\u6210\u4E0B\u9762\u7684\u5F62\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncPrint</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">timeout</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">asyncPrint</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Async \u51FD\u6570\u6709\u591A\u79CD\u4F7F\u7528\u5F62\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5BF9\u8C61\u7684\u65B9\u6CD5</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token keyword">async</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>

<span class="token comment">// Class \u7684\u65B9\u6CD5</span>
<span class="token keyword">class</span> <span class="token class-name">Storage</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cachePromise <span class="token operator">=</span> caches<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;avatars&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cachePromise<span class="token punctuation">;</span>
    <span class="token keyword">return</span> cache<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/avatars/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> storage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
storage<span class="token punctuation">.</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token string">&#39;jake&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\u2026<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h2><p><code>async</code> \u51FD\u6570\u7684\u8BED\u6CD5\u89C4\u5219\u603B\u4F53\u4E0A\u6BD4\u8F83\u7B80\u5355\uFF0C\u96BE\u70B9\u662F\u9519\u8BEF\u5904\u7406\u673A\u5236\u3002</p><h3 id="\u8FD4\u56DE-promise-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE-promise-\u5BF9\u8C61" aria-hidden="true">#</a> \u8FD4\u56DE Promise \u5BF9\u8C61</h3><p><code>async</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</p><p><code>async</code> \u51FD\u6570\u5185\u90E8 <code>return</code> \u8BED\u53E5\u8FD4\u56DE\u7684\u503C\uFF0C\u4F1A\u6210\u4E3A <code>then</code> \u65B9\u6CD5\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;hello world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>f</code> \u5185\u90E8 <code>return</code> \u547D\u4EE4\u8FD4\u56DE\u7684\u503C\uFF0C\u4F1A\u88AB <code>then</code> \u65B9\u6CD5\u56DE\u8C03\u51FD\u6570\u63A5\u6536\u5230\u3002</p><p><code>async</code> \u51FD\u6570\u5185\u90E8\u629B\u51FA\u9519\u8BEF\uFF0C\u4F1A\u5BFC\u81F4\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u53D8\u4E3A <code>reject</code> \u72B6\u6001\u3002\u629B\u51FA\u7684\u9519\u8BEF\u5BF9\u8C61\u4F1A\u88AB <code>catch</code> \u65B9\u6CD5\u56DE\u8C03\u51FD\u6570\u63A5\u6536\u5230\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-\u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u5316" tabindex="-1"><a class="header-anchor" href="#promise-\u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u5316" aria-hidden="true">#</a> Promise \u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u5316</h3><p><code>async</code> \u51FD\u6570\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\uFF0C\u5FC5\u987B\u7B49\u5230\u5185\u90E8\u6240\u6709 <code>await</code> \u547D\u4EE4\u540E\u9762\u7684 Promise \u5BF9\u8C61\u6267\u884C\u5B8C\uFF0C\u624D\u4F1A\u53D1\u751F\u72B6\u6001\u6539\u53D8\uFF0C\u9664\u975E\u9047\u5230 <code>return</code> \u8BED\u53E5\u6216\u8005\u629B\u51FA\u9519\u8BEF\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u53EA\u6709 <code>async</code> \u51FD\u6570\u5185\u90E8\u7684\u5F02\u6B65\u64CD\u4F5C\u6267\u884C\u5B8C\uFF0C\u624D\u4F1A\u6267\u884C <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> html <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;title&gt;([\\s\\S]+)&lt;\\/title&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token string">&quot;https://tc39.github.io/ecma262/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;ECMAScript 2017 Language Specification&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>getTitle</code> \u5185\u90E8\u6709\u4E09\u4E2A\u64CD\u4F5C: \u6293\u53D6\u7F51\u9875\u3001\u53D6\u51FA\u6587\u672C\u3001\u5339\u914D\u9875\u9762\u6807\u9898\u3002\u53EA\u6709\u8FD9\u4E09\u4E2A\u64CD\u4F5C\u5168\u90E8\u5B8C\u6210\uFF0C\u624D\u4F1A\u6267\u884C <code>then</code> \u65B9\u6CD5\u91CC\u9762\u7684 <code>console.log</code>\u3002</p><h3 id="await-\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#await-\u547D\u4EE4" aria-hidden="true">#</a> await \u547D\u4EE4</h3><p>\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C<code>await</code> \u547D\u4EE4\u540E\u9762\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002\u5982\u679C\u4E0D\u662F\uFF0C\u4F1A\u88AB\u8F6C\u6210\u4E00\u4E2A\u7ACB\u5373 <code>resolve</code> \u7684 Promise \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>await</code> \u547D\u4EE4\u7684\u53C2\u6570\u662F\u6570\u503C <code>123</code>\uFF0C\u5B83\u88AB\u8F6C\u6210 Promise \u5BF9\u8C61\uFF0C\u5E76\u7ACB\u5373 <code>resolve</code>\u3002</p><p><code>await</code> \u547D\u4EE4\u540E\u9762\u7684 Promise \u5BF9\u8C61\u5982\u679C\u53D8\u4E3A <code>reject</code> \u72B6\u6001\uFF0C\u5219 <code>reject</code> \u7684\u53C2\u6570\u4F1A\u88AB <code>catch</code> \u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u63A5\u6536\u5230\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>await</code> \u8BED\u53E5\u524D\u9762\u6CA1\u6709 <code>return</code>\uFF0C\u4F46\u662F <code>reject</code> \u65B9\u6CD5\u7684\u53C2\u6570\u4F9D\u7136\u4F20\u5165\u4E86 <code>catch</code> \u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u3002\u8FD9\u91CC\u5982\u679C\u5728 <code>await</code> \u524D\u9762\u52A0\u4E0A <code>return</code>\uFF0C\u6548\u679C\u662F\u4E00\u6837\u7684\u3002</p><p>\u53EA\u8981\u4E00\u4E2A <code>await</code> \u8BED\u53E5\u540E\u9762\u7684 Promise \u53D8\u4E3A <code>reject</code>\uFF0C\u90A3\u4E48\u6574\u4E2A <code>async</code> \u51FD\u6570\u90FD\u4F1A\u4E2D\u65AD\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u4F1A\u6267\u884C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u4E2A <code>await</code> \u8BED\u53E5\u662F\u4E0D\u4F1A\u6267\u884C\u7684\uFF0C\u56E0\u4E3A\u7B2C\u4E00\u4E2A <code>await</code> \u8BED\u53E5\u72B6\u6001\u53D8\u6210\u4E86 <code>reject</code>\u3002</p><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u5E0C\u671B\u5373\u4F7F\u524D\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\uFF0C\u4E5F\u4E0D\u8981\u4E2D\u65AD\u540E\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\u3002\u8FD9\u65F6\u53EF\u4EE5\u5C06\u7B2C\u4E00\u4E2A <code>await</code> \u653E\u5728 <code>try...catch</code> \u7ED3\u6784\u91CC\u9762\uFF0C\u8FD9\u6837\u4E0D\u7BA1\u8FD9\u4E2A\u5F02\u6B65\u64CD\u4F5C\u662F\u5426\u6210\u529F\uFF0C\u7B2C\u4E8C\u4E2A <code>await</code> \u90FD\u4F1A\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// hello world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u4E00\u79CD\u65B9\u6CD5\u662F <code>await</code> \u540E\u9762\u7684 Promise \u5BF9\u8C61\u518D\u8DDF\u4E00\u4E2A <code>catch</code> \u65B9\u6CD5\uFF0C\u5904\u7406\u524D\u9762\u53EF\u80FD\u51FA\u73B0\u7684\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u51FA\u9519\u4E86</span>
<span class="token comment">// hello world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><p>\u5982\u679C <code>await</code> \u540E\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\u51FA\u9519\uFF0C\u90A3\u4E48\u7B49\u540C\u4E8E <code>async</code> \u51FD\u6570\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u88AB <code>reject</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>async</code> \u51FD\u6570 <code>f</code> \u6267\u884C\u540E\uFF0C<code>await</code> \u540E\u9762\u7684 Promise \u5BF9\u8C61\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u5BF9\u8C61\uFF0C\u5BFC\u81F4 <code>catch</code> \u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u88AB\u8C03\u7528\uFF0C\u5B83\u7684\u53C2\u6570\u5C31\u662F\u629B\u51FA\u7684\u9519\u8BEF\u5BF9\u8C61\u3002\u5177\u4F53\u7684\u6267\u884C\u673A\u5236\uFF0C\u53EF\u4EE5\u53C2\u8003\u540E\u6587\u7684\u201Casync \u51FD\u6570\u7684\u5B9E\u73B0\u539F\u7406\u201D\u3002</p><p>\u9632\u6B62\u51FA\u9519\u7684\u65B9\u6CD5\uFF0C\u4E5F\u662F\u5C06\u5176\u653E\u5728 <code>try...catch</code> \u4EE3\u7801\u5757\u4E4B\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u591A\u4E2A <code>await</code> \u547D\u4EE4\uFF0C\u53EF\u4EE5\u7EDF\u4E00\u653E\u5728 <code>try...catch</code> \u7ED3\u6784\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> val1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">firstStep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">secondStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> val3 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">thirdStep</span><span class="token punctuation">(</span>val1<span class="token punctuation">,</span> val2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Final: &quot;</span><span class="token punctuation">,</span> val3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u4F7F\u7528 <code>try...catch</code> \u7ED3\u6784\uFF0C\u5B9E\u73B0\u591A\u6B21\u91CD\u590D\u5C1D\u8BD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> superagent <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;superagent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">NUM_RETRIES</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token constant">NUM_RETRIES</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> superagent<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;https://google.com/this-throws-an-error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C <code>await</code> \u64CD\u4F5C\u6210\u529F\uFF0C\u5C31\u4F1A\u4F7F\u7528 <code>break</code> \u8BED\u53E5\u9000\u51FA\u5FAA\u73AF\uFF1B\u5982\u679C\u5931\u8D25\uFF0C\u4F1A\u88AB <code>catch</code> \u8BED\u53E5\u6355\u6349\uFF0C\u7136\u540E\u8FDB\u5165\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002</p><h3 id="\u4F7F\u7528\u6CE8\u610F\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6CE8\u610F\u70B9" aria-hidden="true">#</a> \u4F7F\u7528\u6CE8\u610F\u70B9</h3><p>\u7B2C\u4E00\u70B9\uFF0C\u524D\u9762\u5DF2\u7ECF\u8BF4\u8FC7\uFF0C<code>await</code> \u547D\u4EE4\u540E\u9762\u7684 <code>Promise</code> \u5BF9\u8C61\uFF0C\u8FD0\u884C\u7ED3\u679C\u53EF\u80FD\u662F <code>rejected</code>\uFF0C\u6240\u4EE5\u6700\u597D\u628A <code>await</code> \u547D\u4EE4\u653E\u5728 <code>try...catch</code> \u4EE3\u7801\u5757\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">somethingThatReturnsAPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53E6\u4E00\u79CD\u5199\u6CD5</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">somethingThatReturnsAPromise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u70B9\uFF0C\u591A\u4E2A <code>await</code> \u547D\u4EE4\u540E\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u7EE7\u53D1\u5173\u7CFB\uFF0C\u6700\u597D\u8BA9\u5B83\u4EEC\u540C\u65F6\u89E6\u53D1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>getFoo</code> \u548C <code>getBar</code> \u662F\u4E24\u4E2A\u72EC\u7ACB\u7684\u5F02\u6B65\u64CD\u4F5C(\u5373\u4E92\u4E0D\u4F9D\u8D56)\uFF0C\u88AB\u5199\u6210\u7EE7\u53D1\u5173\u7CFB\u3002\u8FD9\u6837\u6BD4\u8F83\u8017\u65F6\uFF0C\u56E0\u4E3A\u53EA\u6709 <code>getFoo</code> \u5B8C\u6210\u4EE5\u540E\uFF0C\u624D\u4F1A\u6267\u884C <code>getBar</code>\uFF0C\u5B8C\u5168\u53EF\u4EE5\u8BA9\u5B83\u4EEC\u540C\u65F6\u89E6\u53D1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5199\u6CD5\u4E00</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>foo<span class="token punctuation">,</span> bar<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u6CD5\u4E8C</span>
<span class="token keyword">let</span> fooPromise <span class="token operator">=</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> barPromise <span class="token operator">=</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token keyword">await</span> fooPromise<span class="token punctuation">;</span>
<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token keyword">await</span> barPromise<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4E24\u79CD\u5199\u6CD5\uFF0C<code>getFoo</code> \u548C <code>getBar</code> \u90FD\u662F\u540C\u65F6\u89E6\u53D1\uFF0C\u8FD9\u6837\u5C31\u4F1A\u7F29\u77ED\u7A0B\u5E8F\u7684\u6267\u884C\u65F6\u95F4\u3002</p><p>\u7B2C\u4E09\u70B9\uFF0C<code>await</code> \u547D\u4EE4\u53EA\u80FD\u7528\u5728 <code>async</code> \u51FD\u6570\u4E4B\u4E2D\uFF0C\u5982\u679C\u7528\u5728\u666E\u901A\u51FD\u6570\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// \u62A5\u9519</span>
  docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A <code>await</code> \u7528\u5728\u666E\u901A\u51FD\u6570\u4E4B\u4E2D\u4E86\u3002\u4F46\u662F\uFF0C\u5982\u679C\u5C06 <code>forEach</code> \u65B9\u6CD5\u7684\u53C2\u6570\u6539\u6210 <code>async</code> \u51FD\u6570\uFF0C\u4E5F\u6709\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u8FD9\u91CC\u4E0D\u9700\u8981 async</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// \u53EF\u80FD\u5F97\u5230\u9519\u8BEF\u7ED3\u679C</span>
  docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u53EF\u80FD\u4E0D\u4F1A\u6B63\u5E38\u5DE5\u4F5C\uFF0C\u539F\u56E0\u662F\u8FD9\u65F6\u4E09\u4E2A <code>db.post</code> \u64CD\u4F5C\u5C06\u662F\u5E76\u53D1\u6267\u884C\uFF0C\u4E5F\u5C31\u662F\u540C\u65F6\u6267\u884C\uFF0C\u800C\u4E0D\u662F\u7EE7\u53D1\u6267\u884C\u3002\u6B63\u786E\u7684\u5199\u6CD5\u662F\u91C7\u7528 <code>for</code> \u5FAA\u73AF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> doc <span class="token keyword">of</span> docs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u786E\u5B9E\u5E0C\u671B\u591A\u4E2A\u8BF7\u6C42\u5E76\u53D1\u6267\u884C\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>Promise.all</code> \u65B9\u6CD5\u3002\u5F53\u4E09\u4E2A\u8BF7\u6C42\u90FD\u4F1A <code>resolved</code> \u65F6\uFF0C\u4E0B\u9762\u4E24\u79CD\u5199\u6CD5\u6548\u679C\u76F8\u540C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> promises <span class="token operator">=</span> docs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005\u4F7F\u7528\u4E0B\u9762\u7684\u5199\u6CD5</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dbFuc</span><span class="token punctuation">(</span><span class="token parameter">db</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> docs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> promises <span class="token operator">=</span> docs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> db<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> promise <span class="token keyword">of</span> promises<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">await</span> promise<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,84),v={href:"https://www.npmjs.com/package/esm",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"esm",-1),b=n("code",null,"await",-1),y=n("code",null,"await",-1),w=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// async \u51FD\u6570\u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9876\u5C42 await \u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u79CD\u5199\u6CD5\u7684\u811A\u672C\u5FC5\u987B\u4F7F\u7528 <code>esm</code> \u52A0\u8F7D\u5668\uFF0C\u624D\u4F1A\u751F\u6548\u3002</p><h2 id="async-\u51FD\u6570\u7684\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#async-\u51FD\u6570\u7684\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> async \u51FD\u6570\u7684\u5B9E\u73B0\u539F\u7406</h2><p>Async \u51FD\u6570\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u5C31\u662F\u5C06 Generator \u51FD\u6570\u548C\u81EA\u52A8\u6267\u884C\u5668\uFF0C\u5305\u88C5\u5728\u4E00\u4E2A\u51FD\u6570\u91CC\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u6709\u7684 <code>async</code> \u51FD\u6570\u90FD\u53EF\u4EE5\u5199\u6210\u4E0A\u9762\u7684\u7B2C\u4E8C\u79CD\u5F62\u5F0F\uFF0C\u5176\u4E2D\u7684 <code>spawn</code> \u51FD\u6570\u5C31\u662F\u81EA\u52A8\u6267\u884C\u5668\u3002</p><p>\u4E0B\u9762\u7ED9\u51FA <code>spawn</code> \u51FD\u6570\u7684\u5B9E\u73B0\uFF0C\u57FA\u672C\u5C31\u662F\u524D\u6587\u81EA\u52A8\u6267\u884C\u5668\u7684\u7FFB\u7248\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token parameter">genF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">genF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">nextF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> next<span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        next <span class="token operator">=</span> <span class="token function">nextF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">step</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">step</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> gen<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">step</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E0E\u5176\u4ED6\u5F02\u6B65\u5904\u7406\u65B9\u6CD5\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u4E0E\u5176\u4ED6\u5F02\u6B65\u5904\u7406\u65B9\u6CD5\u7684\u6BD4\u8F83" aria-hidden="true">#</a> \u4E0E\u5176\u4ED6\u5F02\u6B65\u5904\u7406\u65B9\u6CD5\u7684\u6BD4\u8F83</h2><p>\u6211\u4EEC\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u6765\u770B async \u51FD\u6570\u4E0E Promise\u3001Generator \u51FD\u6570\u7684\u6BD4\u8F83\u3002</p><p>\u5047\u5B9A\u67D0\u4E2A DOM \u5143\u7D20\u4E0A\u9762\uFF0C\u90E8\u7F72\u4E86\u4E00\u7CFB\u5217\u7684\u52A8\u753B\uFF0C\u524D\u4E00\u4E2A\u52A8\u753B\u7ED3\u675F\uFF0C\u624D\u80FD\u5F00\u59CB\u540E\u4E00\u4E2A\u3002\u5982\u679C\u5F53\u4E2D\u6709\u4E00\u4E2A\u52A8\u753B\u51FA\u9519\uFF0C\u5C31\u4E0D\u518D\u5F80\u4E0B\u6267\u884C\uFF0C\u8FD4\u56DE\u4E0A\u4E00\u4E2A\u6210\u529F\u6267\u884C\u7684\u52A8\u753B\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u9996\u5148\u662F Promise \u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">chainAnimationsPromise</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> animations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u53D8\u91CFret\u7528\u6765\u4FDD\u5B58\u4E0A\u4E00\u4E2A\u52A8\u753B\u7684\u8FD4\u56DE\u503C</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u7A7A\u7684Promise</span>
  <span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u4F7F\u7528then\u65B9\u6CD5\uFF0C\u6DFB\u52A0\u6240\u6709\u52A8\u753B</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> anim <span class="token keyword">of</span> animations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ret <span class="token operator">=</span> val<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">anim</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u90E8\u7F72\u4E86\u9519\u8BEF\u6355\u6349\u673A\u5236\u7684Promise</span>
  <span class="token keyword">return</span> p
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* \u5FFD\u7565\u9519\u8BEF\uFF0C\u7EE7\u7EED\u6267\u884C */</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136 Promise \u7684\u5199\u6CD5\u6BD4\u56DE\u8C03\u51FD\u6570\u7684\u5199\u6CD5\u5927\u5927\u6539\u8FDB\uFF0C\u4F46\u662F\u4E00\u773C\u770B\u4E0A\u53BB\uFF0C\u4EE3\u7801\u5B8C\u5168\u90FD\u662F Promise \u7684 API(<code>then</code>\u3001<code>catch</code> \u7B49\u7B49)\uFF0C\u64CD\u4F5C\u672C\u8EAB\u7684\u8BED\u4E49\u53CD\u800C\u4E0D\u5BB9\u6613\u770B\u51FA\u6765\u3002</p><p>\u63A5\u7740\u662F Generator \u51FD\u6570\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">chainAnimationsGenerator</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> animations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> anim <span class="token keyword">of</span> animations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ret <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">anim</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* \u5FFD\u7565\u9519\u8BEF\uFF0C\u7EE7\u7EED\u6267\u884C */</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4F7F\u7528 Generator \u51FD\u6570\u904D\u5386\u4E86\u6BCF\u4E2A\u52A8\u753B\uFF0C\u8BED\u4E49\u6BD4 Promise \u5199\u6CD5\u66F4\u6E05\u6670\uFF0C\u7528\u6237\u5B9A\u4E49\u7684\u64CD\u4F5C\u5168\u90E8\u90FD\u51FA\u73B0\u5728 <code>spawn</code> \u51FD\u6570\u7684\u5185\u90E8\u3002\u8FD9\u4E2A\u5199\u6CD5\u7684\u95EE\u9898\u5728\u4E8E\uFF0C\u5FC5\u987B\u6709\u4E00\u4E2A\u4EFB\u52A1\u8FD0\u884C\u5668\uFF0C\u81EA\u52A8\u6267\u884C Generator \u51FD\u6570\uFF0C\u4E0A\u9762\u4EE3\u7801\u7684 <code>spawn</code> \u51FD\u6570\u5C31\u662F\u81EA\u52A8\u6267\u884C\u5668\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u800C\u4E14\u5FC5\u987B\u4FDD\u8BC1 <code>yield</code> \u8BED\u53E5\u540E\u9762\u7684\u8868\u8FBE\u5F0F\uFF0C\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A Promise\u3002</p><p>\u6700\u540E\u662F async \u51FD\u6570\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">chainAnimationsAsync</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> animations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> anim <span class="token keyword">of</span> animations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ret <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">anim</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u5FFD\u7565\u9519\u8BEF\uFF0C\u7EE7\u7EED\u6267\u884C */</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 Async \u51FD\u6570\u7684\u5B9E\u73B0\u6700\u7B80\u6D01\uFF0C\u6700\u7B26\u5408\u8BED\u4E49\uFF0C\u51E0\u4E4E\u6CA1\u6709\u8BED\u4E49\u4E0D\u76F8\u5173\u7684\u4EE3\u7801\u3002\u5B83\u5C06 Generator \u5199\u6CD5\u4E2D\u7684\u81EA\u52A8\u6267\u884C\u5668\uFF0C\u6539\u5728\u8BED\u8A00\u5C42\u9762\u63D0\u4F9B\uFF0C\u4E0D\u66B4\u9732\u7ED9\u7528\u6237\uFF0C\u56E0\u6B64\u4EE3\u7801\u91CF\u6700\u5C11\u3002\u5982\u679C\u4F7F\u7528 Generator \u5199\u6CD5\uFF0C\u81EA\u52A8\u6267\u884C\u5668\u9700\u8981\u7528\u6237\u81EA\u5DF1\u63D0\u4F9B\u3002</p><h2 id="\u5B9E\u4F8B-\u6309\u987A\u5E8F\u5B8C\u6210\u5F02\u6B65\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-\u6309\u987A\u5E8F\u5B8C\u6210\u5F02\u6B65\u64CD\u4F5C" aria-hidden="true">#</a> \u5B9E\u4F8B: \u6309\u987A\u5E8F\u5B8C\u6210\u5F02\u6B65\u64CD\u4F5C</h2><p>\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u7ECF\u5E38\u9047\u5230\u4E00\u7EC4\u5F02\u6B65\u64CD\u4F5C\uFF0C\u9700\u8981\u6309\u7167\u987A\u5E8F\u5B8C\u6210\u3002\u6BD4\u5982\uFF0C\u4F9D\u6B21\u8FDC\u7A0B\u8BFB\u53D6\u4E00\u7EC4 URL\uFF0C\u7136\u540E\u6309\u7167\u8BFB\u53D6\u7684\u987A\u5E8F\u8F93\u51FA\u7ED3\u679C\u3002</p><p>Promise \u7684\u5199\u6CD5\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">logInOrder</span><span class="token punctuation">(</span><span class="token parameter">urls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FDC\u7A0B\u8BFB\u53D6\u6240\u6709URL</span>
  <span class="token keyword">const</span> textPromises <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6309\u6B21\u5E8F\u8F93\u51FA</span>
  textPromises<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">chain<span class="token punctuation">,</span> textPromise</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> textPromise<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4F7F\u7528 <code>fetch</code> \u65B9\u6CD5\uFF0C\u540C\u65F6\u8FDC\u7A0B\u8BFB\u53D6\u4E00\u7EC4 URL\u3002\u6BCF\u4E2A <code>fetch</code> \u64CD\u4F5C\u90FD\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u653E\u5165 <code>textPromises</code> \u6570\u7EC4\u3002\u7136\u540E\uFF0C<code>reduce</code> \u65B9\u6CD5\u4F9D\u6B21\u5904\u7406\u6BCF\u4E2A Promise \u5BF9\u8C61\uFF0C\u7136\u540E\u4F7F\u7528 <code>then</code>\uFF0C\u5C06\u6240\u6709 Promise \u5BF9\u8C61\u8FDE\u8D77\u6765\uFF0C\u56E0\u6B64\u5C31\u53EF\u4EE5\u4F9D\u6B21\u8F93\u51FA\u7ED3\u679C\u3002</p><p>\u8FD9\u79CD\u5199\u6CD5\u4E0D\u592A\u76F4\u89C2\uFF0C\u53EF\u8BFB\u6027\u6BD4\u8F83\u5DEE\u3002\u4E0B\u9762\u662F async \u51FD\u6570\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">logInOrder</span><span class="token punctuation">(</span><span class="token parameter">urls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> url <span class="token keyword">of</span> urls<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u786E\u5B9E\u5927\u5927\u7B80\u5316\uFF0C\u95EE\u9898\u662F\u6240\u6709\u8FDC\u7A0B\u64CD\u4F5C\u90FD\u662F\u7EE7\u53D1\u3002\u53EA\u6709\u524D\u4E00\u4E2A URL \u8FD4\u56DE\u7ED3\u679C\uFF0C\u624D\u4F1A\u53BB\u8BFB\u53D6\u4E0B\u4E00\u4E2A URL\uFF0C\u8FD9\u6837\u505A\u6548\u7387\u5F88\u5DEE\uFF0C\u975E\u5E38\u6D6A\u8D39\u65F6\u95F4\u3002\u6211\u4EEC\u9700\u8981\u7684\u662F\u5E76\u53D1\u53D1\u51FA\u8FDC\u7A0B\u8BF7\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">logInOrder</span><span class="token punctuation">(</span><span class="token parameter">urls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5E76\u53D1\u8BFB\u53D6\u8FDC\u7A0BURL</span>
  <span class="token keyword">const</span> textPromises <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6309\u6B21\u5E8F\u8F93\u51FA</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> textPromise <span class="token keyword">of</span> textPromises<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> textPromise<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u867D\u7136 <code>map</code> \u65B9\u6CD5\u7684\u53C2\u6570\u662F <code>async</code> \u51FD\u6570\uFF0C\u4F46\u5B83\u662F\u5E76\u53D1\u6267\u884C\u7684\uFF0C\u56E0\u4E3A\u53EA\u6709 <code>async</code> \u51FD\u6570\u5185\u90E8\u662F\u7EE7\u53D1\u6267\u884C\uFF0C\u5916\u90E8\u4E0D\u53D7\u5F71\u54CD\u3002\u540E\u9762\u7684 <code>for..of</code> \u5FAA\u73AF\u5185\u90E8\u4F7F\u7528\u4E86 <code>await</code>\uFF0C\u56E0\u6B64\u5B9E\u73B0\u4E86\u6309\u987A\u5E8F\u8F93\u51FA\u3002</p><h2 id="\u5F02\u6B65\u904D\u5386\u5668" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u904D\u5386\u5668" aria-hidden="true">#</a> \u5F02\u6B65\u904D\u5386\u5668</h2><p>\u300A\u904D\u5386\u5668\u300B\u4E00\u7AE0\u8BF4\u8FC7\uFF0CIterator \u63A5\u53E3\u662F\u4E00\u79CD\u6570\u636E\u904D\u5386\u7684\u534F\u8BAE\uFF0C\u53EA\u8981\u8C03\u7528\u904D\u5386\u5668\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u5C31\u4F1A\u5F97\u5230\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8868\u793A\u5F53\u524D\u904D\u5386\u6307\u9488\u6240\u5728\u7684\u90A3\u4E2A\u4F4D\u7F6E\u7684\u4FE1\u606F\u3002<code>next</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684\u7ED3\u6784\u662F <code>{value, done}</code>\uFF0C\u5176\u4E2D <code>value</code> \u8868\u793A\u5F53\u524D\u7684\u6570\u636E\u7684\u503C\uFF0C<code>done</code> \u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u904D\u5386\u662F\u5426\u7ED3\u675F\u3002</p><p>\u8FD9\u91CC\u9690\u542B\u7740\u4E00\u4E2A\u89C4\u5B9A\uFF0C<code>next</code> \u65B9\u6CD5\u5FC5\u987B\u662F\u540C\u6B65\u7684\uFF0C\u53EA\u8981\u8C03\u7528\u5C31\u5FC5\u987B\u7ACB\u523B\u8FD4\u56DE\u503C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E00\u65E6\u6267\u884C <code>next</code> \u65B9\u6CD5\uFF0C\u5C31\u5FC5\u987B\u540C\u6B65\u5730\u5F97\u5230 <code>value</code> \u548C <code>done</code> \u8FD9\u4E24\u4E2A\u5C5E\u6027\u3002\u5982\u679C\u904D\u5386\u6307\u9488\u6B63\u597D\u6307\u5411\u540C\u6B65\u64CD\u4F5C\uFF0C\u5F53\u7136\u6CA1\u6709\u95EE\u9898\uFF0C\u4F46\u5BF9\u4E8E\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5C31\u4E0D\u592A\u5408\u9002\u4E86\u3002\u76EE\u524D\u7684\u89E3\u51B3\u65B9\u6CD5\u662F\uFF0CGenerator \u51FD\u6570\u91CC\u9762\u7684\u5F02\u6B65\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A Thunk \u51FD\u6570\u6216\u8005 Promise \u5BF9\u8C61\uFF0C\u5373 <code>value</code> \u5C5E\u6027\u662F\u4E00\u4E2A Thunk \u51FD\u6570\u6216\u8005 Promise \u5BF9\u8C61\uFF0C\u7B49\u5F85\u4EE5\u540E\u8FD4\u56DE\u771F\u6B63\u7684\u503C\uFF0C\u800C <code>done</code> \u5C5E\u6027\u5219\u8FD8\u662F\u540C\u6B65\u4EA7\u751F\u7684\u3002</p>`,33),f={href:"https://github.com/tc39/proposal-async-iteration",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"value",-1),h=n("code",null,"done",-1),j=a(`<h3 id="\u5F02\u6B65\u904D\u5386\u7684\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u904D\u5386\u7684\u63A5\u53E3" aria-hidden="true">#</a> \u5F02\u6B65\u904D\u5386\u7684\u63A5\u53E3</h3><p>\u5F02\u6B65\u904D\u5386\u5668\u7684\u6700\u5927\u7684\u8BED\u6CD5\u7279\u70B9\uFF0C\u5C31\u662F\u8C03\u7528\u904D\u5386\u5668\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>asyncIterator
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token comment">/* ... */</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>asyncIterator</code> \u662F\u4E00\u4E2A\u5F02\u6B65\u904D\u5386\u5668\uFF0C\u8C03\u7528 <code>next</code> \u65B9\u6CD5\u4EE5\u540E\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\uFF0C\u8FD9\u4E2A Promise \u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u4E3A <code>resolve</code> \u4EE5\u540E\u7684\u56DE\u8C03\u51FD\u6570\u3002\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u5219\u662F\u4E00\u4E2A\u5177\u6709 <code>value</code> \u548C <code>done</code> \u4E24\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u8DDF\u540C\u6B65\u904D\u5386\u5668\u662F\u4E00\u6837\u7684\u3002</p><p>\u6211\u4EEC\u77E5\u9053\uFF0C\u4E00\u4E2A\u5BF9\u8C61\u7684\u540C\u6B65\u904D\u5386\u5668\u7684\u63A5\u53E3\uFF0C\u90E8\u7F72\u5728 <code>Symbol.iterator</code> \u5C5E\u6027\u4E0A\u9762\u3002\u540C\u6837\u5730\uFF0C\u5BF9\u8C61\u7684\u5F02\u6B65\u904D\u5386\u5668\u63A5\u53E3\uFF0C\u90E8\u7F72\u5728 <code>Symbol.asyncIterator</code> \u5C5E\u6027\u4E0A\u9762\u3002\u4E0D\u7BA1\u662F\u4EC0\u4E48\u6837\u7684\u5BF9\u8C61\uFF0C\u53EA\u8981\u5B83\u7684 <code>Symbol.asyncIterator</code> \u5C5E\u6027\u6709\u503C\uFF0C\u5C31\u8868\u793A\u5E94\u8BE5\u5BF9\u5B83\u8FDB\u884C\u5F02\u6B65\u904D\u5386\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5F02\u6B65\u904D\u5386\u5668\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> asyncIterable <span class="token operator">=</span> <span class="token function">createAsyncIterable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> asyncIterator <span class="token operator">=</span> asyncIterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

asyncIterator
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">iterResult1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterResult1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;a&#39;, done: false }</span>
    <span class="token keyword">return</span> asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">iterResult2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterResult2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;b&#39;, done: false }</span>
    <span class="token keyword">return</span> asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">iterResult3</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iterResult3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: undefined, done: true }</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5F02\u6B65\u904D\u5386\u5668\u5176\u5B9E\u8FD4\u56DE\u4E86\u4E24\u6B21\u503C\u3002\u7B2C\u4E00\u6B21\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF1B\u7B49\u5230 Promise \u5BF9\u8C61 <code>resolve</code> \u4E86\uFF0C\u518D\u8FD4\u56DE\u4E00\u4E2A\u8868\u793A\u5F53\u524D\u6570\u636E\u6210\u5458\u4FE1\u606F\u7684\u5BF9\u8C61\u3002\u8FD9\u5C31\u662F\u8BF4\uFF0C\u5F02\u6B65\u904D\u5386\u5668\u4E0E\u540C\u6B65\u904D\u5386\u5668\u6700\u7EC8\u884C\u4E3A\u662F\u4E00\u81F4\u7684\uFF0C\u53EA\u662F\u4F1A\u5148\u8FD4\u56DE Promise \u5BF9\u8C61\uFF0C\u4F5C\u4E3A\u4E2D\u4ECB\u3002</p><p>\u7531\u4E8E\u5F02\u6B65\u904D\u5386\u5668\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u628A\u5B83\u653E\u5728 <code>await</code> \u547D\u4EE4\u540E\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> asyncIterable <span class="token operator">=</span> <span class="token function">createAsyncIterable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> asyncIterator <span class="token operator">=</span> asyncIterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// { value: &#39;a&#39;, done: false }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// { value: &#39;b&#39;, done: false }</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// { value: undefined, done: true }</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>next</code> \u65B9\u6CD5\u7528 <code>await</code> \u5904\u7406\u4EE5\u540E\uFF0C\u5C31\u4E0D\u5FC5\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\u4E86\u3002\u6574\u4E2A\u6D41\u7A0B\u5DF2\u7ECF\u5F88\u63A5\u8FD1\u540C\u6B65\u5904\u7406\u4E86\u3002</p><p>\u6CE8\u610F\uFF0C\u5F02\u6B65\u904D\u5386\u5668\u7684 <code>next</code> \u65B9\u6CD5\u662F\u53EF\u4EE5\u8FDE\u7EED\u8C03\u7528\u7684\uFF0C\u4E0D\u5FC5\u7B49\u5230\u4E0A\u4E00\u6B65\u4EA7\u751F\u7684 Promise \u5BF9\u8C61 <code>resolve</code> \u4EE5\u540E\u518D\u8C03\u7528\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C<code>next</code> \u65B9\u6CD5\u4F1A\u7D2F\u79EF\u8D77\u6765\uFF0C\u81EA\u52A8\u6309\u7167\u6BCF\u4E00\u6B65\u7684\u987A\u5E8F\u8FD0\u884C\u4E0B\u53BB\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u628A\u6240\u6709\u7684 <code>next</code> \u65B9\u6CD5\u653E\u5728 <code>Promise.all</code> \u65B9\u6CD5\u91CC\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> asyncIterable <span class="token operator">=</span> <span class="token function">createAsyncIterable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> asyncIterator <span class="token operator">=</span> asyncIterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> v1 <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> v2 <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  asyncIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u4E00\u79CD\u7528\u6CD5\u662F\u4E00\u6B21\u6027\u8C03\u7528\u6240\u6709\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u7136\u540E <code>await</code> \u6700\u540E\u4E00\u6B65\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> writer <span class="token operator">=</span> <span class="token function">openFile</span><span class="token punctuation">(</span><span class="token string">&quot;someFile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> writer<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-await-of" tabindex="-1"><a class="header-anchor" href="#for-await-of" aria-hidden="true">#</a> for await...of</h3><p>\u524D\u9762\u4ECB\u7ECD\u8FC7\uFF0C<code>for...of</code> \u5FAA\u73AF\u7528\u4E8E\u904D\u5386\u540C\u6B65\u7684 Iterator \u63A5\u53E3\u3002\u65B0\u5F15\u5165\u7684 <code>for await...of</code> \u5FAA\u73AF\uFF0C\u5219\u662F\u7528\u4E8E\u904D\u5386\u5F02\u6B65\u7684 Iterator \u63A5\u53E3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">createAsyncIterable</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// a</span>
<span class="token comment">// b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>createAsyncIterable()</code> \u8FD4\u56DE\u4E00\u4E2A\u62E5\u6709\u5F02\u6B65\u904D\u5386\u5668\u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C<code>for...of</code> \u5FAA\u73AF\u81EA\u52A8\u8C03\u7528\u8FD9\u4E2A\u5BF9\u8C61\u7684\u5F02\u6B65\u904D\u5386\u5668\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u4F1A\u5F97\u5230\u4E00\u4E2A Promise \u5BF9\u8C61\u3002<code>await</code> \u7528\u6765\u5904\u7406\u8FD9\u4E2A Promise \u5BF9\u8C61\uFF0C\u4E00\u65E6 <code>resolve</code>\uFF0C\u5C31\u628A\u5F97\u5230\u7684\u503C(<code>x</code>)\u4F20\u5165 <code>for...of</code> \u7684\u5FAA\u73AF\u4F53\u3002</p><p><code>for await...of</code> \u5FAA\u73AF\u7684\u4E00\u4E2A\u7528\u9014\uFF0C\u662F\u90E8\u7F72\u4E86 asyncIterable \u64CD\u4F5C\u7684\u5F02\u6B65\u63A5\u53E3\uFF0C\u53EF\u4EE5\u76F4\u63A5\u653E\u5165\u8FD9\u4E2A\u5FAA\u73AF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> data <span class="token keyword">of</span> req<span class="token punctuation">)</span> body <span class="token operator">+=</span> data<span class="token punctuation">;</span>
  <span class="token keyword">const</span> parsed <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;got&quot;</span><span class="token punctuation">,</span> parsed<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>req</code> \u662F\u4E00\u4E2A asyncIterable \u5BF9\u8C61\uFF0C\u7528\u6765\u5F02\u6B65\u8BFB\u53D6\u6570\u636E\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u4F7F\u7528 <code>for await...of</code> \u5FAA\u73AF\u4EE5\u540E\uFF0C\u4EE3\u7801\u4F1A\u975E\u5E38\u7B80\u6D01\u3002</p><p>\u5982\u679C <code>next</code> \u65B9\u6CD5\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u88AB <code>reject</code>\uFF0C<code>for await...of</code> \u5C31\u4F1A\u62A5\u9519\uFF0C\u8981\u7528 <code>try...catch</code> \u6355\u6349\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">createRejectingIterable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C<code>for await...of</code> \u5FAA\u73AF\u4E5F\u53EF\u4EE5\u7528\u4E8E\u540C\u6B65\u904D\u5386\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// a</span>
<span class="token comment">// b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Node.js v10 \u652F\u6301\u5F02\u6B65\u904D\u5386\u5668\uFF0CStream \u5C31\u90E8\u7F72\u4E86\u8FD9\u4E2A\u63A5\u53E3\u3002\u4E0B\u9762\u662F\u8BFB\u53D6\u6587\u4EF6\u7684\u4F20\u7EDF\u5199\u6CD5\u4E0E\u5F02\u6B65\u904D\u5386\u5668\u5199\u6CD5\u7684\u5DEE\u5F02\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F20\u7EDF\u5199\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">inputFilePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>inputFilePath<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">highWaterMark</span><span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt; &quot;</span> <span class="token operator">+</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;### DONE ###&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5F02\u6B65\u904D\u5386\u5668\u5199\u6CD5</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token parameter">inputFilePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>inputFilePath<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">highWaterMark</span><span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> readStream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt; &quot;</span> <span class="token operator">+</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;### DONE ###&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65-generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65-generator-\u51FD\u6570" aria-hidden="true">#</a> \u5F02\u6B65 Generator \u51FD\u6570</h3><p>\u5C31\u50CF Generator \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u540C\u6B65\u904D\u5386\u5668\u5BF9\u8C61\u4E00\u6837\uFF0C\u5F02\u6B65 Generator \u51FD\u6570\u7684\u4F5C\u7528\uFF0C\u662F\u8FD4\u56DE\u4E00\u4E2A\u5F02\u6B65\u904D\u5386\u5668\u5BF9\u8C61\u3002</p><p>\u5728\u8BED\u6CD5\u4E0A\uFF0C\u5F02\u6B65 Generator \u51FD\u6570\u5C31\u662F <code>async</code> \u51FD\u6570\u4E0E Generator \u51FD\u6570\u7684\u7ED3\u5408\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> genObj <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
genObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { value: &#39;hello&#39;, done: false }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>gen</code> \u662F\u4E00\u4E2A\u5F02\u6B65 Generator \u51FD\u6570\uFF0C\u6267\u884C\u540E\u8FD4\u56DE\u4E00\u4E2A\u5F02\u6B65 Iterator \u5BF9\u8C61\u3002\u5BF9\u8BE5\u5BF9\u8C61\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</p><p>\u5F02\u6B65\u904D\u5386\u5668\u7684\u8BBE\u8BA1\u76EE\u7684\u4E4B\u4E00\uFF0C\u5C31\u662F Generator \u51FD\u6570\u5904\u7406\u540C\u6B65\u64CD\u4F5C\u548C\u5F02\u6B65\u64CD\u4F5C\u65F6\uFF0C\u80FD\u591F\u4F7F\u7528\u540C\u4E00\u5957\u63A5\u53E3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u540C\u6B65 Generator \u51FD\u6570</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">iterable<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> iter <span class="token operator">=</span> iterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token function">func</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5F02\u6B65 Generator \u51FD\u6570</span>
<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">iterable<span class="token punctuation">,</span> func</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> iter <span class="token operator">=</span> iterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token function">func</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>map</code> \u662F\u4E00\u4E2A Generator \u51FD\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u53EF\u904D\u5386\u5BF9\u8C61 <code>iterable</code>\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570 <code>func</code>\u3002<code>map</code> \u7684\u4F5C\u7528\u662F\u5C06 <code>iterable</code> \u6BCF\u4E00\u6B65\u8FD4\u56DE\u7684\u503C\uFF0C\u4F7F\u7528 <code>func</code> \u8FDB\u884C\u5904\u7406\u3002\u4E0A\u9762\u6709\u4E24\u4E2A\u7248\u672C\u7684 <code>map</code>\uFF0C\u524D\u4E00\u4E2A\u5904\u7406\u540C\u6B65\u904D\u5386\u5668\uFF0C\u540E\u4E00\u4E2A\u5904\u7406\u5F02\u6B65\u904D\u5386\u5668\uFF0C\u53EF\u4EE5\u770B\u5230\u4E24\u4E2A\u7248\u672C\u7684\u5199\u6CD5\u57FA\u672C\u4E0A\u662F\u4E00\u81F4\u7684\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u5F02\u6B65 Generator \u51FD\u6570\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">readLines</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileOpen</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token constant">EOF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> <span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5F02\u6B65\u64CD\u4F5C\u524D\u9762\u4F7F\u7528 <code>await</code> \u5173\u952E\u5B57\u6807\u660E\uFF0C\u5373 <code>await</code> \u540E\u9762\u7684\u64CD\u4F5C\uFF0C\u5E94\u8BE5\u8FD4\u56DE Promise \u5BF9\u8C61\u3002\u51E1\u662F\u4F7F\u7528 <code>yield</code> \u5173\u952E\u5B57\u7684\u5730\u65B9\uFF0C\u5C31\u662F <code>next</code> \u65B9\u6CD5\u505C\u4E0B\u6765\u7684\u5730\u65B9\uFF0C\u5B83\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u7684\u503C(\u5373 <code>await file.readLine()</code> \u7684\u503C)\uFF0C\u4F1A\u4F5C\u4E3A <code>next()</code> \u8FD4\u56DE\u5BF9\u8C61\u7684 <code>value</code> \u5C5E\u6027\uFF0C\u8FD9\u4E00\u70B9\u662F\u4E0E\u540C\u6B65 Generator \u51FD\u6570\u4E00\u81F4\u7684\u3002</p><p>\u5F02\u6B65 Generator \u51FD\u6570\u5185\u90E8\uFF0C\u80FD\u591F\u540C\u65F6\u4F7F\u7528 <code>await</code> \u548C <code>yield</code> \u547D\u4EE4\u3002\u53EF\u4EE5\u8FD9\u6837\u7406\u89E3\uFF0C<code>await</code> \u547D\u4EE4\u7528\u4E8E\u5C06\u5916\u90E8\u64CD\u4F5C\u4EA7\u751F\u7684\u503C\u8F93\u5165\u51FD\u6570\u5185\u90E8\uFF0C<code>yield</code> \u547D\u4EE4\u7528\u4E8E\u5C06\u51FD\u6570\u5185\u90E8\u7684\u503C\u8F93\u51FA\u3002</p><p>\u4E0A\u9762\u4EE3\u7801\u5B9A\u4E49\u7684\u5F02\u6B65 Generator \u51FD\u6570\u7684\u7528\u6CD5\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> line <span class="token keyword">of</span> <span class="token function">readLines</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F02\u6B65 Generator \u51FD\u6570\u53EF\u4EE5\u4E0E <code>for await...of</code> \u5FAA\u73AF\u7ED3\u5408\u8D77\u6765\u4F7F\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">prefixLines</span><span class="token punctuation">(</span><span class="token parameter">asyncIterable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> line <span class="token keyword">of</span> asyncIterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;&gt; &quot;</span> <span class="token operator">+</span> line<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F02\u6B65 Generator \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u5F02\u6B65 Iterator\uFF0C\u5373\u6BCF\u6B21\u8C03\u7528\u5B83\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u8DDF\u5728 <code>yield</code> \u547D\u4EE4\u540E\u9762\u7684\uFF0C\u5E94\u8BE5\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002\u5982\u679C\u50CF\u4E0A\u9762\u90A3\u4E2A\u4F8B\u5B50\u90A3\u6837\uFF0C<code>yield</code> \u547D\u4EE4\u540E\u9762\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F1A\u88AB\u81EA\u52A8\u5305\u88C5\u6210\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fetchRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span>
    <span class="token string">&quot;https://www.random.org/decimal-fractions/&quot;</span> <span class="token operator">+</span>
    <span class="token string">&quot;?num=1&amp;dec=10&amp;col=1&amp;format=plain&amp;rnd=new&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (A)</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;Result: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">await</span> result<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (B)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> ag <span class="token operator">=</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ag<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>ag</code> \u662F <code>asyncGenerator</code> \u51FD\u6570\u8FD4\u56DE\u7684\u5F02\u6B65\u904D\u5386\u5668\u5BF9\u8C61\u3002\u8C03\u7528 <code>ag.next()</code> \u4EE5\u540E\uFF0C\u4E0A\u9762\u4EE3\u7801\u7684\u6267\u884C\u987A\u5E8F\u5982\u4E0B\u3002</p><ol><li><code>ag.next()</code> \u7ACB\u523B\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</li><li><code>asyncGenerator</code> \u51FD\u6570\u5F00\u59CB\u6267\u884C\uFF0C\u6253\u5370\u51FA <code>Start</code>\u3002</li><li><code>await</code> \u547D\u4EE4\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C<code>asyncGenerator</code> \u51FD\u6570\u505C\u5728\u8FD9\u91CC\u3002</li><li>A \u5904\u53D8\u6210 fulfilled \u72B6\u6001\uFF0C\u4EA7\u751F\u7684\u503C\u653E\u5165 <code>result</code> \u53D8\u91CF\uFF0C<code>asyncGenerator</code> \u51FD\u6570\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\u3002</li><li>\u51FD\u6570\u5728 B \u5904\u7684 <code>yield</code> \u6682\u505C\u6267\u884C\uFF0C\u4E00\u65E6 <code>yield</code> \u547D\u4EE4\u53D6\u5230\u503C\uFF0C<code>ag.next()</code> \u8FD4\u56DE\u7684\u90A3\u4E2A Promise \u5BF9\u8C61\u53D8\u6210 fulfilled \u72B6\u6001\u3002</li><li><code>ag.next()</code> \u540E\u9762\u7684 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u5F00\u59CB\u6267\u884C\u3002\u8BE5\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61 <code>{value, done}</code>\uFF0C\u5176\u4E2D <code>value</code> \u7684\u503C\u662F <code>yield</code> \u547D\u4EE4\u540E\u9762\u7684\u90A3\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C<code>done</code> \u7684\u503C\u662F <code>false</code>\u3002</li></ol><p>A \u548C B \u4E24\u884C\u7684\u4F5C\u7528\u7C7B\u4F3C\u4E8E\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">fetchRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;Result: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">,</span>
        <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5F02\u6B65 Generator \u51FD\u6570\u629B\u51FA\u9519\u8BEF\uFF0C\u4F1A\u5BFC\u81F4 Promise \u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u4E3A <code>reject</code>\uFF0C\u7136\u540E\u629B\u51FA\u7684\u9519\u8BEF\u88AB <code>catch</code> \u65B9\u6CD5\u6355\u83B7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Problem!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: Problem!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u666E\u901A\u7684 async \u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u800C\u5F02\u6B65 Generator \u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u5F02\u6B65 Iterator \u5BF9\u8C61\u3002\u53EF\u4EE5\u8FD9\u6837\u7406\u89E3\uFF0Casync \u51FD\u6570\u548C\u5F02\u6B65 Generator \u51FD\u6570\uFF0C\u662F\u5C01\u88C5\u5F02\u6B65\u64CD\u4F5C\u7684\u4E24\u79CD\u65B9\u6CD5\uFF0C\u90FD\u7528\u6765\u8FBE\u5230\u540C\u4E00\u79CD\u76EE\u7684\u3002\u533A\u522B\u5728\u4E8E\uFF0C\u524D\u8005\u81EA\u5E26\u6267\u884C\u5668\uFF0C\u540E\u8005\u901A\u8FC7 <code>for await...of</code> \u6267\u884C\uFF0C\u6216\u8005\u81EA\u5DF1\u7F16\u5199\u6267\u884C\u5668\u3002\u4E0B\u9762\u5C31\u662F\u4E00\u4E2A\u5F02\u6B65 Generator \u51FD\u6570\u7684\u6267\u884C\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">takeAsync</span><span class="token punctuation">(</span><span class="token parameter">asyncIterable<span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">Infinity</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> iterator <span class="token operator">=</span> asyncIterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5F02\u6B65 Generator \u51FD\u6570\u4EA7\u751F\u7684\u5F02\u6B65\u904D\u5386\u5668\uFF0C\u4F1A\u901A\u8FC7 <code>while</code> \u5FAA\u73AF\u81EA\u52A8\u6267\u884C\uFF0C\u6BCF\u5F53 <code>await iterator.next()</code> \u5B8C\u6210\uFF0C\u5C31\u4F1A\u8FDB\u5165\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u3002\u4E00\u65E6 <code>done</code> \u5C5E\u6027\u53D8\u4E3A <code>true</code>\uFF0C\u5C31\u4F1A\u8DF3\u51FA\u5FAA\u73AF\uFF0C\u5F02\u6B65\u904D\u5386\u5668\u6267\u884C\u7ED3\u675F\u3002</p><p>\u4E0B\u9762\u662F\u8FD9\u4E2A\u81EA\u52A8\u6267\u884C\u5668\u7684\u4E00\u4E2A\u4F7F\u7528\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">takeAsync</span><span class="token punctuation">(</span><span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F02\u6B65 Generator \u51FD\u6570\u51FA\u73B0\u4EE5\u540E\uFF0CJavaScript \u5C31\u6709\u4E86\u56DB\u79CD\u51FD\u6570\u5F62\u5F0F: \u666E\u901A\u51FD\u6570\u3001async \u51FD\u6570\u3001Generator \u51FD\u6570\u548C\u5F02\u6B65 Generator \u51FD\u6570\u3002\u8BF7\u6CE8\u610F\u533A\u5206\u6BCF\u79CD\u51FD\u6570\u7684\u4E0D\u540C\u4E4B\u5904\u3002\u57FA\u672C\u4E0A\uFF0C\u5982\u679C\u662F\u4E00\u7CFB\u5217\u6309\u7167\u987A\u5E8F\u6267\u884C\u7684\u5F02\u6B65\u64CD\u4F5C(\u6BD4\u5982\u8BFB\u53D6\u6587\u4EF6\uFF0C\u7136\u540E\u5199\u5165\u65B0\u5185\u5BB9\uFF0C\u518D\u5B58\u5165\u786C\u76D8)\uFF0C\u53EF\u4EE5\u4F7F\u7528 async \u51FD\u6570\uFF1B\u5982\u679C\u662F\u4E00\u7CFB\u5217\u4EA7\u751F\u76F8\u540C\u6570\u636E\u7ED3\u6784\u7684\u5F02\u6B65\u64CD\u4F5C(\u6BD4\u5982\u4E00\u884C\u4E00\u884C\u8BFB\u53D6\u6587\u4EF6)\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5F02\u6B65 Generator \u51FD\u6570\u3002</p><p>\u5F02\u6B65 Generator \u51FD\u6570\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>next</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u63A5\u6536\u5916\u90E8\u4F20\u5165\u7684\u6570\u636E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> writer <span class="token operator">=</span> <span class="token function">openFile</span><span class="token punctuation">(</span><span class="token string">&quot;someFile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7ACB\u5373\u6267\u884C</span>
writer<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7ACB\u5373\u6267\u884C</span>
<span class="token keyword">await</span> writer<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B49\u5F85\u5199\u5165\u7ED3\u675F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>openFile</code> \u662F\u4E00\u4E2A\u5F02\u6B65 Generator \u51FD\u6570\u3002<code>next</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u5411\u8BE5\u51FD\u6570\u5185\u90E8\u7684\u64CD\u4F5C\u4F20\u5165\u6570\u636E\u3002\u6BCF\u6B21 <code>next</code> \u65B9\u6CD5\u90FD\u662F\u540C\u6B65\u6267\u884C\u7684\uFF0C\u6700\u540E\u7684 <code>await</code> \u547D\u4EE4\u7528\u4E8E\u7B49\u5F85\u6574\u4E2A\u5199\u5165\u64CD\u4F5C\u7ED3\u675F\u3002</p><p>\u6700\u540E\uFF0C\u540C\u6B65\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5F02\u6B65 Generator \u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">createAsyncIterable</span><span class="token punctuation">(</span><span class="token parameter">syncIterable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> elem <span class="token keyword">of</span> syncIterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> elem<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7531\u4E8E\u6CA1\u6709\u5F02\u6B65\u64CD\u4F5C\uFF0C\u6240\u4EE5\u4E5F\u5C31\u6CA1\u6709\u4F7F\u7528 <code>await</code> \u5173\u952E\u5B57\u3002</p><h3 id="yield-\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#yield-\u8BED\u53E5" aria-hidden="true">#</a> yield* \u8BED\u53E5</h3><p><code>yield*</code> \u8BED\u53E5\u4E5F\u53EF\u4EE5\u8DDF\u4E00\u4E2A\u5F02\u6B65\u904D\u5386\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// result \u6700\u7EC8\u4F1A\u7B49\u4E8E 2</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">gen1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>gen2</code> \u51FD\u6570\u91CC\u9762\u7684 <code>result</code> \u53D8\u91CF\uFF0C\u6700\u540E\u7684\u503C\u662F <code>2</code>\u3002</p><p>\u4E0E\u540C\u6B65 Generator \u51FD\u6570\u4E00\u6837\uFF0C<code>for await...of</code> \u5FAA\u73AF\u4F1A\u5C55\u5F00 <code>yield*</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// a</span>
<span class="token comment">// b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,70);function x(q,P){const t=u("ExternalLinkIcon");return o(),c("div",null,[k,r,i(" more "),d,n("p",null,[s("\u76EE\u524D\uFF0C"),n("a",v,[m,p(t)]),s("\u6A21\u5757\u52A0\u8F7D\u5668\u652F\u6301\u9876\u5C42 "),b,s("\uFF0C\u5373 "),y,s(" \u547D\u4EE4\u53EF\u4EE5\u4E0D\u653E\u5728 async \u51FD\u6570\u91CC\u9762\uFF0C\u76F4\u63A5\u4F7F\u7528\u3002")]),w,n("p",null,[s("ES2018 "),n("a",f,[s("\u5F15\u5165"),p(t)]),s("\u4E86\u201D\u5F02\u6B65\u904D\u5386\u5668\u201C(Async Iterator)\uFF0C\u4E3A\u5F02\u6B65\u64CD\u4F5C\u63D0\u4F9B\u539F\u751F\u7684\u904D\u5386\u5668\u63A5\u53E3\uFF0C\u5373 "),g,s(" \u548C "),h,s(" \u8FD9\u4E24\u4E2A\u5C5E\u6027\u90FD\u662F\u5F02\u6B65\u4EA7\u751F\u3002")]),j])}const S=e(l,[["render",x],["__file","async.html.vue"]]);export{S as default};
