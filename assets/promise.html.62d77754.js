import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as s,b as n,e as t,f as p,r as u}from"./app.8754ca23.js";const i={},l=p('<h1 id="promise-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#promise-\u5BF9\u8C61" aria-hidden="true">#</a> Promise \u5BF9\u8C61</h1><h2 id="promise-\u7684\u542B\u4E49" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u542B\u4E49" aria-hidden="true">#</a> Promise \u7684\u542B\u4E49</h2><p>Promise \u662F\u5F02\u6B65\u7F16\u7A0B\u7684\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u6BD4\u4F20\u7EDF\u7684\u89E3\u51B3\u65B9\u6848\u2014\u2014\u56DE\u8C03\u51FD\u6570\u548C\u4E8B\u4EF6\u2014\u2014\u66F4\u5408\u7406\u548C\u66F4\u5F3A\u5927\u3002\u5B83\u7531\u793E\u533A\u6700\u65E9\u63D0\u51FA\u548C\u5B9E\u73B0\uFF0CES6 \u5C06\u5176\u5199\u8FDB\u4E86\u8BED\u8A00\u6807\u51C6\uFF0C\u7EDF\u4E00\u4E86\u7528\u6CD5\uFF0C\u539F\u751F\u63D0\u4F9B\u4E86 <code>Promise</code> \u5BF9\u8C61\u3002</p><p>\u6240\u8C13 <code>Promise</code>\uFF0C\u7B80\u5355\u8BF4\u5C31\u662F\u4E00\u4E2A\u5BB9\u5668\uFF0C\u91CC\u9762\u4FDD\u5B58\u7740\u67D0\u4E2A\u672A\u6765\u624D\u4F1A\u7ED3\u675F\u7684\u4E8B\u4EF6(\u901A\u5E38\u662F\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C)\u7684\u7ED3\u679C\u3002\u4ECE\u8BED\u6CD5\u4E0A\u8BF4\uFF0CPromise \u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4ECE\u5B83\u53EF\u4EE5\u83B7\u53D6\u5F02\u6B65\u64CD\u4F5C\u7684\u6D88\u606F\u3002Promise \u63D0\u4F9B\u7EDF\u4E00\u7684 API\uFF0C\u5404\u79CD\u5F02\u6B65\u64CD\u4F5C\u90FD\u53EF\u4EE5\u7528\u540C\u6837\u7684\u65B9\u6CD5\u8FDB\u884C\u5904\u7406\u3002</p><p><code>Promise</code> \u5BF9\u8C61\u6709\u4EE5\u4E0B\u4E24\u4E2A\u7279\u70B9\u3002</p><p>(1)\u5BF9\u8C61\u7684\u72B6\u6001\u4E0D\u53D7\u5916\u754C\u5F71\u54CD\u3002<code>Promise</code> \u5BF9\u8C61\u4EE3\u8868\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u6709\u4E09\u79CD\u72B6\u6001: <code>pending</code>(\u8FDB\u884C\u4E2D)\u3001<code>fulfilled</code>(\u5DF2\u6210\u529F)\u548C <code>rejected</code>(\u5DF2\u5931\u8D25)\u3002\u53EA\u6709\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF0C\u53EF\u4EE5\u51B3\u5B9A\u5F53\u524D\u662F\u54EA\u4E00\u79CD\u72B6\u6001\uFF0C\u4EFB\u4F55\u5176\u4ED6\u64CD\u4F5C\u90FD\u65E0\u6CD5\u6539\u53D8\u8FD9\u4E2A\u72B6\u6001\u3002\u8FD9\u4E5F\u662F <code>Promise</code> \u8FD9\u4E2A\u540D\u5B57\u7684\u7531\u6765\uFF0C\u5B83\u7684\u82F1\u8BED\u610F\u601D\u5C31\u662F\u201C\u627F\u8BFA\u201D\uFF0C\u8868\u793A\u5176\u4ED6\u624B\u6BB5\u65E0\u6CD5\u6539\u53D8\u3002</p><p>(2)\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF0C\u5C31\u4E0D\u4F1A\u518D\u53D8\uFF0C\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C\u3002<code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u6539\u53D8\uFF0C\u53EA\u6709\u4E24\u79CD\u53EF\u80FD: \u4ECE <code>pending</code> \u53D8\u4E3A <code>fulfilled</code> \u548C\u4ECE <code>pending</code> \u53D8\u4E3A <code>rejected</code>\u3002\u53EA\u8981\u8FD9\u4E24\u79CD\u60C5\u51B5\u53D1\u751F\uFF0C\u72B6\u6001\u5C31\u51DD\u56FA\u4E86\uFF0C\u4E0D\u4F1A\u518D\u53D8\u4E86\uFF0C\u4F1A\u4E00\u76F4\u4FDD\u6301\u8FD9\u4E2A\u7ED3\u679C\uFF0C\u8FD9\u65F6\u5C31\u79F0\u4E3A resolved(\u5DF2\u5B9A\u578B)\u3002\u5982\u679C\u6539\u53D8\u5DF2\u7ECF\u53D1\u751F\u4E86\uFF0C\u60A8\u518D\u5BF9 <code>Promise</code> \u5BF9\u8C61\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\uFF0C\u4E5F\u4F1A\u7ACB\u5373\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C\u3002\u8FD9\u4E0E\u4E8B\u4EF6(Event)\u5B8C\u5168\u4E0D\u540C\uFF0C\u4E8B\u4EF6\u7684\u7279\u70B9\u662F\uFF0C\u5982\u679C\u60A8\u9519\u8FC7\u4E86\u5B83\uFF0C\u518D\u53BB\u76D1\u542C\uFF0C\u662F\u5F97\u4E0D\u5230\u7ED3\u679C\u7684\u3002</p><p>\u6CE8\u610F\uFF0C\u4E3A\u4E86\u884C\u6587\u65B9\u4FBF\uFF0C\u672C\u7AE0\u540E\u9762\u7684 <code>resolved</code> \u7EDF\u4E00\u53EA\u6307 <code>fulfilled</code> \u72B6\u6001\uFF0C\u4E0D\u5305\u542B <code>rejected</code> \u72B6\u6001\u3002</p><p>\u6709\u4E86 <code>Promise</code> \u5BF9\u8C61\uFF0C\u5C31\u53EF\u4EE5\u5C06\u5F02\u6B65\u64CD\u4F5C\u4EE5\u540C\u6B65\u64CD\u4F5C\u7684\u6D41\u7A0B\u8868\u8FBE\u51FA\u6765\uFF0C\u907F\u514D\u4E86\u5C42\u5C42\u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570\u3002\u6B64\u5916\uFF0C<code>Promise</code> \u5BF9\u8C61\u63D0\u4F9B\u7EDF\u4E00\u7684\u63A5\u53E3\uFF0C\u4F7F\u5F97\u63A7\u5236\u5F02\u6B65\u64CD\u4F5C\u66F4\u52A0\u5BB9\u6613\u3002</p><p><code>Promise</code> \u4E5F\u6709\u4E00\u4E9B\u7F3A\u70B9\u3002\u9996\u5148\uFF0C\u65E0\u6CD5\u53D6\u6D88 <code>Promise</code>\uFF0C\u4E00\u65E6\u65B0\u5EFA\u5B83\u5C31\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u65E0\u6CD5\u4E2D\u9014\u53D6\u6D88\u3002\u5176\u6B21\uFF0C\u5982\u679C\u4E0D\u8BBE\u7F6E\u56DE\u8C03\u51FD\u6570\uFF0C<code>Promise</code> \u5185\u90E8\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u4E0D\u4F1A\u53CD\u5E94\u5230\u5916\u90E8\u3002\u7B2C\u4E09\uFF0C\u5F53\u5904\u4E8E <code>pending</code> \u72B6\u6001\u65F6\uFF0C\u65E0\u6CD5\u5F97\u77E5\u76EE\u524D\u8FDB\u5C55\u5230\u54EA\u4E00\u4E2A\u9636\u6BB5(\u521A\u521A\u5F00\u59CB\u8FD8\u662F\u5373\u5C06\u5B8C\u6210)\u3002</p>',10),r={href:"https://nodejs.org/api/stream.html",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"Promise",-1),d=p(`<h2 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h2><p>ES6 \u89C4\u5B9A\uFF0C<code>Promise</code> \u5BF9\u8C61\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 <code>Promise</code> \u5B9E\u4F8B\u3002</p><p>\u4E0B\u9762\u4EE3\u7801\u521B\u9020\u4E86\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ... some code</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* \u5F02\u6B65\u64CD\u4F5C\u6210\u529F */</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise</code> \u6784\u9020\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u7684\u4E24\u4E2A\u53C2\u6570\u5206\u522B\u662F <code>resolve</code> \u548C <code>reject</code>\u3002\u5B83\u4EEC\u662F\u4E24\u4E2A\u51FD\u6570\uFF0C\u7531 JavaScript \u5F15\u64CE\u63D0\u4F9B\uFF0C\u4E0D\u7528\u81EA\u5DF1\u90E8\u7F72\u3002</p><p><code>resolve</code> \u51FD\u6570\u7684\u4F5C\u7528\u662F\uFF0C\u5C06 <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u4ECE\u201C\u672A\u5B8C\u6210\u201D\u53D8\u4E3A\u201C\u6210\u529F\u201D(\u5373\u4ECE pending \u53D8\u4E3A resolved)\uFF0C\u5728\u5F02\u6B65\u64CD\u4F5C\u6210\u529F\u65F6\u8C03\u7528\uFF0C\u5E76\u5C06\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u51FA\u53BB\uFF1B<code>reject</code> \u51FD\u6570\u7684\u4F5C\u7528\u662F\uFF0C\u5C06 <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u4ECE\u201C\u672A\u5B8C\u6210\u201D\u53D8\u4E3A\u201C\u5931\u8D25\u201D(\u5373\u4ECE pending \u53D8\u4E3A rejected)\uFF0C\u5728\u5F02\u6B65\u64CD\u4F5C\u5931\u8D25\u65F6\u8C03\u7528\uFF0C\u5E76\u5C06\u5F02\u6B65\u64CD\u4F5C\u62A5\u51FA\u7684\u9519\u8BEF\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u51FA\u53BB\u3002</p><p><code>Promise</code> \u5B9E\u4F8B\u751F\u6210\u4EE5\u540E\uFF0C\u53EF\u4EE5\u7528 <code>then</code> \u65B9\u6CD5\u5206\u522B\u6307\u5B9A <code>resolved</code> \u72B6\u6001\u548C <code>rejected</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// success</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// failure</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>then</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u3002\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u662F <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u4E3A <code>resolved</code> \u65F6\u8C03\u7528\uFF0C\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\u662F <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u53D8\u4E3A <code>rejected</code> \u65F6\u8C03\u7528\u3002\u5176\u4E2D\uFF0C\u7B2C\u4E8C\u4E2A\u51FD\u6570\u662F\u53EF\u9009\u7684\uFF0C\u4E0D\u4E00\u5B9A\u8981\u63D0\u4F9B\u3002\u8FD9\u4E24\u4E2A\u51FD\u6570\u90FD\u63A5\u53D7 <code>Promise</code> \u5BF9\u8C61\u4F20\u51FA\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u7684\u7B80\u5355\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">,</span> <span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>timeout</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B\uFF0C\u8868\u793A\u4E00\u6BB5\u65F6\u95F4\u4EE5\u540E\u624D\u4F1A\u53D1\u751F\u7684\u7ED3\u679C\u3002\u8FC7\u4E86\u6307\u5B9A\u7684\u65F6\u95F4(<code>ms</code> \u53C2\u6570)\u4EE5\u540E\uFF0C<code>Promise</code> \u5B9E\u4F8B\u7684\u72B6\u6001\u53D8\u4E3A <code>resolved</code>\uFF0C\u5C31\u4F1A\u89E6\u53D1 <code>then</code> \u65B9\u6CD5\u7ED1\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>Promise \u65B0\u5EFA\u540E\u5C31\u4F1A\u7ACB\u5373\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Promise&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolved.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hi!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Promise</span>
<span class="token comment">// Hi!</span>
<span class="token comment">// resolved</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0CPromise \u65B0\u5EFA\u540E\u7ACB\u5373\u6267\u884C\uFF0C\u6240\u4EE5\u9996\u5148\u8F93\u51FA\u7684\u662F <code>Promise</code>\u3002\u7136\u540E\uFF0C<code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5C06\u5728\u5F53\u524D\u811A\u672C\u6240\u6709\u540C\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u624D\u4F1A\u6267\u884C\uFF0C\u6240\u4EE5 <code>resolved</code> \u6700\u540E\u8F93\u51FA\u3002</p><p>\u4E0B\u9762\u662F\u5F02\u6B65\u52A0\u8F7D\u56FE\u7247\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadImageAsync</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Could not load image at &quot;</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    image<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4F7F\u7528 <code>Promise</code> \u5305\u88C5\u4E86\u4E00\u4E2A\u56FE\u7247\u52A0\u8F7D\u7684\u5F02\u6B65\u64CD\u4F5C\u3002\u5982\u679C\u52A0\u8F7D\u6210\u529F\uFF0C\u5C31\u8C03\u7528 <code>resolve</code> \u65B9\u6CD5\uFF0C\u5426\u5219\u5C31\u8C03\u7528 <code>reject</code> \u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7528 <code>Promise</code> \u5BF9\u8C61\u5B9E\u73B0\u7684 Ajax \u64CD\u4F5C\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getJSON</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    client<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Contents: &quot;</span> <span class="token operator">+</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>getJSON</code> \u662F\u5BF9 XMLHttpRequest \u5BF9\u8C61\u7684\u5C01\u88C5\uFF0C\u7528\u4E8E\u53D1\u51FA\u4E00\u4E2A\u9488\u5BF9 JSON \u6570\u636E\u7684 HTTP \u8BF7\u6C42\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5728 <code>getJSON</code> \u5185\u90E8\uFF0C<code>resolve</code> \u51FD\u6570\u548C <code>reject</code> \u51FD\u6570\u8C03\u7528\u65F6\uFF0C\u90FD\u5E26\u6709\u53C2\u6570\u3002</p><p>\u5982\u679C\u8C03\u7528 <code>resolve</code> \u51FD\u6570\u548C <code>reject</code> \u51FD\u6570\u65F6\u5E26\u6709\u53C2\u6570\uFF0C\u90A3\u4E48\u5B83\u4EEC\u7684\u53C2\u6570\u4F1A\u88AB\u4F20\u9012\u7ED9\u56DE\u8C03\u51FD\u6570\u3002<code>reject</code> \u51FD\u6570\u7684\u53C2\u6570\u901A\u5E38\u662F <code>Error</code> \u5BF9\u8C61\u7684\u5B9E\u4F8B\uFF0C\u8868\u793A\u629B\u51FA\u7684\u9519\u8BEF\uFF1B<code>resolve</code> \u51FD\u6570\u7684\u53C2\u6570\u9664\u4E86\u6B63\u5E38\u7684\u503C\u4EE5\u5916\uFF0C\u8FD8\u53EF\u80FD\u662F\u53E6\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C\u6BD4\u5982\u50CF\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>p1</code> \u548C <code>p2</code> \u90FD\u662F Promise \u7684\u5B9E\u4F8B\uFF0C\u4F46\u662F <code>p2</code> \u7684 <code>resolve</code> \u65B9\u6CD5\u5C06 <code>p1</code> \u4F5C\u4E3A\u53C2\u6570\uFF0C\u5373\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\u662F\u8FD4\u56DE\u53E6\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u3002</p><p>\u6CE8\u610F\uFF0C\u8FD9\u65F6 <code>p1</code> \u7684\u72B6\u6001\u5C31\u4F1A\u4F20\u9012\u7ED9 <code>p2</code>\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>p1</code> \u7684\u72B6\u6001\u51B3\u5B9A\u4E86 <code>p2</code> \u7684\u72B6\u6001\u3002\u5982\u679C <code>p1</code> \u7684\u72B6\u6001\u662F <code>pending</code>\uFF0C\u90A3\u4E48 <code>p2</code> \u7684\u56DE\u8C03\u51FD\u6570\u5C31\u4F1A\u7B49\u5F85 <code>p1</code> \u7684\u72B6\u6001\u6539\u53D8\uFF1B\u5982\u679C <code>p1</code> \u7684\u72B6\u6001\u5DF2\u7ECF\u662F <code>resolved</code> \u6216\u8005 <code>rejected</code>\uFF0C\u90A3\u4E48 <code>p2</code> \u7684\u56DE\u8C03\u51FD\u6570\u5C06\u4F1A\u7ACB\u523B\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;fail&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: fail</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>p1</code> \u662F\u4E00\u4E2A Promise\uFF0C3 \u79D2\u4E4B\u540E\u53D8\u4E3A <code>rejected</code>\u3002<code>p2</code> \u7684\u72B6\u6001\u5728 1 \u79D2\u4E4B\u540E\u6539\u53D8\uFF0C<code>resolve</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F <code>p1</code>\u3002\u7531\u4E8E <code>p2</code> \u8FD4\u56DE\u7684\u662F\u53E6\u4E00\u4E2A Promise\uFF0C\u5BFC\u81F4 <code>p2</code> \u81EA\u5DF1\u7684\u72B6\u6001\u65E0\u6548\u4E86\uFF0C\u7531 <code>p1</code> \u7684\u72B6\u6001\u51B3\u5B9A <code>p2</code> \u7684\u72B6\u6001\u3002\u6240\u4EE5\uFF0C\u540E\u9762\u7684 <code>then</code> \u8BED\u53E5\u90FD\u53D8\u6210\u9488\u5BF9\u540E\u8005(<code>p1</code>)\u3002\u53C8\u8FC7\u4E86 2 \u79D2\uFF0C<code>p1</code> \u53D8\u4E3A <code>rejected</code>\uFF0C\u5BFC\u81F4\u89E6\u53D1 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u6CE8\u610F\uFF0C\u8C03\u7528 <code>resolve</code> \u6216 <code>reject</code> \u5E76\u4E0D\u4F1A\u7EC8\u7ED3 Promise \u7684\u53C2\u6570\u51FD\u6570\u7684\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2</span>
<span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u8C03\u7528 <code>resolve(1)</code> \u4EE5\u540E\uFF0C\u540E\u9762\u7684 <code>console.log(2)</code> \u8FD8\u662F\u4F1A\u6267\u884C\uFF0C\u5E76\u4E14\u4F1A\u9996\u5148\u6253\u5370\u51FA\u6765\u3002\u8FD9\u662F\u56E0\u4E3A\u7ACB\u5373 resolved \u7684 Promise \u662F\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672B\u5C3E\u6267\u884C\uFF0C\u603B\u662F\u665A\u4E8E\u672C\u8F6E\u5FAA\u73AF\u7684\u540C\u6B65\u4EFB\u52A1\u3002</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u8C03\u7528 <code>resolve</code> \u6216 <code>reject</code> \u4EE5\u540E\uFF0CPromise \u7684\u4F7F\u547D\u5C31\u5B8C\u6210\u4E86\uFF0C\u540E\u7EE7\u64CD\u4F5C\u5E94\u8BE5\u653E\u5230 <code>then</code> \u65B9\u6CD5\u91CC\u9762\uFF0C\u800C\u4E0D\u5E94\u8BE5\u76F4\u63A5\u5199\u5728 <code>resolve</code> \u6216 <code>reject</code> \u7684\u540E\u9762\u3002\u6240\u4EE5\uFF0C\u6700\u597D\u5728\u5B83\u4EEC\u524D\u9762\u52A0\u4E0A <code>return</code> \u8BED\u53E5\uFF0C\u8FD9\u6837\u5C31\u4E0D\u4F1A\u6709\u610F\u5916\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u540E\u9762\u7684\u8BED\u53E5\u4E0D\u4F1A\u6267\u884C</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-prototype-then" tabindex="-1"><a class="header-anchor" href="#promise-prototype-then" aria-hidden="true">#</a> Promise.prototype.then()</h2><p>Promise \u5B9E\u4F8B\u5177\u6709 <code>then</code> \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C<code>then</code> \u65B9\u6CD5\u662F\u5B9A\u4E49\u5728\u539F\u578B\u5BF9\u8C61 <code>Promise.prototype</code> \u4E0A\u7684\u3002\u5B83\u7684\u4F5C\u7528\u662F\u4E3A Promise \u5B9E\u4F8B\u6DFB\u52A0\u72B6\u6001\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570\u3002\u524D\u9762\u8BF4\u8FC7\uFF0C<code>then</code> \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>resolved</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570(\u53EF\u9009)\u662F <code>rejected</code> \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p><code>then</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684 <code>Promise</code> \u5B9E\u4F8B(\u6CE8\u610F\uFF0C\u4E0D\u662F\u539F\u6765\u90A3\u4E2A <code>Promise</code> \u5B9E\u4F8B)\u3002\u56E0\u6B64\u53EF\u4EE5\u91C7\u7528\u94FE\u5F0F\u5199\u6CD5\uFF0C\u5373 <code>then</code> \u65B9\u6CD5\u540E\u9762\u518D\u8C03\u7528\u53E6\u4E00\u4E2A <code>then</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> json<span class="token punctuation">.</span>post<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\uFF0C\u4F9D\u6B21\u6307\u5B9A\u4E86\u4E24\u4E2A\u56DE\u8C03\u51FD\u6570\u3002\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u5B8C\u6210\u4EE5\u540E\uFF0C\u4F1A\u5C06\u8FD4\u56DE\u7ED3\u679C\u4F5C\u4E3A\u53C2\u6570\uFF0C\u4F20\u5165\u7B2C\u4E8C\u4E2A\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u91C7\u7528\u94FE\u5F0F\u7684 <code>then</code>\uFF0C\u53EF\u4EE5\u6307\u5B9A\u4E00\u7EC4\u6309\u7167\u6B21\u5E8F\u8C03\u7528\u7684\u56DE\u8C03\u51FD\u6570\u3002\u8FD9\u65F6\uFF0C\u524D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u6709\u53EF\u80FD\u8FD4\u56DE\u7684\u8FD8\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61(\u5373\u6709\u5F02\u6B65\u64CD\u4F5C)\uFF0C\u8FD9\u65F6\u540E\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u4F1A\u7B49\u5F85\u8BE5 <code>Promise</code> \u5BF9\u8C61\u7684\u72B6\u6001\u53D1\u751F\u53D8\u5316\uFF0C\u624D\u4F1A\u88AB\u8C03\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/post/1.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getJSON</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>commentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token function">funcA</span><span class="token punctuation">(</span><span class="token parameter">comments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolved: &quot;</span><span class="token punctuation">,</span> comments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token function">funcB</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;rejected: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E00\u4E2A <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8FD4\u56DE\u7684\u662F\u53E6\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002\u8FD9\u65F6\uFF0C\u7B2C\u4E8C\u4E2A <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u4F1A\u7B49\u5F85\u8FD9\u4E2A\u65B0\u7684 <code>Promise</code> \u5BF9\u8C61\u72B6\u6001\u53D1\u751F\u53D8\u5316\u3002\u5982\u679C\u53D8\u4E3A <code>resolved</code>\uFF0C\u5C31\u8C03\u7528 <code>funcA</code>\uFF0C\u5982\u679C\u72B6\u6001\u53D8\u4E3A <code>rejected</code>\uFF0C\u5C31\u8C03\u7528 <code>funcB</code>\u3002</p><p>\u5982\u679C\u91C7\u7528\u7BAD\u5934\u51FD\u6570\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u5199\u5F97\u66F4\u7B80\u6D01\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/post/1.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getJSON</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>commentURL<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">comments</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolved: &quot;</span><span class="token punctuation">,</span> comments<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;rejected: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-prototype-catch" tabindex="-1"><a class="header-anchor" href="#promise-prototype-catch" aria-hidden="true">#</a> Promise.prototype.catch()</h2><p><code>Promise.prototype.catch</code> \u65B9\u6CD5\u662F <code>.then(null, rejection)</code> \u7684\u522B\u540D\uFF0C\u7528\u4E8E\u6307\u5B9A\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406 getJSON \u548C \u524D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u8FD0\u884C\u65F6\u53D1\u751F\u7684\u9519\u8BEF</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u751F\u9519\u8BEF!&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>getJSON</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u5982\u679C\u8BE5\u5BF9\u8C61\u72B6\u6001\u53D8\u4E3A <code>resolved</code>\uFF0C\u5219\u4F1A\u8C03\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF1B\u5982\u679C\u5F02\u6B65\u64CD\u4F5C\u629B\u51FA\u9519\u8BEF\uFF0C\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A <code>rejected</code>\uFF0C\u5C31\u4F1A\u8C03\u7528 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5904\u7406\u8FD9\u4E2A\u9519\u8BEF\u3002\u53E6\u5916\uFF0C<code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5982\u679C\u8FD0\u884C\u4E2D\u629B\u51FA\u9519\u8BEF\uFF0C\u4E5F\u4F1A\u88AB <code>catch</code> \u65B9\u6CD5\u6355\u83B7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fulfilled:&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;rejected&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fulfilled:&quot;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;rejected:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>promise</code> \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u5C31\u88AB <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u6355\u83B7\u3002\u6CE8\u610F\uFF0C\u4E0A\u9762\u7684\u5199\u6CD5\u4E0E\u4E0B\u9762\u4E24\u79CD\u5199\u6CD5\u662F\u7B49\u4EF7\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5199\u6CD5\u4E00</span>
<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u6CD5\u4E8C</span>
<span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BD4\u8F83\u4E0A\u9762\u4E24\u79CD\u5199\u6CD5\uFF0C\u53EF\u4EE5\u53D1\u73B0 <code>reject</code> \u65B9\u6CD5\u7684\u4F5C\u7528\uFF0C\u7B49\u540C\u4E8E\u629B\u51FA\u9519\u8BEF\u3002</p><p>\u5982\u679C Promise \u72B6\u6001\u5DF2\u7ECF\u53D8\u6210 <code>resolved</code>\uFF0C\u518D\u629B\u51FA\u9519\u8BEF\u662F\u65E0\u6548\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0CPromise \u5728 <code>resolve</code> \u8BED\u53E5\u540E\u9762\uFF0C\u518D\u629B\u51FA\u9519\u8BEF\uFF0C\u4E0D\u4F1A\u88AB\u6355\u83B7\uFF0C\u7B49\u4E8E\u6CA1\u6709\u629B\u51FA\u3002\u56E0\u4E3A Promise \u7684\u72B6\u6001\u4E00\u65E6\u6539\u53D8\uFF0C\u5C31\u6C38\u4E45\u4FDD\u6301\u8BE5\u72B6\u6001\uFF0C\u4E0D\u4F1A\u518D\u53D8\u4E86\u3002</p><p>Promise \u5BF9\u8C61\u7684\u9519\u8BEF\u5177\u6709\u201C\u5192\u6CE1\u201D\u6027\u8D28\uFF0C\u4F1A\u4E00\u76F4\u5411\u540E\u4F20\u9012\uFF0C\u76F4\u5230\u88AB\u6355\u83B7\u4E3A\u6B62\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u9519\u8BEF\u603B\u662F\u4F1A\u88AB\u4E0B\u4E00\u4E2A <code>catch</code> \u8BED\u53E5\u6355\u83B7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/post/1.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getJSON</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>commentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">comments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// some code</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406\u524D\u9762\u4E09\u4E2APromise\u4EA7\u751F\u7684\u9519\u8BEF</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E00\u5171\u6709\u4E09\u4E2A Promise \u5BF9\u8C61: \u4E00\u4E2A\u7531 <code>getJSON</code> \u4EA7\u751F\uFF0C\u4E24\u4E2A\u7531 <code>then</code> \u4EA7\u751F\u3002\u5B83\u4EEC\u4E4B\u4E2D\u4EFB\u4F55\u4E00\u4E2A\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u90FD\u4F1A\u88AB\u6700\u540E\u4E00\u4E2A <code>catch</code> \u6355\u83B7\u3002</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u4E0D\u8981\u5728 <code>then</code> \u65B9\u6CD5\u91CC\u9762\u5B9A\u4E49 Reject \u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570(\u5373 <code>then</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570)\uFF0C\u603B\u662F\u4F7F\u7528 <code>catch</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// bad</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// success</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// good</span>
promise
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//cb</span>
    <span class="token comment">// success</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u79CD\u5199\u6CD5\u8981\u597D\u4E8E\u7B2C\u4E00\u79CD\u5199\u6CD5\uFF0C\u7406\u7531\u662F\u7B2C\u4E8C\u79CD\u5199\u6CD5\u53EF\u4EE5\u6355\u83B7\u524D\u9762 <code>then</code> \u65B9\u6CD5\u6267\u884C\u4E2D\u7684\u9519\u8BEF\uFF0C\u4E5F\u66F4\u63A5\u8FD1\u540C\u6B65\u7684\u5199\u6CD5(<code>try/catch</code>)\u3002\u56E0\u6B64\uFF0C\u5EFA\u8BAE\u603B\u662F\u4F7F\u7528 <code>catch</code> \u65B9\u6CD5\uFF0C\u800C\u4E0D\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><p>\u8DDF\u4F20\u7EDF\u7684 <code>try/catch</code> \u4EE3\u7801\u5757\u4E0D\u540C\u7684\u662F\uFF0C\u5982\u679C\u6CA1\u6709\u4F7F\u7528 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u9519\u8BEF\u5904\u7406\u7684\u56DE\u8C03\u51FD\u6570\uFF0CPromise \u5BF9\u8C61\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u4F20\u9012\u5230\u5916\u5C42\u4EE3\u7801\uFF0C\u5373\u4E0D\u4F1A\u6709\u4EFB\u4F55\u53CD\u5E94\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">someAsyncThing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ax\u6CA1\u6709\u58F0\u660E</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">someAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;everything is great&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) ReferenceError: x is not defined</span>
<span class="token comment">// 123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>someAsyncThing</code> \u51FD\u6570\u4EA7\u751F\u7684 Promise \u5BF9\u8C61\uFF0C\u5185\u90E8\u6709\u8BED\u6CD5\u9519\u8BEF\u3002\u6D4F\u89C8\u5668\u8FD0\u884C\u5230\u8FD9\u4E00\u884C\uFF0C\u4F1A\u6253\u5370\u51FA\u9519\u8BEF\u63D0\u793A <code>ReferenceError: x is not defined</code>\uFF0C\u4F46\u662F\u4E0D\u4F1A\u9000\u51FA\u8FDB\u7A0B\u3001\u7EC8\u6B62\u811A\u672C\u6267\u884C\uFF0C2 \u79D2\u4E4B\u540E\u8FD8\u662F\u4F1A\u8F93\u51FA <code>123</code>\u3002\u8FD9\u5C31\u662F\u8BF4\uFF0CPromise \u5185\u90E8\u7684\u9519\u8BEF\u4E0D\u4F1A\u5F71\u54CD\u5230 Promise \u5916\u90E8\u7684\u4EE3\u7801\uFF0C\u901A\u4FD7\u7684\u8BF4\u6CD5\u5C31\u662F\u201CPromise \u4F1A\u5403\u6389\u9519\u8BEF\u201D\u3002</p><p>\u8FD9\u4E2A\u811A\u672C\u653E\u5728\u670D\u52A1\u5668\u6267\u884C\uFF0C\u9000\u51FA\u7801\u5C31\u662F <code>0</code>(\u5373\u8868\u793A\u6267\u884C\u6210\u529F)\u3002\u4E0D\u8FC7\uFF0CNode.js \u6709\u4E00\u4E2A <code>unhandledRejection</code> \u4E8B\u4EF6\uFF0C\u4E13\u95E8\u76D1\u542C\u672A\u6355\u83B7\u7684 <code>reject</code> \u9519\u8BEF\uFF0C\u4E0A\u9762\u7684\u811A\u672C\u4F1A\u89E6\u53D1\u8FD9\u4E2A\u4E8B\u4EF6\u7684\u76D1\u542C\u51FD\u6570\uFF0C\u53EF\u4EE5\u5728\u76D1\u542C\u51FD\u6570\u91CC\u9762\u629B\u51FA\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;unhandledRejection&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>unhandledRejection</code> \u4E8B\u4EF6\u7684\u76D1\u542C\u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F\u9519\u8BEF\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u62A5\u9519\u7684 Promise \u5B9E\u4F8B\uFF0C\u5B83\u53EF\u4EE5\u7528\u6765\u4E86\u89E3\u53D1\u751F\u9519\u8BEF\u7684\u73AF\u5883\u4FE1\u606F\u3002</p><p>\u6CE8\u610F\uFF0CNode.js \u6709\u8BA1\u5212\u5728\u672A\u6765\u5E9F\u9664 <code>unhandledRejection</code> \u4E8B\u4EF6\u3002\u5982\u679C Promise \u5185\u90E8\u6709\u672A\u6355\u83B7\u7684\u9519\u8BEF\uFF0C\u4F1A\u76F4\u63A5\u7EC8\u6B62\u8FDB\u7A0B\uFF0C\u5E76\u4E14\u8FDB\u7A0B\u7684\u9000\u51FA\u7801\u4E0D\u4E3A 0\u3002</p><p>\u518D\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ok</span>
<span class="token comment">// Uncaught Error: test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0CPromise \u6307\u5B9A\u5728\u4E0B\u4E00\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\u518D\u629B\u51FA\u9519\u8BEF\u3002\u5230\u4E86\u90A3\u4E2A\u65F6\u5019\uFF0CPromise \u7684\u8FD0\u884C\u5DF2\u7ECF\u7ED3\u675F\u4E86\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u9519\u8BEF\u662F\u5728 Promise \u51FD\u6570\u4F53\u5916\u629B\u51FA\u7684\uFF0C\u4F1A\u5192\u6CE1\u5230\u6700\u5916\u5C42\uFF0C\u6210\u4E86\u672A\u6355\u83B7\u7684\u9519\u8BEF\u3002</p><p>\u4E00\u822C\u603B\u662F\u5EFA\u8BAE\uFF0CPromise \u5BF9\u8C61\u540E\u9762\u8981\u8DDF <code>catch</code> \u65B9\u6CD5\uFF0C\u8FD9\u6837\u53EF\u4EE5\u5904\u7406 Promise \u5185\u90E8\u53D1\u751F\u7684\u9519\u8BEF\u3002<code>catch</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u8FD8\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u56E0\u6B64\u540E\u9762\u8FD8\u53EF\u4EE5\u63A5\u7740\u8C03\u7528 <code>then</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">someAsyncThing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ax\u6CA1\u6709\u58F0\u660E</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">someAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;oh no&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;carry on&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// oh no [ReferenceError: x is not defined]</span>
<span class="token comment">// carry on</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8FD0\u884C\u5B8C <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u4F1A\u63A5\u7740\u8FD0\u884C\u540E\u9762\u90A3\u4E2A <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002\u5982\u679C\u6CA1\u6709\u62A5\u9519\uFF0C\u5219\u4F1A\u8DF3\u8FC7 <code>catch</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;oh no&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;carry on&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// carry on</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u56E0\u4E3A\u6CA1\u6709\u62A5\u9519\uFF0C\u8DF3\u8FC7\u4E86 <code>catch</code> \u65B9\u6CD5\uFF0C\u76F4\u63A5\u6267\u884C\u540E\u9762\u7684 <code>then</code> \u65B9\u6CD5\u3002\u6B64\u65F6\uFF0C\u8981\u662F <code>then</code> \u65B9\u6CD5\u91CC\u9762\u62A5\u9519\uFF0C\u5C31\u4E0E\u524D\u9762\u7684 <code>catch</code> \u65E0\u5173\u4E86\u3002</p><p><code>catch</code> \u65B9\u6CD5\u4E4B\u4E2D\uFF0C\u8FD8\u80FD\u518D\u629B\u51FA\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">someAsyncThing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ax\u6CA1\u6709\u58F0\u660E</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">someAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">someOtherAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;oh no&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A y \u6CA1\u6709\u58F0\u660E</span>
    y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;carry on&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// oh no [ReferenceError: x is not defined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>catch</code> \u65B9\u6CD5\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u56E0\u4E3A\u540E\u9762\u6CA1\u6709\u522B\u7684 <code>catch</code> \u65B9\u6CD5\u4E86\uFF0C\u5BFC\u81F4\u8FD9\u4E2A\u9519\u8BEF\u4E0D\u4F1A\u88AB\u6355\u83B7\uFF0C\u4E5F\u4E0D\u4F1A\u4F20\u9012\u5230\u5916\u5C42\u3002\u5982\u679C\u6539\u5199\u4E00\u4E0B\uFF0C\u7ED3\u679C\u5C31\u4E0D\u4E00\u6837\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">someAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">someOtherAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;oh no&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ay\u6CA1\u6709\u58F0\u660E</span>
    y <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;carry on&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// oh no [ReferenceError: x is not defined]</span>
<span class="token comment">// carry on [ReferenceError: y is not defined]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u4E2A <code>catch</code> \u65B9\u6CD5\u7528\u6765\u6355\u83B7\u524D\u4E00\u4E2A <code>catch</code> \u65B9\u6CD5\u629B\u51FA\u7684\u9519\u8BEF\u3002</p><h2 id="promise-prototype-finally" tabindex="-1"><a class="header-anchor" href="#promise-prototype-finally" aria-hidden="true">#</a> Promise.prototype.finally()</h2><p><code>finally</code> \u65B9\u6CD5\u7528\u4E8E\u6307\u5B9A\u4E0D\u7BA1 Promise \u5BF9\u8C61\u6700\u540E\u72B6\u6001\u5982\u4F55\uFF0C\u90FD\u4F1A\u6267\u884C\u7684\u64CD\u4F5C\u3002\u8BE5\u65B9\u6CD5\u662F ES2018 \u5F15\u5165\u6807\u51C6\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E0D\u7BA1 <code>promise</code> \u6700\u540E\u7684\u72B6\u6001\uFF0C\u5728\u6267\u884C\u5B8C <code>then</code> \u6216 <code>catch</code> \u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u4EE5\u540E\uFF0C\u90FD\u4F1A\u6267\u884C <code>finally</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u670D\u52A1\u5668\u4F7F\u7528 Promise \u5904\u7406\u8BF7\u6C42\uFF0C\u7136\u540E\u4F7F\u7528 <code>finally</code> \u65B9\u6CD5\u5173\u6389\u670D\u52A1\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>server
  <span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span>server<span class="token punctuation">.</span>stop<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>finally</code> \u65B9\u6CD5\u7684\u56DE\u8C03\u51FD\u6570\u4E0D\u63A5\u53D7\u4EFB\u4F55\u53C2\u6570\uFF0C\u8FD9\u610F\u5473\u7740\u6CA1\u6709\u529E\u6CD5\u77E5\u9053\uFF0C\u524D\u9762\u7684 Promise \u72B6\u6001\u5230\u5E95\u662F <code>fulfilled</code> \u8FD8\u662F <code>rejected</code>\u3002\u8FD9\u8868\u660E\uFF0C<code>finally</code> \u65B9\u6CD5\u91CC\u9762\u7684\u64CD\u4F5C\uFF0C\u5E94\u8BE5\u662F\u4E0E\u72B6\u6001\u65E0\u5173\u7684\uFF0C\u4E0D\u4F9D\u8D56\u4E8E Promise \u7684\u6267\u884C\u7ED3\u679C\u3002</p><p><code>finally</code> \u672C\u8D28\u4E0A\u662F <code>then</code> \u65B9\u6CD5\u7684\u7279\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8BED\u53E5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BED\u53E5</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BED\u53E5</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528 <code>finally</code> \u65B9\u6CD5\uFF0C\u540C\u6837\u7684\u8BED\u53E5\u9700\u8981\u4E3A\u6210\u529F\u548C\u5931\u8D25\u4E24\u79CD\u60C5\u51B5\u5404\u5199\u4E00\u6B21\u3002\u6709\u4E86 <code>finally</code> \u65B9\u6CD5\uFF0C\u5219\u53EA\u9700\u8981\u5199\u4E00\u6B21\u3002</p><p>\u5B83\u7684\u5B9E\u73B0\u4E5F\u5F88\u7B80\u5355\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">P</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token constant">P</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> reason<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E0D\u7BA1\u524D\u9762\u7684 Promise \u662F <code>fulfilled</code> \u8FD8\u662F <code>rejected</code>\uFF0C\u90FD\u4F1A\u6267\u884C\u56DE\u8C03\u51FD\u6570 <code>callback</code>\u3002</p><p>\u4ECE\u4E0A\u9762\u7684\u5B9E\u73B0\u8FD8\u53EF\u4EE5\u770B\u5230\uFF0C<code>finally</code> \u65B9\u6CD5\u603B\u662F\u4F1A\u8FD4\u56DE\u539F\u6765\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// resolve \u7684\u503C\u662F undefined</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// resolve \u7684\u503C\u662F 2</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// reject \u7684\u503C\u662F undefined</span>
Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// reject \u7684\u503C\u662F 3</span>
Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-all" tabindex="-1"><a class="header-anchor" href="#promise-all" aria-hidden="true">#</a> Promise.all()</h2><p><code>Promise.all</code> \u65B9\u6CD5\u7528\u4E8E\u5C06\u591A\u4E2A Promise \u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Promise.all</code> \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u90FD\u662F Promise \u5B9E\u4F8B\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u5C31\u4F1A\u5148\u8C03\u7528\u4E0B\u9762\u8BB2\u5230\u7684 <code>Promise.resolve</code> \u65B9\u6CD5\uFF0C\u5C06\u53C2\u6570\u8F6C\u4E3A Promise \u5B9E\u4F8B\uFF0C\u518D\u8FDB\u4E00\u6B65\u5904\u7406\u3002(<code>Promise.all</code> \u65B9\u6CD5\u7684\u53C2\u6570\u53EF\u4EE5\u4E0D\u662F\u6570\u7EC4\uFF0C\u4F46\u5FC5\u987B\u5177\u6709 Iterator \u63A5\u53E3\uFF0C\u4E14\u8FD4\u56DE\u7684\u6BCF\u4E2A\u6210\u5458\u90FD\u662F Promise \u5B9E\u4F8B\u3002)</p><p><code>p</code> \u7684\u72B6\u6001\u7531 <code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u51B3\u5B9A\uFF0C\u5206\u6210\u4E24\u79CD\u60C5\u51B5\u3002</p><p>(1)\u53EA\u6709 <code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u7684\u72B6\u6001\u90FD\u53D8\u6210 <code>fulfilled</code>\uFF0C<code>p</code> \u7684\u72B6\u6001\u624D\u4F1A\u53D8\u6210 <code>fulfilled</code>\uFF0C\u6B64\u65F6 <code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F20\u9012\u7ED9 <code>p</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>(2)\u53EA\u8981 <code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u4E4B\u4E2D\u6709\u4E00\u4E2A\u88AB <code>rejected</code>\uFF0C<code>p</code> \u7684\u72B6\u6001\u5C31\u53D8\u6210 <code>rejected</code>\uFF0C\u6B64\u65F6\u7B2C\u4E00\u4E2A\u88AB <code>reject</code> \u7684\u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\uFF0C\u4F1A\u4F20\u9012\u7ED9 <code>p</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5177\u4F53\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210\u4E00\u4E2APromise\u5BF9\u8C61\u7684\u6570\u7EC4</span>
<span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/post/&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>promises</code> \u662F\u5305\u542B 6 \u4E2A Promise \u5B9E\u4F8B\u7684\u6570\u7EC4\uFF0C\u53EA\u6709\u8FD9 6 \u4E2A\u5B9E\u4F8B\u7684\u72B6\u6001\u90FD\u53D8\u6210 <code>fulfilled</code>\uFF0C\u6216\u8005\u5176\u4E2D\u6709\u4E00\u4E2A\u53D8\u4E3A <code>rejected</code>\uFF0C\u624D\u4F1A\u8C03\u7528 <code>Promise.all</code> \u65B9\u6CD5\u540E\u9762\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> databasePromise <span class="token operator">=</span> <span class="token function">connectDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> booksPromise <span class="token operator">=</span> databasePromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>findAllBooks<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> userPromise <span class="token operator">=</span> databasePromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>getCurrentUser<span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>booksPromise<span class="token punctuation">,</span> userPromise<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>books<span class="token punctuation">,</span> user<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token function">pickTopRecommentations</span><span class="token punctuation">(</span>books<span class="token punctuation">,</span> user<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>booksPromise</code> \u548C <code>userPromise</code> \u662F\u4E24\u4E2A\u5F02\u6B65\u64CD\u4F5C\uFF0C\u53EA\u6709\u7B49\u5230\u5B83\u4EEC\u7684\u7ED3\u679C\u90FD\u8FD4\u56DE\u4E86\uFF0C\u624D\u4F1A\u89E6\u53D1 <code>pickTopRecommentations</code> \u8FD9\u4E2A\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u4F5C\u4E3A\u53C2\u6570\u7684 Promise \u5B9E\u4F8B\uFF0C\u81EA\u5DF1\u5B9A\u4E49\u4E86 <code>catch</code> \u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B83\u4E00\u65E6\u88AB <code>rejected</code>\uFF0C\u5E76\u4E0D\u4F1A\u89E6\u53D1 <code>Promise.all()</code> \u7684 <code>catch</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u62A5\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;hello&quot;, Error: \u62A5\u9519\u4E86]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>p1</code> \u4F1A <code>resolved</code>\uFF0C<code>p2</code> \u9996\u5148\u4F1A <code>rejected</code>\uFF0C\u4F46\u662F <code>p2</code> \u6709\u81EA\u5DF1\u7684 <code>catch</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\uFF0C<code>p2</code> \u6307\u5411\u7684\u5B9E\u9645\u4E0A\u662F\u8FD9\u4E2A\u5B9E\u4F8B\u3002\u8BE5\u5B9E\u4F8B\u6267\u884C\u5B8C <code>catch</code> \u65B9\u6CD5\u540E\uFF0C\u4E5F\u4F1A\u53D8\u6210 <code>resolved</code>\uFF0C\u5BFC\u81F4 <code>Promise.all()</code> \u65B9\u6CD5\u53C2\u6570\u91CC\u9762\u7684\u4E24\u4E2A\u5B9E\u4F8B\u90FD\u4F1A <code>resolved</code>\uFF0C\u56E0\u6B64\u4F1A\u8C03\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u800C\u4E0D\u4F1A\u8C03\u7528 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u5982\u679C <code>p2</code> \u6CA1\u6709\u81EA\u5DF1\u7684 <code>catch</code> \u65B9\u6CD5\uFF0C\u5C31\u4F1A\u8C03\u7528 <code>Promise.all()</code> \u7684 <code>catch</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u62A5\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: \u62A5\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="promise-race" tabindex="-1"><a class="header-anchor" href="#promise-race" aria-hidden="true">#</a> Promise.race()</h2><p><code>Promise.race</code> \u65B9\u6CD5\u540C\u6837\u662F\u5C06\u591A\u4E2A Promise \u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EA\u8981 <code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code> \u4E4B\u4E2D\u6709\u4E00\u4E2A\u5B9E\u4F8B\u7387\u5148\u6539\u53D8\u72B6\u6001\uFF0C<code>p</code> \u7684\u72B6\u6001\u5C31\u8DDF\u7740\u6539\u53D8\u3002\u90A3\u4E2A\u7387\u5148\u6539\u53D8\u7684 Promise \u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\uFF0C\u5C31\u4F20\u9012\u7ED9 <code>p</code> \u7684\u56DE\u8C03\u51FD\u6570\u3002</p><p><code>Promise.race</code> \u65B9\u6CD5\u7684\u53C2\u6570\u4E0E <code>Promise.all</code> \u65B9\u6CD5\u4E00\u6837\uFF0C\u5982\u679C\u4E0D\u662F Promise \u5B9E\u4F8B\uFF0C\u5C31\u4F1A\u5148\u8C03\u7528\u4E0B\u9762\u8BB2\u5230\u7684 <code>Promise.resolve</code> \u65B9\u6CD5\uFF0C\u5C06\u53C2\u6570\u8F6C\u4E3A Promise \u5B9E\u4F8B\uFF0C\u518D\u8FDB\u4E00\u6B65\u5904\u7406\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u5982\u679C\u6307\u5B9A\u65F6\u95F4\u5185\u6CA1\u6709\u83B7\u5F97\u7ED3\u679C\uFF0C\u5C31\u5C06 Promise \u7684\u72B6\u6001\u53D8\u4E3A <code>reject</code>\uFF0C\u5426\u5219\u53D8\u4E3A <code>resolve</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/resource-that-may-take-a-while&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;request timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C 5 \u79D2\u4E4B\u5185 <code>fetch</code> \u65B9\u6CD5\u65E0\u6CD5\u8FD4\u56DE\u7ED3\u679C\uFF0C\u53D8\u91CF <code>p</code> \u7684\u72B6\u6001\u5C31\u4F1A\u53D8\u4E3A <code>rejected</code>\uFF0C\u4ECE\u800C\u89E6\u53D1 <code>catch</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\u3002</p><h2 id="promise-resolve" tabindex="-1"><a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a> Promise.resolve()</h2><p>\u6709\u65F6\u9700\u8981\u5C06\u73B0\u6709\u5BF9\u8C61\u8F6C\u4E3A Promise \u5BF9\u8C61\uFF0C<code>Promise.resolve</code> \u65B9\u6CD5\u5C31\u8D77\u5230\u8FD9\u4E2A\u4F5C\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> jsPromise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;/whatever.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06 jQuery \u751F\u6210\u7684 <code>deferred</code> \u5BF9\u8C61\uFF0C\u8F6C\u4E3A\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\u3002</p><p><code>Promise.resolve</code> \u7B49\u4EF7\u4E8E\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise.resolve</code> \u65B9\u6CD5\u7684\u53C2\u6570\u5206\u6210\u56DB\u79CD\u60C5\u51B5\u3002</p><ol><li><p>\u53C2\u6570\u662F\u4E00\u4E2A <code>Promise</code> \u5B9E\u4F8B</p><p>\u5982\u679C\u53C2\u6570\u662F Promise \u5B9E\u4F8B\uFF0C\u90A3\u4E48 <code>Promise.resolve</code> \u5C06\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539\u3001\u539F\u5C01\u4E0D\u52A8\u5730\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B\u3002</p></li><li><p>\u53C2\u6570\u662F\u4E00\u4E2A <code>thenable</code> \u5BF9\u8C61</p><p><code>thenable</code> \u5BF9\u8C61\u6307\u7684\u662F\u5177\u6709 <code>then</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise.resolve</code> \u65B9\u6CD5\u4F1A\u5C06\u8FD9\u4E2A\u5BF9\u8C61\u8F6C\u4E3A Promise \u5BF9\u8C61\uFF0C\u7136\u540E\u5C31\u7ACB\u5373\u6267\u884C <code>thenable</code> \u5BF9\u8C61\u7684 <code>then</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 42</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>thenable</code> \u5BF9\u8C61\u7684 <code>then</code> \u65B9\u6CD5\u6267\u884C\u540E\uFF0C\u5BF9\u8C61 <code>p1</code> \u7684\u72B6\u6001\u5C31\u53D8\u4E3A <code>resolved</code>\uFF0C\u4ECE\u800C\u7ACB\u5373\u6267\u884C\u6700\u540E\u90A3\u4E2A <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8F93\u51FA 42\u3002</p></li><li><p>\u53C2\u6570\u4E0D\u662F\u5177\u6709 <code>then</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u6216\u6839\u672C\u5C31\u4E0D\u662F\u5BF9\u8C61</p><p>\u5982\u679C\u53C2\u6570\u662F\u4E00\u4E2A\u539F\u59CB\u503C\uFF0C\u6216\u8005\u662F\u4E00\u4E2A\u4E0D\u5177\u6709 <code>then</code> \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u5219 <code>Promise.resolve</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\uFF0C\u72B6\u6001\u4E3A <code>resolved</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hello</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u751F\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\u7684\u5B9E\u4F8B <code>p</code>\u3002\u7531\u4E8E\u5B57\u7B26\u4E32 <code>Hello</code> \u4E0D\u5C5E\u4E8E\u5F02\u6B65\u64CD\u4F5C(\u5224\u65AD\u65B9\u6CD5\u662F\u5B57\u7B26\u4E32\u5BF9\u8C61\u4E0D\u5177\u6709 then \u65B9\u6CD5)\uFF0C\u8FD4\u56DE Promise \u5B9E\u4F8B\u7684\u72B6\u6001\u4ECE\u4E00\u751F\u6210\u5C31\u662F <code>resolved</code>\uFF0C\u6240\u4EE5\u56DE\u8C03\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\u3002<code>Promise.resolve</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u4F1A\u540C\u65F6\u4F20\u7ED9\u56DE\u8C03\u51FD\u6570\u3002</p></li><li><p>\u4E0D\u5E26\u6709\u4EFB\u4F55\u53C2\u6570</p><p><code>Promise.resolve</code> \u65B9\u6CD5\u5141\u8BB8\u8C03\u7528\u65F6\u4E0D\u5E26\u53C2\u6570\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A <code>resolved</code> \u72B6\u6001\u7684 Promise \u5BF9\u8C61\u3002</p><p>\u6240\u4EE5\uFF0C\u5982\u679C\u5E0C\u671B\u5F97\u5230\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u6BD4\u8F83\u65B9\u4FBF\u7684\u65B9\u6CD5\u5C31\u662F\u76F4\u63A5\u8C03\u7528 <code>Promise.resolve</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684\u53D8\u91CF <code>p</code> \u5C31\u662F\u4E00\u4E2A Promise \u5BF9\u8C61\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7ACB\u5373 <code>resolve</code> \u7684 Promise \u5BF9\u8C61\uFF0C\u662F\u5728\u672C\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D(event loop)\u7684\u7ED3\u675F\u65F6\uFF0C\u800C\u4E0D\u662F\u5728\u4E0B\u4E00\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\u7684\u5F00\u59CB\u65F6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;three&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// one</span>
<span class="token comment">// two</span>
<span class="token comment">// three</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>setTimeout(fn, 0)</code> \u5728\u4E0B\u4E00\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\u5F00\u59CB\u65F6\u6267\u884C\uFF0C<code>Promise.resolve()</code> \u5728\u672C\u8F6E\u201C\u4E8B\u4EF6\u5FAA\u73AF\u201D\u7ED3\u675F\u65F6\u6267\u884C\uFF0C<code>console.log(&#39;one&#39;)</code> \u5219\u662F\u7ACB\u5373\u6267\u884C\uFF0C\u56E0\u6B64\u6700\u5148\u8F93\u51FA\u3002</p></li></ol><h2 id="promise-reject" tabindex="-1"><a class="header-anchor" href="#promise-reject" aria-hidden="true">#</a> Promise.reject()</h2><p><code>Promise.reject(reason)</code> \u65B9\u6CD5\u4E5F\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7684\u72B6\u6001\u4E3A <code>rejected</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u751F\u6210\u4E00\u4E2A Promise \u5BF9\u8C61\u7684\u5B9E\u4F8B <code>p</code>\uFF0C\u72B6\u6001\u4E3A <code>rejected</code>\uFF0C\u56DE\u8C03\u51FD\u6570\u4F1A\u7ACB\u5373\u6267\u884C\u3002</p><p>\u6CE8\u610F\uFF0C<code>Promise.reject()</code> \u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u4F1A\u539F\u5C01\u4E0D\u52A8\u5730\u4F5C\u4E3A <code>reject</code> \u7684\u7406\u7531\uFF0C\u53D8\u6210\u540E\u7EED\u65B9\u6CD5\u7684\u53C2\u6570\u3002\u8FD9\u4E00\u70B9\u4E0E <code>Promise.resolve</code> \u65B9\u6CD5\u4E0D\u4E00\u81F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>thenable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e <span class="token operator">===</span> thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Promise.reject</code> \u65B9\u6CD5\u7684\u53C2\u6570\u662F\u4E00\u4E2A <code>thenable</code> \u5BF9\u8C61\uFF0C\u6267\u884C\u4EE5\u540E\uFF0C\u540E\u9762 <code>catch</code> \u65B9\u6CD5\u7684\u53C2\u6570\u4E0D\u662F <code>reject</code> \u629B\u51FA\u7684\u201C\u51FA\u9519\u4E86\u201D\u8FD9\u4E2A\u5B57\u7B26\u4E32\uFF0C\u800C\u662F <code>thenable</code> \u5BF9\u8C61\u3002</p><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><h3 id="\u52A0\u8F7D\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#\u52A0\u8F7D\u56FE\u7247" aria-hidden="true">#</a> \u52A0\u8F7D\u56FE\u7247</h3><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u56FE\u7247\u7684\u52A0\u8F7D\u5199\u6210\u4E00\u4E2A <code>Promise</code>\uFF0C\u4E00\u65E6\u52A0\u8F7D\u5B8C\u6210\uFF0C<code>Promise</code> \u7684\u72B6\u6001\u5C31\u53D1\u751F\u53D8\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">preloadImage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>onload <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>onerror <span class="token operator">=</span> reject<span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> path<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generator-\u51FD\u6570\u4E0E-promise-\u7684\u7ED3\u5408" tabindex="-1"><a class="header-anchor" href="#generator-\u51FD\u6570\u4E0E-promise-\u7684\u7ED3\u5408" aria-hidden="true">#</a> Generator \u51FD\u6570\u4E0E Promise \u7684\u7ED3\u5408</h3><p>\u4F7F\u7528 Generator \u51FD\u6570\u7BA1\u7406\u6D41\u7A0B\uFF0C\u9047\u5230\u5F02\u6B65\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u901A\u5E38\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">generator</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> it <span class="token operator">=</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> result<span class="token punctuation">.</span>value<span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
      <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">go</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">go</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">go</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">run</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684 Generator \u51FD\u6570 <code>g</code> \u4E4B\u4E2D\uFF0C\u6709\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C <code>getFoo</code>\uFF0C\u5B83\u8FD4\u56DE\u7684\u5C31\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u3002\u51FD\u6570 <code>run</code> \u7528\u6765\u5904\u7406\u8FD9\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u5E76\u8C03\u7528\u4E0B\u4E00\u4E2A <code>next</code> \u65B9\u6CD5\u3002</p><h2 id="promise-try" tabindex="-1"><a class="header-anchor" href="#promise-try" aria-hidden="true">#</a> Promise.try()</h2><p>\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u7ECF\u5E38\u9047\u5230\u4E00\u79CD\u60C5\u51B5: \u4E0D\u77E5\u9053\u6216\u8005\u4E0D\u60F3\u533A\u5206\uFF0C\u51FD\u6570 <code>f</code> \u662F\u540C\u6B65\u51FD\u6570\u8FD8\u662F\u5F02\u6B65\u64CD\u4F5C\uFF0C\u4F46\u662F\u60F3\u7528 Promise \u6765\u5904\u7406\u5B83\u3002\u56E0\u4E3A\u8FD9\u6837\u5C31\u53EF\u4EE5\u4E0D\u7BA1 <code>f</code> \u662F\u5426\u5305\u542B\u5F02\u6B65\u64CD\u4F5C\uFF0C\u90FD\u7528 <code>then</code> \u65B9\u6CD5\u6307\u5B9A\u4E0B\u4E00\u6B65\u6D41\u7A0B\uFF0C\u7528 <code>catch</code> \u65B9\u6CD5\u5904\u7406 <code>f</code> \u629B\u51FA\u7684\u9519\u8BEF\u3002\u4E00\u822C\u5C31\u4F1A\u91C7\u7528\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u5199\u6CD5\u6709\u4E00\u4E2A\u7F3A\u70B9\uFF0C\u5C31\u662F\u5982\u679C <code>f</code> \u662F\u540C\u6B65\u51FD\u6570\uFF0C\u90A3\u4E48\u5B83\u4F1A\u5728\u672C\u8F6E\u4E8B\u4EF6\u5FAA\u73AF\u7684\u672B\u5C3E\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// next</span>
<span class="token comment">// now</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>f</code> \u662F\u540C\u6B65\u7684\uFF0C\u4F46\u662F\u7528 Promise \u5305\u88C5\u4E86\u4EE5\u540E\uFF0C\u5C31\u53D8\u6210\u5F02\u6B65\u6267\u884C\u4E86\u3002</p><p>\u90A3\u4E48\u6709\u6CA1\u6709\u4E00\u79CD\u65B9\u6CD5\uFF0C\u8BA9\u540C\u6B65\u51FD\u6570\u540C\u6B65\u6267\u884C\uFF0C\u5F02\u6B65\u51FD\u6570\u5F02\u6B65\u6267\u884C\uFF0C\u5E76\u4E14\u8BA9\u5B83\u4EEC\u5177\u6709\u7EDF\u4E00\u7684 API \u5462? \u56DE\u7B54\u662F\u53EF\u4EE5\u7684\uFF0C\u5E76\u4E14\u8FD8\u6709\u4E24\u79CD\u5199\u6CD5\u3002\u7B2C\u4E00\u79CD\u5199\u6CD5\u662F\u7528 <code>async</code> \u51FD\u6570\u6765\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// now</span>
<span class="token comment">// next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u884C\u662F\u4E00\u4E2A\u7ACB\u5373\u6267\u884C\u7684\u533F\u540D\u51FD\u6570\uFF0C\u4F1A\u7ACB\u5373\u6267\u884C\u91CC\u9762\u7684 <code>async</code> \u51FD\u6570\uFF0C\u56E0\u6B64\u5982\u679C <code>f</code> \u662F\u540C\u6B65\u7684\uFF0C\u5C31\u4F1A\u5F97\u5230\u540C\u6B65\u7684\u7ED3\u679C\uFF1B\u5982\u679C <code>f</code> \u662F\u5F02\u6B65\u7684\uFF0C\u5C31\u53EF\u4EE5\u7528 <code>then</code> \u6307\u5B9A\u4E0B\u4E00\u6B65\uFF0C\u5C31\u50CF\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>async () =&gt; f()</code> \u4F1A\u5403\u6389 <code>f()</code> \u629B\u51FA\u7684\u9519\u8BEF\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u60F3\u6355\u83B7\u9519\u8BEF\uFF0C\u8981\u4F7F\u7528 <code>promise.catch</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u79CD\u5199\u6CD5\u662F\u4F7F\u7528 <code>new Promise()</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// now</span>
<span class="token comment">// next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E5F\u662F\u4F7F\u7528\u7ACB\u5373\u6267\u884C\u7684\u533F\u540D\u51FD\u6570\uFF0C\u6267\u884C <code>new Promise()</code>\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u540C\u6B65\u51FD\u6570\u4E5F\u662F\u540C\u6B65\u6267\u884C\u7684\u3002</p>`,160),v={href:"https://github.com/ljharb/proposal-promise-try",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"Promise.try",-1),b=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Promise<span class="token punctuation">.</span><span class="token function">try</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// now</span>
<span class="token comment">// next</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g=s("code",null,"Promise.try",-1),f={href:"http://bluebirdjs.com/docs/api/promise.try.html",target:"_blank",rel:"noopener noreferrer"},h=s("code",null,"Bluebird",-1),y={href:"https://github.com/kriskowal/q/wiki/API-Reference#promisefcallargs",target:"_blank",rel:"noopener noreferrer"},w=s("code",null,"Q",-1),j={href:"https://github.com/cujojs/when/blob/master/docs/api.html#whentry",target:"_blank",rel:"noopener noreferrer"},P=s("code",null,"when",-1),q=s("code",null,"Promise.try",-1),x=s("code",null,"then",-1),_=s("code",null,"Promise.try",-1),E={href:"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/",target:"_blank",rel:"noopener noreferrer"},T=p(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> database<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> userId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> user<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>database.users.get()</code> \u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u5982\u679C\u629B\u51FA\u5F02\u6B65\u9519\u8BEF\uFF0C\u53EF\u4EE5\u7528 <code>catch</code> \u65B9\u6CD5\u6355\u83B7\uFF0C\u5C31\u50CF\u4E0B\u9762\u8FD9\u6837\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>database<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> userId<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F <code>database.users.get()</code> \u53EF\u80FD\u8FD8\u4F1A\u629B\u51FA\u540C\u6B65\u9519\u8BEF(\u6BD4\u5982\u6570\u636E\u5E93\u8FDE\u63A5\u9519\u8BEF\uFF0C\u5177\u4F53\u8981\u770B\u5B9E\u73B0\u65B9\u6CD5)\uFF0C\u8FD9\u65F6\u60A8\u5C31\u4E0D\u5F97\u4E0D\u7528 <code>try...catch</code> \u53BB\u6355\u83B7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  database<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> userId<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u6837\u7684\u5199\u6CD5\u5C31\u5F88\u7B28\u62D9\u4E86\uFF0C\u8FD9\u65F6\u5C31\u53EF\u4EE5\u7EDF\u4E00\u7528 <code>promise.catch()</code> \u6355\u83B7\u6240\u6709\u540C\u6B65\u548C\u5F02\u6B65\u7684\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">try</span><span class="token punctuation">(</span>database<span class="token punctuation">.</span>users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> userId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8B\u5B9E\u4E0A\uFF0C<code>Promise.try</code> \u5C31\u662F\u6A21\u62DF <code>try</code> \u4EE3\u7801\u5757\uFF0C\u5C31\u50CF <code>promise.catch</code> \u6A21\u62DF\u7684\u662F <code>catch</code> \u4EE3\u7801\u5757\u3002</p>`,8);function S(N,R){const a=u("ExternalLinkIcon");return o(),c("div",null,[l,s("p",null,[n("\u5982\u679C\u67D0\u4E9B\u4E8B\u4EF6\u4E0D\u65AD\u5730\u53CD\u590D\u53D1\u751F\uFF0C\u4E00\u822C\u6765\u8BF4\uFF0C\u4F7F\u7528 "),s("a",r,[n("Stream"),t(a)]),n(" \u6A21\u5F0F\u662F\u6BD4\u90E8\u7F72 "),k,n(" \u66F4\u597D\u7684\u9009\u62E9\u3002")]),d,s("p",null,[n("\u9274\u4E8E\u8FD9\u662F\u4E00\u4E2A\u5F88\u5E38\u89C1\u7684\u9700\u6C42\uFF0C\u6240\u4EE5\u73B0\u5728\u6709\u4E00\u4E2A"),s("a",v,[n("\u63D0\u6848"),t(a)]),n("\uFF0C\u63D0\u4F9B "),m,n(" \u65B9\u6CD5\u66FF\u4EE3\u4E0A\u9762\u7684\u5199\u6CD5\u3002")]),b,s("p",null,[n("\u4E8B\u5B9E\u4E0A\uFF0C"),g,n(" \u5B58\u5728\u5DF2\u4E45\uFF0CPromise \u5E93"),s("a",f,[h,t(a)]),n("\u3001"),s("a",y,[w,t(a)]),n("\u548C"),s("a",j,[P,t(a)]),n("\uFF0C\u65E9\u5C31\u63D0\u4F9B\u4E86\u8FD9\u4E2A\u65B9\u6CD5\u3002")]),s("p",null,[n("\u7531\u4E8E "),q,n(" \u4E3A\u6240\u6709\u64CD\u4F5C\u63D0\u4F9B\u4E86\u7EDF\u4E00\u7684\u5904\u7406\u673A\u5236\uFF0C\u6240\u4EE5\u5982\u679C\u60F3\u7528 "),x,n(" \u65B9\u6CD5\u7BA1\u7406\u6D41\u7A0B\uFF0C\u6700\u597D\u90FD\u7528 "),_,n(" \u5305\u88C5\u4E00\u4E0B\u3002\u8FD9\u6837\u6709"),s("a",E,[n("\u8BB8\u591A\u597D\u5904"),t(a)]),n("\uFF0C\u5176\u4E2D\u4E00\u70B9\u5C31\u662F\u53EF\u4EE5\u66F4\u597D\u5730\u7BA1\u7406\u5F02\u5E38\u3002")]),T])}const J=e(i,[["render",S],["__file","promise.html.vue"]]);export{J as default};
