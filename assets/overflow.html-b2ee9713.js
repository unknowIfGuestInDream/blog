const e=JSON.parse('{"key":"v-1b59a6c2","path":"/en/code/website/css/intro/overflow.html","title":"溢出","lang":"en-US","frontmatter":{"title":"溢出","icon":"overflow","date":"2019-09-06T00:00:00.000Z","category":["CSS"],"description":"溢出是在盒子无法容纳下太多的内容的时候发生的。 概念 我们知道，CSS 中万物皆盒，因此我们可以通过给 width 和 height(或者 inline-size 和 block-size) 赋值的方式来约束盒子的尺寸。溢出是在您往盒子里面塞太多东西的时候发生的，所以盒子里面的东西也不会老老实实待着。CSS 给了您好几种工具来控制溢出。 CSS 尽可能不丢弃内容 在默认情况下，CSS 会将元素溢出的部分显示在和盒子外。","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://blog.tlcsdm.com/code/website/css/intro/overflow.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://blog.tlcsdm.com/ja/code/website/css/intro/overflow.html"}],["meta",{"property":"og:url","content":"https://blog.tlcsdm.com/en/code/website/css/intro/overflow.html"}],["meta",{"property":"og:site_name","content":"unknowIfGuestInDream"}],["meta",{"property":"og:title","content":"溢出"}],["meta",{"property":"og:description","content":"溢出是在盒子无法容纳下太多的内容的时候发生的。 概念 我们知道，CSS 中万物皆盒，因此我们可以通过给 width 和 height(或者 inline-size 和 block-size) 赋值的方式来约束盒子的尺寸。溢出是在您往盒子里面塞太多东西的时候发生的，所以盒子里面的东西也不会老老实实待着。CSS 给了您好几种工具来控制溢出。 CSS 尽可能不丢弃内容 在默认情况下，CSS 会将元素溢出的部分显示在和盒子外。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:updated_time","content":"2022-10-08T11:40:37.000Z"}],["meta",{"property":"article:published_time","content":"2019-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-08T11:40:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"溢出\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-06T00:00:00.000Z\\",\\"dateModified\\":\\"2022-10-08T11:40:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":2,"title":"CSS 尽可能不丢弃内容","slug":"css-尽可能不丢弃内容","link":"#css-尽可能不丢弃内容","children":[]},{"level":2,"title":"overflow 属性","slug":"overflow-属性","link":"#overflow-属性","children":[]},{"level":2,"title":"块级排版上下文","slug":"块级排版上下文","link":"#块级排版上下文","children":[]},{"level":2,"title":"网页设计时不需要的溢出","slug":"网页设计时不需要的溢出","link":"#网页设计时不需要的溢出","children":[]}],"git":{"createdTime":1665229237000,"updatedTime":1665229237000,"contributors":[{"name":"梦里不知身是客","email":"tang97155@gmail.com","commits":1}]},"readingTime":{"minutes":4.13,"words":1239},"filePathRelative":"en/code/website/css/intro/overflow.md","localizedDate":"September 6, 2019","excerpt":"<p>溢出是在盒子无法容纳下太多的内容的时候发生的。</p>\\n<h2> 概念</h2>\\n<p>我们知道，CSS 中万物皆盒，因此我们可以通过给 <code>width</code> 和 <code>height</code>(或者 <code>inline-size</code> 和 <code>block-size</code>) 赋值的方式来约束盒子的尺寸。溢出是在您往盒子里面塞太多东西的时候发生的，所以盒子里面的东西也不会老老实实待着。CSS 给了您好几种工具来控制溢出。</p>\\n<h2> CSS 尽可能不丢弃内容</h2>\\n<p>在默认情况下，CSS 会将元素溢出的部分显示在和盒子外。</p>","autoDesc":true}');export{e as data};
