import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,a as s,b as n,e as a,w as u,d as r,f as t,r as p}from"./app.70f43444.js";const d={},k=t(`<h2 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world" aria-hidden="true">#</a> Hello World</h2><p>\u6BCF\u4E2A\u5E94\u7528\u90FD\u6709 <code>main()</code> \u51FD\u6570\u3002\u8981\u5728\u63A7\u5236\u53F0\u4E0A\u663E\u793A\u6587\u672C\uFF0C\u53EF\u4EE5\u4F7F\u7528\u9876\u7EA7 <code>print()</code> \u51FD\u6570:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, World!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h2><p>\u5373\u4F7F\u5728\u7C7B\u578B\u5B89\u5168\u7684 Dart \u4EE3\u7801\u4E2D\uFF0C\u7531\u4E8E\u7C7B\u578B\u63A8\u65AD\uFF0C\u5927\u591A\u6570\u53D8\u91CF\u4E5F\u4E0D\u9700\u8981\u663E\u5F0F\u7C7B\u578B:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Voyager I&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">var</span> year <span class="token operator">=</span> <span class="token number">1977</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> antennaDiameter <span class="token operator">=</span> <span class="token number">3.7</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> flybyObjects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;Jupiter&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Saturn&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Uranus&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Neptune&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&#39;tags&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;saturn&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string-literal"><span class="token string">&#39;url&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;//path/to/saturn.jpg&#39;</span></span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),v={href:"https://dart.dev/guides/language/language-tour#variables",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"final",-1),b=s("code",null,"const",-1),g=t(`<h2 id="\u63A7\u5236\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u8BED\u53E5" aria-hidden="true">#</a> \u63A7\u5236\u8BED\u53E5</h2><p>Dart \u652F\u6301\u901A\u5E38\u7684\u63A7\u5236\u8BED\u53E5:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">&gt;=</span> <span class="token number">2001</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;21st century&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">&gt;=</span> <span class="token number">1901</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;20th century&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> object <span class="token keyword">in</span> flybyObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>int month <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> month <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">;</span> month<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>year <span class="token operator">&lt;</span> <span class="token number">2016</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  year <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),h={href:"https://dart.dev/guides/language/language-tour#control-flow-statements",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"break",-1),y=s("code",null,"continue",-1),_=s("code",null,"switch",-1),w=s("code",null,"case",-1),x=s("code",null,"assert",-1),D=s("h2",{id:"\u51FD\u6570",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u51FD\u6570","aria-hidden":"true"},"#"),n(" \u51FD\u6570")],-1),S={href:"https://dart.dev/guides/language/effective-dart/design#types",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int <span class="token function">fibonacci</span><span class="token punctuation">(</span>int n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5199 <code>=&gt;</code>(\u7BAD\u5934)\u8BED\u6CD5\u5BF9\u4E8E\u5305\u542B\u5355\u4E2A\u8BED\u53E5\u7684\u51FD\u6570\u5F88\u65B9\u4FBF\u3002\u5F53\u5C06\u533F\u540D\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u65F6\uFF0C\u6B64\u8BED\u6CD5\u7279\u522B\u6709\u7528:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>flybyObjects<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;turn&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9664\u4E86\u663E\u793A\u533F\u540D\u51FD\u6570(<code>where()</code> \u7684\u53C2\u6570)\u4E4B\u5916\uFF0C\u6B64\u4EE3\u7801\u8FD8\u663E\u793A\u60A8\u53EF\u4EE5\u5C06\u51FD\u6570\u7528\u4F5C\u53C2\u6570: \u9876\u7EA7 <code>print()</code> \u51FD\u6570\u662F <code>forEach()</code> \u7684\u53C2\u6570\u3002</p>`,4),I={href:"https://dart.dev/guides/language/language-tour#functions",target:"_blank",rel:"noopener noreferrer"},$=t(`<h2 id="\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u91CA" aria-hidden="true">#</a> \u6CE8\u91CA</h2><p>Dart \u6CE8\u91CA\u901A\u5E38\u4EE5\u5F00\u5934 <code>//</code>\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">// This is a normal, one-line comment.</span>

<span class="token comment">/// This is a documentation comment, used to document libraries,</span>
<span class="token comment">/// classes, and their members. Tools like IDEs and dartdoc treat</span>
<span class="token comment">/// doc comments specially.</span>

<span class="token comment">/*Comments like these are also supported.*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),C={href:"https://dart.dev/guides/language/language-tour#comments",target:"_blank",rel:"noopener noreferrer"},E=t(`<h2 id="\u5BFC\u5165" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u5165" aria-hidden="true">#</a> \u5BFC\u5165</h2><p>\u8981\u8BBF\u95EE\u5176\u4ED6\u5E93\u4E2D\u5B9A\u4E49\u7684 API\uFF0C\u8BF7\u4F7F\u7528 <code>import</code>\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">// Importing core libraries</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:math&#39;</span></span><span class="token punctuation">;</span>

<span class="token comment">// Importing libraries from external packages</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:test/test.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token comment">// Importing files</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;path/to/my_other_file.dart&#39;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),F={href:"https://dart.dev/guides/language/language-tour#libraries-and-visibility",target:"_blank",rel:"noopener noreferrer"},N=s("code",null,"show",-1),O=s("code",null,"hide",-1),T=s("code",null,"deferred",-1),V=t(`<h2 id="\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a> \u7C7B</h2><p>\u8FD9\u662F\u4E00\u4E2A\u5177\u6709\u4E09\u4E2A\u5C5E\u6027\uFF0C\u4E24\u4E2A\u6784\u9020\u51FD\u6570\u548C\u4E00\u4E2A\u65B9\u6CD5\u7684\u7C7B\u7684\u793A\u4F8B\u3002\u5176\u4E2D\u4E00\u4E2A\u5C5E\u6027\u4E0D\u80FD\u76F4\u63A5\u8BBE\u7F6E\uFF0C\u56E0\u6B64\u662F\u4F7F\u7528 <code>getter</code> \u65B9\u6CD5(\u800C\u4E0D\u662F\u53D8\u91CF)\u5B9A\u4E49\u7684\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Spacecraft</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> name<span class="token punctuation">;</span>
  <span class="token class-name">DateTime</span> launchDate<span class="token punctuation">;</span>

  <span class="token comment">// Constructor, with syntactic sugar for assignment to members.</span>
  <span class="token class-name">Spacecraft</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>launchDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Initialization code goes here.</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Named constructor that forwards to the default one.</span>
  <span class="token class-name">Spacecraft</span><span class="token punctuation">.</span><span class="token function">unlaunched</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  int <span class="token keyword">get</span> launchYear <span class="token operator">=</span><span class="token operator">&gt;</span>
      launchDate<span class="token operator">?</span><span class="token punctuation">.</span>year<span class="token punctuation">;</span> <span class="token comment">// read-only non-final property</span>

  <span class="token comment">// Method.</span>
  <span class="token keyword">void</span> <span class="token function">describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Spacecraft: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">name</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>launchDate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      int years <span class="token operator">=</span>
          <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">difference</span><span class="token punctuation">(</span>launchDate<span class="token punctuation">)</span><span class="token punctuation">.</span>inDays <span class="token operator">~/</span>
              <span class="token number">365</span><span class="token punctuation">;</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Launched: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">launchYear</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">years</span></span><span class="token string"> years ago)&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Unlaunched&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u60A8\u53EF\u4EE5\u4F7F\u7528\u8FD9\u6837\u7684 <code>Spacecraft</code> \u7C7B:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> voyager <span class="token operator">=</span> <span class="token class-name">Spacecraft</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Voyager I&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token number">1977</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
voyager<span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> voyager3 <span class="token operator">=</span> <span class="token class-name">Spacecraft</span><span class="token punctuation">.</span><span class="token function">unlaunched</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Voyager III&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
voyager3<span class="token punctuation">.</span><span class="token function">describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),P={href:"https://dart.dev/guides/language/language-tour#classes",target:"_blank",rel:"noopener noreferrer"},W=s("code",null,"new",-1),L=s("code",null,"const",-1),A=s("code",null,"factory",-1),M=t(`<h2 id="\u9057\u4EA7" tabindex="-1"><a class="header-anchor" href="#\u9057\u4EA7" aria-hidden="true">#</a> \u9057\u4EA7</h2><p>Dart \u5177\u6709\u5355\u4E00\u7EE7\u627F\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Orbiter</span> <span class="token keyword">extends</span> <span class="token class-name">Spacecraft</span> <span class="token punctuation">{</span>
  double altitude<span class="token punctuation">;</span>
  <span class="token class-name">Orbiter</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">DateTime</span> launchDate<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>altitude<span class="token punctuation">)</span>
      <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> launchDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),B={href:"https://dart.dev/guides/language/language-tour#extending-a-class",target:"_blank",rel:"noopener noreferrer"},H=s("code",null,"@override",-1),R=t(`<h2 id="\u6DF7\u5165" tabindex="-1"><a class="header-anchor" href="#\u6DF7\u5165" aria-hidden="true">#</a> \u6DF7\u5165</h2><p>Mixins \u662F\u5728\u591A\u4E2A\u7C7B\u5C42\u6B21\u7ED3\u6784\u4E2D\u91CD\u7528\u4EE3\u7801\u7684\u4E00\u79CD\u65B9\u5F0F\u3002\u4EE5\u4E0B\u7C7B\u53EF\u4EE5\u5145\u5F53 mixin:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Piloted</span> <span class="token punctuation">{</span>
  int astronauts <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> <span class="token function">describeCrew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Number of astronauts: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">astronauts</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u5C06 mixin \u7684\u529F\u80FD\u6DFB\u52A0\u5230\u7C7B\u4E2D\uFF0C\u53EA\u9700\u4F7F\u7528 mixin \u6269\u5C55\u7C7B\u5373\u53EF\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">PilotedCraft</span> <span class="token keyword">extends</span> <span class="token class-name">Spacecraft</span> <span class="token keyword">with</span> <span class="token class-name">Piloted</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xB7\xB7\xB7</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>PilotedCraft</code> \u73B0\u5728\u5177\u6709 <code>astronauts</code> \u5B57\u6BB5\u548C <code>describeCrew()</code> \u65B9\u6CD5\u3002</p>`,6),U={href:"https://dart.dev/guides/language/language-tour#adding-features-to-a-class-mixins",target:"_blank",rel:"noopener noreferrer"},Y=t(`<h2 id="\u63A5\u53E3\u548C\u62BD\u8C61\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u548C\u62BD\u8C61\u7C7B" aria-hidden="true">#</a> \u63A5\u53E3\u548C\u62BD\u8C61\u7C7B</h2><p>Dart \u6CA1\u6709 <code>interface</code> \u5173\u952E\u5B57\u3002\u76F8\u53CD\uFF0C\u6240\u6709\u7C7B\u90FD\u9690\u5F0F\u5B9A\u4E49\u4E00\u4E2A\u63A5\u53E3\u3002\u56E0\u6B64\uFF0C\u60A8\u53EF\u4EE5\u5B9E\u73B0\u4EFB\u4F55\u7C7B\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">MockSpaceship</span> <span class="token keyword">implements</span> <span class="token class-name">Spacecraft</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xB7\xB7\xB7</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),z={href:"https://dart.dev/guides/language/language-tour#implicit-interfaces",target:"_blank",rel:"noopener noreferrer"},J=t(`<p>\u60A8\u53EF\u4EE5\u521B\u5EFA\u8981\u7531\u5177\u4F53\u7C7B\u6269\u5C55(\u6216\u5B9E\u73B0)\u7684\u62BD\u8C61\u7C7B\u3002\u62BD\u8C61\u7C7B\u53EF\u4EE5\u5305\u542B\u62BD\u8C61\u65B9\u6CD5(\u5177\u6709\u7A7A\u4E3B\u4F53)\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Describable</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token function">describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">describeWithEmphasis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;=========&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;=========&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EFB\u4F55\u6269\u5C55\u7C7B <code>Describable</code> \u90FD\u5177\u6709 <code>describeWithEmphasis()</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8C03\u7528\u6269\u5C55\u7A0B\u5E8F\u7684\u5B9E\u73B0 <code>describe()</code>\u3002</p>`,3),q={href:"https://dart.dev/guides/language/language-tour#abstract-classes",target:"_blank",rel:"noopener noreferrer"},G=t(`<h2 id="\u5F02\u6B65" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65" aria-hidden="true">#</a> \u5F02\u6B65</h2><p>\u907F\u514D\u9677\u5165\u56DE\u8C03\u5730\u72F1\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>async</code> \u548C <code>await</code> \u6765\u63D0\u9AD8\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">const</span> oneSecond <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \xB7\xB7\xB7</span>
<span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">printWithDelay</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span>oneSecond<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u65B9\u6CD5\u7B49\u6548\u4E8E:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">printWithDelay</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span>oneSecond<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u4F8B\u6240\u793A\uFF0C<code>async</code> \u548C <code>await</code> \u6709\u52A9\u4E8E\u4F7F\u5F02\u6B65\u4EE3\u7801\u6613\u4E8E\u9605\u8BFB\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">createDescriptions</span><span class="token punctuation">(</span><span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> objects<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> object <span class="token keyword">in</span> objects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string">.txt&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> modified <span class="token operator">=</span> <span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">lastModified</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">print</span><span class="token punctuation">(</span>
            <span class="token string-literal"><span class="token string">&#39;File for </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string"> already exists. It was modified on </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">modified</span></span><span class="token string">.&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> file<span class="token punctuation">.</span><span class="token function">writeAsString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Start describing </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string"> in this file.&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">on</span> <span class="token class-name">IOException</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Cannot create description for </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">e</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u60A8\u8FD8\u53EF\u4EE5\u4F7F\u7528 <code>async*</code>\uFF0C\u5B83\u4E3A\u60A8\u63D0\u4F9B\u4E86\u4E00\u79CD\u5F88\u597D\u7684\uFF0C\u6613\u4E8E\u9605\u8BFB\u7684\u65B9\u5F0F\u6765\u6784\u5EFA\u6D41\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">report</span><span class="token punctuation">(</span><span class="token class-name">Spacecraft</span> craft<span class="token punctuation">,</span> <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> objects<span class="token punctuation">)</span> <span class="token keyword">async*</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> object <span class="token keyword">in</span> objects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span>oneSecond<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">craft<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string"> flies by </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),K={href:"https://dart.dev/guides/language/language-tour#asynchrony-support",target:"_blank",rel:"noopener noreferrer"},Q=s("code",null,"async",-1),X=s("code",null,"Future",-1),Z=s("code",null,"Stream",-1),nn=t(`<h2 id="\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a> \u5F02\u5E38</h2><p>\u8981\u5F15\u53D1\u5F02\u5E38\uFF0C\u8BF7\u4F7F\u7528 <code>throw</code>:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>astronauts <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token class-name">StateError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;No astronauts.&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u6355\u83B7\u5F02\u5E38\uFF0C\u8BF7\u4F7F\u7528 <code>try</code> \u5E26\u6709 <code>on</code> \u6216 <code>catch</code>(\u6216\u4E24\u8005)\u7684\u8BED\u53E5:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> object <span class="token keyword">in</span> flybyObjects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> description <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">object</span></span><span class="token string">.txt&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">on</span> <span class="token class-name">IOException</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Could not describe object: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">e</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  flybyObjects<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u4E0A\u9762\u7684\u4EE3\u7801\u662F\u5F02\u6B65\u7684\uFF1B <code>try</code> \u9002\u7528\u4E8E\u540C\u6B65\u4EE3\u7801\u548C <code>async</code> \u51FD\u6570\u4E2D\u7684\u4EE3\u7801\u3002</p><p>\u9605\u8BFB\u6709\u5173\u5F02\u5E38\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u5305\u62EC\u5806\u6808\u8DDF\u8E2A <code>rethrow</code>\uFF0C\u548C\u9519\u8BEF\u4E0E\u5F02\u5E38\u4E4B\u95F4\u7684\u533A\u522B\u3002</p><h2 id="\u5176\u4ED6\u8BDD\u9898" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u8BDD\u9898" aria-hidden="true">#</a> \u5176\u4ED6\u8BDD\u9898</h2>`,8),sn={href:"https://dart.dev/guides/language/language-tour",target:"_blank",rel:"noopener noreferrer"},an={href:"https://dart.dev/guides/libraries/library-tour",target:"_blank",rel:"noopener noreferrer"},en={href:"https://api.dart.dev/",target:"_blank",rel:"noopener noreferrer"};function tn(pn,on){const o=p("RouterLink"),e=p("ExternalLinkIcon");return l(),i("div",null,[s("p",null,[n("\u8BE5\u7AE0\u5185\u5BB9\u5E76\u4E0D\u5168\u9762\uFF0C\u53EA\u662F\u4E3A\u559C\u6B22\u901A\u8FC7\u793A\u4F8B\u5B66\u4E60\u7684\u4EBA\u4EEC\u7B80\u8981\u4ECB\u7ECD\u4E86\u8BE5\u8BED\u8A00\u3002\u60A8\u53EF\u80FD\u8FD8\u9700\u8981\u67E5\u770B\u8BED\u8A00\u548C\u5E93\u5BFC\u89C8\uFF0C\u6216 "),a(o,{to:"/ja/code/language/dart/samples/cheatsheet.html"},{default:u(()=>[n("Dart \u6982\u8981")]),_:1}),n("\u3002")]),r(" more "),k,s("p",null,[s("a",v,[n("\u9605\u8BFB\u6709\u5173 Dart \u4E2D\u53D8\u91CF\u7684\u66F4\u591A\u4FE1\u606F"),a(e)]),n("\uFF0C\u5305\u62EC\u9ED8\u8BA4\u503C\uFF0C"),m,n(" \u548C "),b,n(" \u5173\u952E\u5B57\u4EE5\u53CA\u9759\u6001\u7C7B\u578B\u3002")]),g,s("p",null,[s("a",h,[n("\u9605\u8BFB\u6709\u5173 Dart \u4E2D\u63A7\u5236\u6D41\u8BED\u53E5\u7684\u66F4\u591A\u4FE1\u606F"),a(e)]),n("\uFF0C\u5305\u62EC "),f,n(" \u548C "),y,n("\uFF0C"),_,n(" \u548C "),w,n("\uFF0C\u548C "),x,n("\u3002")]),D,s("p",null,[s("a",S,[n("\u6211\u4EEC\u5EFA\u8BAE"),a(e)]),n(" \u6307\u5B9A\u6BCF\u4E2A\u51FD\u6570\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u7684\u7C7B\u578B:")]),j,s("p",null,[s("a",I,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" Dart \u4E2D\u51FD\u6570\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u5305\u62EC\u53EF\u9009\u53C2\u6570\uFF0C\u9ED8\u8BA4\u53C2\u6570\u503C\u548C\u8BCD\u6CD5\u8303\u56F4\u3002")]),$,s("p",null,[s("a",C,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" Dart \u4E2D\u6CE8\u91CA\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u5305\u62EC\u6587\u6863\u5DE5\u5177\u7684\u5DE5\u4F5C\u65B9\u5F0F\u3002")]),E,s("p",null,[s("a",F,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" Dart \u4E2D\u5E93\u548C\u53EF\u89C1\u6027\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u5305\u62EC\u5E93\u524D\u7F00 "),N,n(" \u548C "),O,n("\uFF0C\u4EE5\u53CA\u901A\u8FC7 "),T,n(" \u5173\u952E\u5B57\u7684\u5EF6\u8FDF\u52A0\u8F7D\u3002")]),V,s("p",null,[s("a",P,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" Dart \u4E2D\u7C7B\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u5305\u62EC\u521D\u59CB\u5316\u5217\u8868\uFF0C\u53EF\u9009 "),W,n(" \u548C "),L,n("\uFF0C\u91CD\u5B9A\u5411\u6784\u9020\u51FD\u6570\uFF0C"),A,n(" \u6784\u9020\u51FD\u6570\uFF0Cgetter\uFF0Csetter \u7B49\u3002")]),M,s("p",null,[s("a",B,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" \u6269\u5C55\u7C7B\uFF0C\u53EF\u9009 "),H,n(" \u6CE8\u91CA\u7B49\u7684\u66F4\u591A\u4FE1\u606F\u3002")]),R,s("p",null,[s("a",U,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" mixin \u7684\u66F4\u591A\u4FE1\u606F\u3002")]),Y,s("p",null,[s("a",z,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" \u9690\u5F0F\u63A5\u53E3\u7684\u66F4\u591A\u4FE1\u606F\u3002")]),J,s("p",null,[s("a",q,[n("\u9605\u8BFB\u6709\u5173"),a(e)]),n(" \u62BD\u8C61\u7C7B\u548C\u65B9\u6CD5\u7684\u66F4\u591A\u4FE1\u606F\u3002")]),G,s("p",null,[s("a",K,[n("\u9605\u8BFB\u66F4\u591A"),a(e)]),n(" \u5173\u4E8E\u5F02\u6B65\u652F\u6301\uFF0C\u5305\u62EC "),Q,n(" \u529F\u80FD "),X,n("\uFF0C"),Z,n(" \u548C\u5F02\u6B65\u5FAA\u73AF(await for)\u3002")]),nn,s("p",null,[n("\u66F4\u591A\u7684\u4EE3\u7801\u793A\u4F8B\u5728 "),s("a",sn,[n("\u8BED\u8A00\u793A\u4F8B"),a(e)]),n(" \u548C "),s("a",an,[n("\u5E93\u793A\u4F8B"),a(e)]),n(" \u4E2D\u3002\u53E6\u8BF7\u53C2\u9605 "),s("a",en,[n("Dart API \u53C2\u8003"),a(e)]),n("\uFF0C \u5176\u4E2D\u901A\u5E38\u5305\u542B\u793A\u4F8B\u3002")])])}const un=c(d,[["render",tn],["__file","samples.html.vue"]]);export{un as default};
