import{_ as s}from"./promise.ef1c8fe4.js";import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,d as o,a as n,f as e}from"./app.70f43444.js";const c={},u=n("p",null,"\u5728 JavaScript \u7684\u4E16\u754C\u4E2D\uFF0C\u6240\u6709\u4EE3\u7801\u90FD\u662F\u5355\u7EBF\u7A0B\u6267\u884C\u7684\u3002",-1),i=n("p",null,"\u7531\u4E8E\u8FD9\u4E2A\u201C\u7F3A\u9677\u201D\uFF0C\u5BFC\u81F4 JavaScript \u7684\u6240\u6709\u7F51\u7EDC\u64CD\u4F5C\uFF0C\u6D4F\u89C8\u5668\u4E8B\u4EF6\uFF0C\u90FD\u5FC5\u987B\u662F\u5F02\u6B65\u6267\u884C\u3002\u5F02\u6B65\u6267\u884C\u53EF\u4EE5\u7528\u56DE\u8C03\u51FD\u6570\u5B9E\u73B0:",-1),l=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;before setTimeout()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1\u79D2\u949F\u540E\u8C03\u7528callback\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;after setTimeout()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89C2\u5BDF\u4E0A\u8FF0\u4EE3\u7801\u6267\u884C\uFF0C\u5728 Chrome \u7684\u63A7\u5236\u53F0\u8F93\u51FA\u53EF\u4EE5\u770B\u5230:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>before setTimeout()
after setTimeout()
(\u7B49\u5F851\u79D2\u540E)
Done
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u89C1\uFF0C\u5F02\u6B65\u64CD\u4F5C\u4F1A\u5728\u5C06\u6765\u7684\u67D0\u4E2A\u65F6\u95F4\u70B9\u89E6\u53D1\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u3002</p><p>Ajax \u5C31\u662F\u5178\u578B\u7684\u5F02\u6B65\u64CD\u4F5C\u3002\u4EE5\u4E0A\u4E00\u8282\u7684\u4EE3\u7801\u4E3A\u4F8B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">success</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token function">fail</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u56DE\u8C03\u51FD\u6570 <code>success(request.responseText)</code> \u548C <code>fail(request.status)</code> \u5199\u5230\u4E00\u4E2A Ajax \u64CD\u4F5C\u91CC\u5F88\u6B63\u5E38\uFF0C\u4F46\u662F\u4E0D\u597D\u770B\uFF0C\u800C\u4E14\u4E0D\u5229\u4E8E\u4EE3\u7801\u590D\u7528\u3002</p><p>\u6709\u6CA1\u6709\u66F4\u597D\u7684\u5199\u6CD5? \u6BD4\u5982\u5199\u6210\u8FD9\u6837:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ajax <span class="token operator">=</span> <span class="token function">ajaxGet</span><span class="token punctuation">(</span><span class="token string">&quot;https://...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ajax<span class="token punctuation">.</span><span class="token function">ifSuccess</span><span class="token punctuation">(</span>success<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifFail</span><span class="token punctuation">(</span>fail<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u94FE\u5F0F\u5199\u6CD5\u7684\u597D\u5904\u5728\u4E8E\uFF0C\u5148\u7EDF\u4E00\u6267\u884C Ajax \u903B\u8F91\uFF0C\u4E0D\u5173\u5FC3\u5982\u4F55\u5904\u7406\u7ED3\u679C\uFF0C\u7136\u540E\uFF0C\u6839\u636E\u7ED3\u679C\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF0C\u5728\u5C06\u6765\u7684\u67D0\u4E2A\u65F6\u5019\u8C03\u7528 <code>success</code> \u51FD\u6570\u6216 <code>fail</code> \u51FD\u6570\u3002</p><p>\u53E4\u4EBA\u4E91: \u201C\u541B\u5B50\u4E00\u8BFA\u5343\u91D1\u201D\uFF0C\u8FD9\u79CD\u201C\u627F\u8BFA\u5C06\u6765\u4F1A\u6267\u884C\u201D\u7684\u5BF9\u8C61\u5728 JavaScript \u4E2D\u79F0\u4E3A <code>Promise</code> \u5BF9\u8C61\u3002</p><p>Promise \u6709\u5404\u79CD\u5F00\u6E90\u5B9E\u73B0\uFF0C\u5728 ES6 \u4E2D\u88AB\u7EDF\u4E00\u89C4\u8303\uFF0C\u7531\u6D4F\u89C8\u5668\u76F4\u63A5\u652F\u6301\u3002</p><p>\u6211\u4EEC\u5148\u770B\u4E00\u4E2A\u6700\u7B80\u5355\u7684 <code>Promise</code> \u4F8B\u5B50: \u751F\u6210\u4E00\u4E2A <code>0-2</code> \u4E4B\u95F4\u7684\u968F\u673A\u6570\uFF0C\u5982\u679C\u5C0F\u4E8E 1\uFF0C\u5219\u7B49\u5F85\u4E00\u6BB5\u65F6\u95F4\u540E\u8FD4\u56DE\u6210\u529F\uFF0C\u5426\u5219\u8FD4\u56DE\u5931\u8D25:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> timeOut <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">set timeout to: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timeOut<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seconds.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeOut <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call resolve()...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;200 OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call reject()...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">timeout in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timeOut<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seconds.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> timeOut <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A <code>test()</code> \u51FD\u6570\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u8FD9\u4E24\u4E2A\u53C2\u6570\u90FD\u662F\u51FD\u6570\uFF0C\u5982\u679C\u6267\u884C\u6210\u529F\uFF0C\u6211\u4EEC\u5C06\u8C03\u7528 <code>resolve(&#39;200 OK&#39;)</code>\uFF0C\u5982\u679C\u6267\u884C\u5931\u8D25\uFF0C\u6211\u4EEC\u5C06\u8C03\u7528 <code>reject(timeout in \${timeOut} seconds.)</code>\u3002\u53EF\u4EE5\u770B\u51FA\uFF0C<code>test()</code> \u51FD\u6570\u53EA\u5173\u5FC3\u81EA\u8EAB\u7684\u903B\u8F91\uFF0C\u5E76\u4E0D\u5173\u5FC3\u5177\u4F53\u7684 <code>resolve</code> \u548C <code>reject</code> \u5C06\u5982\u4F55\u5904\u7406\u7ED3\u679C\u3002</p><p>\u6709\u4E86\u6267\u884C\u51FD\u6570\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u7528\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\u6765\u6267\u884C\u5B83\uFF0C\u5E76\u5728\u5C06\u6765\u67D0\u4E2A\u65F6\u523B\u83B7\u5F97\u6210\u529F\u6216\u5931\u8D25\u7684\u7ED3\u679C:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6210\u529F: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p3 <span class="token operator">=</span> p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5931\u8D25: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D8\u91CF <code>p1</code> \u662F\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u5B83\u8D1F\u8D23\u6267\u884C <code>test</code> \u51FD\u6570\u3002\u7531\u4E8E <code>test</code> \u51FD\u6570\u5728\u5185\u90E8\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF0C\u5F53 <code>test</code> \u51FD\u6570\u6267\u884C\u6210\u529F\u65F6\uFF0C\u6211\u4EEC\u544A\u8BC9 Promise \u5BF9\u8C61:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5982\u679C\u6210\u529F\uFF0C\u6267\u884C\u8FD9\u4E2A\u51FD\u6570:</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6210\u529F: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 <code>test</code> \u51FD\u6570\u6267\u884C\u5931\u8D25\u65F6\uFF0C\u6211\u4EEC\u544A\u8BC9 Promise \u5BF9\u8C61:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5931\u8D25: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Promise \u5BF9\u8C61\u53EF\u4EE5\u4E32\u8054\u8D77\u6765\uFF0C\u6240\u4EE5\u4E0A\u8FF0\u4EE3\u7801\u53EF\u4EE5\u7B80\u5316\u4E3A:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6210\u529F: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5931\u8D25: &quot;</span> <span class="token operator">+</span> reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u6D4B\u8BD5\u4E00\u4E0B\uFF0C\u770B\u770B Promise \u662F\u5982\u4F55\u5F02\u6B65\u6267\u884C\u7684:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u6E05\u9664log:</span>
<span class="token keyword">const</span> logging <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#test-promise-log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
  logging<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">[</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FAlog\u5230\u9875\u9762:</span>
<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token punctuation">;</span>
  logging<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start new Promise...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> timeOut <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>

  <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">set timeout to: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timeOut<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seconds.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeOut <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call resolve()...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;200 OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;call reject()...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">timeout in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timeOut<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> seconds.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> timeOut <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Done: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>r<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u89C1 Promise \u6700\u5927\u7684\u597D\u5904\u662F\u5728\u5F02\u6B65\u6267\u884C\u7684\u6D41\u7A0B\u4E2D\uFF0C\u628A\u6267\u884C\u4EE3\u7801\u548C\u5904\u7406\u7ED3\u679C\u7684\u4EE3\u7801\u6E05\u6670\u5730\u5206\u79BB\u4E86:</p><p><img src="`+s+`" alt="promise" loading="lazy"></p><p>Promise \u8FD8\u53EF\u4EE5\u505A\u66F4\u591A\u7684\u4E8B\u60C5\uFF0C\u6BD4\u5982\uFF0C\u6709\u82E5\u5E72\u4E2A\u5F02\u6B65\u4EFB\u52A1\uFF0C\u9700\u8981\u5148\u505A\u4EFB\u52A1 1\uFF0C\u5982\u679C\u6210\u529F\u540E\u518D\u505A\u4EFB\u52A1 2\uFF0C\u4EFB\u4F55\u4EFB\u52A1\u5931\u8D25\u5219\u4E0D\u518D\u7EE7\u7EED\u5E76\u6267\u884C\u9519\u8BEF\u5904\u7406\u51FD\u6570\u3002</p><p>\u8981\u4E32\u884C\u6267\u884C\u8FD9\u6837\u7684\u5F02\u6B65\u4EFB\u52A1\uFF0C\u4E0D\u7528 Promise \u9700\u8981\u5199\u4E00\u5C42\u4E00\u5C42\u7684\u5D4C\u5957\u4EE3\u7801\u3002\u6709\u4E86 Promise\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u7B80\u5355\u5730\u5199:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>job1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>job2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>job3<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>handleError<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C<code>job1</code>\u3001<code>job2</code> \u548C <code>job3</code> \u90FD\u662F Promise \u5BF9\u8C61\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u6F14\u793A\u4E86\u5982\u4F55\u4E32\u884C\u6267\u884C\u4E00\u7CFB\u5217\u9700\u8981\u5F02\u6B65\u8BA1\u7B97\u83B7\u5F97\u7ED3\u679C\u7684\u4EFB\u52A1:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> logging <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#test-promise2-log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  logging<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">[</span>logging<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token punctuation">;</span>
  logging<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 0.5\u79D2\u540E\u8FD4\u56DEinput*input\u7684\u8BA1\u7B97\u7ED3\u679C:</span>
<span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;calculating &quot;</span> <span class="token operator">+</span> input <span class="token operator">+</span> <span class="token string">&quot; x &quot;</span> <span class="token operator">+</span> input <span class="token operator">+</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> input <span class="token operator">*</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 0.5\u79D2\u540E\u8FD4\u56DEinput+input\u7684\u8BA1\u7B97\u7ED3\u679C:</span>
<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;calculating &quot;</span> <span class="token operator">+</span> input <span class="token operator">+</span> <span class="token string">&quot; + &quot;</span> <span class="token operator">+</span> input <span class="token operator">+</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> input <span class="token operator">+</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;start new Promise...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>multiply<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>multiply<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Got value: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>setTimeout</code> \u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u6A21\u62DF\u7F51\u7EDC\u7B49\u5F02\u6B65\u6267\u884C\u7684\u51FD\u6570\u3002\u73B0\u5728\uFF0C\u6211\u4EEC\u628A\u4E0A\u4E00\u8282\u7684 Ajax \u5F02\u6B65\u6267\u884C\u51FD\u6570\u8F6C\u6362\u4E3A <code>Promise</code> \u5BF9\u8C61\uFF0C\u770B\u770B\u7528 <code>Promise</code> \u5982\u4F55\u7B80\u5316\u5F02\u6B65\u5904\u7406:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// ajax\u51FD\u6570\u5C06\u8FD4\u56DEPromise\u5BF9\u8C61:</span>
<span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token parameter">method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> log <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#test-promise-ajax-result&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/api/categories&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679CAJAX\u6210\u529F\uFF0C\u83B7\u5F97\u54CD\u5E94\u5185\u5BB9</span>
  log<span class="token punctuation">.</span>innerText <span class="token operator">=</span> text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679CAJAX\u5931\u8D25\uFF0C\u83B7\u5F97\u54CD\u5E94\u4EE3\u7801</span>
  log<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&quot;ERROR: &quot;</span> <span class="token operator">+</span> status<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u4E32\u884C\u6267\u884C\u82E5\u5E72\u5F02\u6B65\u4EFB\u52A1\u5916\uFF0C<code>Promise</code> \u8FD8\u53EF\u4EE5\u5E76\u884C\u6267\u884C\u5F02\u6B65\u4EFB\u52A1\u3002</p><p>\u8BD5\u60F3\u4E00\u4E2A\u9875\u9762\u804A\u5929\u7CFB\u7EDF\uFF0C\u6211\u4EEC\u9700\u8981\u4ECE\u4E24\u4E2A\u4E0D\u540C\u7684 URL \u5206\u522B\u83B7\u5F97\u7528\u6237\u7684\u4E2A\u4EBA\u4FE1\u606F\u548C\u597D\u53CB\u5217\u8868\uFF0C\u8FD9\u4E24\u4E2A\u4EFB\u52A1\u662F\u53EF\u4EE5\u5E76\u884C\u6267\u884C\u7684\uFF0C\u7528 <code>Promise.all()</code> \u5B9E\u73B0\u5982\u4E0B:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;P1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token string">&quot;P2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u540C\u65F6\u6267\u884Cp1\u548Cp2\uFF0C\u5E76\u5728\u5B83\u4EEC\u90FD\u5B8C\u6210\u540E\u6267\u884Cthen:</span>
Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u5F97\u4E00\u4E2AArray: [&#39;P1&#39;, &#39;P2&#39;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E9B\u65F6\u5019\uFF0C\u591A\u4E2A\u5F02\u6B65\u4EFB\u52A1\u662F\u4E3A\u4E86\u5BB9\u9519\u3002\u6BD4\u5982\uFF0C\u540C\u65F6\u5411\u4E24\u4E2A URL \u8BFB\u53D6\u7528\u6237\u7684\u4E2A\u4EBA\u4FE1\u606F\uFF0C\u53EA\u9700\u8981\u83B7\u5F97\u5148\u8FD4\u56DE\u7684\u7ED3\u679C\u5373\u53EF\u3002\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7528 <code>Promise.race()</code> \u5B9E\u73B0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;P1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token string">&quot;P2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;P1&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E p1 \u6267\u884C\u8F83\u5FEB\uFF0CPromise \u7684 <code>then()</code> \u5C06\u83B7\u5F97\u7ED3\u679C <code>&#39;P1&#39;</code>\uFF0Cp2 \u4ECD\u5728\u7EE7\u7EED\u6267\u884C\uFF0C\u4F46\u6267\u884C\u7ED3\u679C\u5C06\u88AB\u4E22\u5F03\u3002</p><p>\u5982\u679C\u6211\u4EEC\u7EC4\u5408\u4F7F\u7528 Promise\uFF0C\u5C31\u53EF\u4EE5\u628A\u5F88\u591A\u5F02\u6B65\u4EFB\u52A1\u4EE5\u5E76\u884C\u548C\u4E32\u884C\u7684\u65B9\u5F0F\u7EC4\u5408\u8D77\u6765\u6267\u884C\u3002</p>`,42);function k(r,d){return t(),p("div",null,[u,i,o(" more "),l])}const b=a(c,[["render",k],["__file","promise.html.vue"]]);export{b as default};
