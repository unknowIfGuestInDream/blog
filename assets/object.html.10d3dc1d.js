import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as s,b as n,e as t,f as a,r as l}from"./app.963e91c8.js";const i={},u=a(`<h1 id="\u5BF9\u8C61\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u6269\u5C55" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u6269\u5C55</h1><h2 id="\u5C5E\u6027\u7684\u7B80\u6D01\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u7684\u7B80\u6D01\u8868\u793A\u6CD5" aria-hidden="true">#</a> \u5C5E\u6027\u7684\u7B80\u6D01\u8868\u793A\u6CD5</h2><p>ES6 \u5141\u8BB8\u76F4\u63A5\u5199\u5165\u53D8\u91CF\u548C\u51FD\u6570\uFF0C\u4F5C\u4E3A\u5BF9\u8C61\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u3002\u8FD9\u6837\u7684\u4E66\u5199\u66F4\u52A0\u7B80\u6D01\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span><span class="token punctuation">;</span>
baz<span class="token punctuation">;</span> <span class="token comment">// {foo: &quot;bar&quot;}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> foo <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8868\u660E\uFF0CES6 \u5141\u8BB8\u5728\u5BF9\u8C61\u4E4B\u4E2D\uFF0C\u76F4\u63A5\u5199\u53D8\u91CF\u3002\u8FD9\u65F6\uFF0C\u5C5E\u6027\u540D\u4E3A\u53D8\u91CF\u540D, \u5C5E\u6027\u503C\u4E3A\u53D8\u91CF\u7684\u503C\u3002\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Object {x: 1, y: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u5C5E\u6027\u7B80\u5199\uFF0C\u65B9\u6CD5\u4E5F\u53EF\u4EE5\u7B80\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>

<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">method</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5B9E\u9645\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> birth <span class="token operator">=</span> <span class="token string">&quot;2000/01/01&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span>

  <span class="token comment">//\u7B49\u540C\u4E8Ebirth: birth</span>
  birth<span class="token punctuation">,</span>

  <span class="token comment">// \u7B49\u540C\u4E8Ehello: function ()...</span>
  <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u7684\u540D\u5B57\u662F&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u5199\u6CD5\u7528\u4E8E\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u5C06\u4F1A\u975E\u5E38\u65B9\u4FBF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {x:1, y:10}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CommonJS \u6A21\u5757\u8F93\u51FA\u4E00\u7EC4\u53D8\u91CF\uFF0C\u5C31\u975E\u5E38\u5408\u9002\u4F7F\u7528\u7B80\u6D01\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ms <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> key <span class="token keyword">in</span> ms <span class="token operator">?</span> ms<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">setItem</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ms<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ms <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> getItem<span class="token punctuation">,</span> setItem<span class="token punctuation">,</span> clear <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">getItem</span><span class="token operator">:</span> getItem<span class="token punctuation">,</span>
  <span class="token literal-property property">setItem</span><span class="token operator">:</span> setItem<span class="token punctuation">,</span>
  <span class="token literal-property property">clear</span><span class="token operator">:</span> clear<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C5E\u6027\u7684\u8D4B\u503C\u5668(setter)\u548C\u53D6\u503C\u5668(getter)\uFF0C\u4E8B\u5B9E\u4E0A\u4E5F\u662F\u91C7\u7528\u8FD9\u79CD\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> cart <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_wheels</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>

  <span class="token keyword">get</span> <span class="token function">wheels</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wheels<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token keyword">set</span> <span class="token function">wheels</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_wheels<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u503C\u592A\u5C0F\u4E86!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_wheels <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u7B80\u6D01\u5199\u6CD5\u7684\u5C5E\u6027\u540D\u603B\u662F\u5B57\u7B26\u4E32\uFF0C\u8FD9\u4F1A\u5BFC\u81F4\u4E00\u4E9B\u770B\u4E0A\u53BB\u6BD4\u8F83\u5947\u602A\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">class</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">class</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>class</code> \u662F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u56E0\u4E3A\u5B83\u5C5E\u4E8E\u5173\u952E\u5B57\uFF0C\u800C\u5BFC\u81F4\u8BED\u6CD5\u89E3\u6790\u62A5\u9519\u3002</p><p>\u5982\u679C\u67D0\u4E2A\u65B9\u6CD5\u7684\u503C\u662F\u4E00\u4E2A Generator \u51FD\u6570\uFF0C\u524D\u9762\u9700\u8981\u52A0\u4E0A\u661F\u53F7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C5E\u6027\u540D\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u540D\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u5C5E\u6027\u540D\u8868\u8FBE\u5F0F</h2><p>JavaScript \u5B9A\u4E49\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u6709\u4E24\u79CD\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u65B9\u6CD5\u4E00</span>
obj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B9\u6CD5\u4E8C</span>
obj<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;bc&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684\u65B9\u6CD5\u4E00\u662F\u76F4\u63A5\u7528\u6807\u8BC6\u7B26\u4F5C\u4E3A\u5C5E\u6027\u540D\uFF0C\u65B9\u6CD5\u4E8C\u662F\u7528\u8868\u8FBE\u5F0F\u4F5C\u4E3A\u5C5E\u6027\u540D\uFF0C\u8FD9\u65F6\u8981\u5C06\u8868\u8FBE\u5F0F\u653E\u5728\u65B9\u62EC\u53F7\u4E4B\u5185\u3002</p><p>\u4F46\u662F\uFF0C\u5982\u679C\u4F7F\u7528\u5B57\u9762\u91CF\u65B9\u5F0F\u5B9A\u4E49\u5BF9\u8C61(\u4F7F\u7528\u5927\u62EC\u53F7)\uFF0C\u5728 ES5 \u4E2D\u53EA\u80FD\u4F7F\u7528\u65B9\u6CD5\u4E00(\u6807\u8BC6\u7B26)\u5B9A\u4E49\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">abc</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u5141\u8BB8\u5B57\u9762\u91CF\u5B9A\u4E49\u5BF9\u8C61\u65F6\uFF0C\u7528\u65B9\u6CD5\u4E8C(\u8868\u8FBE\u5F0F)\u4F5C\u4E3A\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u5373\u628A\u8868\u8FBE\u5F0F\u653E\u5728\u65B9\u62EC\u53F7\u5185\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> propKey <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;bc&quot;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> lastWord <span class="token operator">=</span> <span class="token string">&quot;last word&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;first word&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>lastWord<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

a<span class="token punctuation">[</span><span class="token string">&quot;first word&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello&quot;</span>
a<span class="token punctuation">[</span>lastWord<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &quot;world&quot;</span>
a<span class="token punctuation">[</span><span class="token string">&quot;last word&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &quot;world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8868\u8FBE\u5F0F\u8FD8\u53EF\u4EE5\u7528\u4E8E\u5B9A\u4E49\u65B9\u6CD5\u540D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token string">&quot;h&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;ello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5C5E\u6027\u540D\u8868\u8FBE\u5F0F\u4E0E\u7B80\u6D01\u8868\u793A\u6CD5\uFF0C\u4E0D\u80FD\u540C\u65F6\u4F7F\u7528\uFF0C\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u62A5\u9519</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>foo<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B63\u786E</span>
<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>foo<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5C5E\u6027\u540D\u8868\u8FBE\u5F0F\u5982\u679C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4F1A\u81EA\u52A8\u5C06\u5BF9\u8C61\u8F6C\u4E3A\u5B57\u7B26\u4E32 <code>[object Object]</code>\uFF0C\u8FD9\u4E00\u70B9\u8981\u7279\u522B\u5C0F\u5FC3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> keyA <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> keyB <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>keyA<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;valueA&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>keyB<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;valueB&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

myObject<span class="token punctuation">;</span> <span class="token comment">// Object {[object Object]: &quot;valueB&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>[keyA]</code> \u548C <code>[keyB]</code> \u5F97\u5230\u7684\u90FD\u662F <code>[object Object]</code>\uFF0C\u6240\u4EE5 <code>[keyB]</code> \u4F1A\u628A <code>[keyA]</code> \u8986\u76D6\u6389\uFF0C\u800C <code>myObject</code> \u6700\u540E\u53EA\u6709\u4E00\u4E2A <code>[object Object]</code> \u5C5E\u6027\u3002</p><h2 id="\u65B9\u6CD5\u7684-name-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u7684-name-\u5C5E\u6027" aria-hidden="true">#</a> \u65B9\u6CD5\u7684 name \u5C5E\u6027</h2><p>\u51FD\u6570\u7684 <code>name</code> \u5C5E\u6027\uFF0C\u8FD4\u56DE\u51FD\u6570\u540D\u3002\u5BF9\u8C61\u65B9\u6CD5\u4E5F\u662F\u51FD\u6570\uFF0C\u56E0\u6B64\u4E5F\u6709 <code>name</code> \u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span>sayName<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;sayName&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u65B9\u6CD5\u7684 <code>name</code> \u5C5E\u6027\u8FD4\u56DE\u51FD\u6570\u540D(\u5373\u65B9\u6CD5\u540D)\u3002</p><p>\u5982\u679C\u5BF9\u8C61\u7684\u65B9\u6CD5\u4F7F\u7528\u4E86\u53D6\u503C\u51FD\u6570(<code>getter</code>)\u548C\u5B58\u503C\u51FD\u6570(<code>setter</code>)\uFF0C\u5219 <code>name</code> \u5C5E\u6027\u4E0D\u662F\u5728\u8BE5\u65B9\u6CD5\u4E0A\u9762\uFF0C\u800C\u662F\u8BE5\u65B9\u6CD5\u7684\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\u7684 <code>get</code> \u548C <code>set</code> \u5C5E\u6027\u4E0A\u9762\uFF0C\u8FD4\u56DE\u503C\u662F\u65B9\u6CD5\u540D\u524D\u52A0\u4E0A <code>get</code> \u548C <code>set</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">set</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>foo<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token comment">// TypeError: Cannot read property &#39;name&#39; of undefined</span>

<span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

descriptor<span class="token punctuation">.</span>get<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;get foo&quot;</span>
descriptor<span class="token punctuation">.</span>set<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;set foo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E24\u79CD\u7279\u6B8A\u60C5\u51B5: <code>bind</code> \u65B9\u6CD5\u521B\u9020\u7684\u51FD\u6570\uFF0C<code>name</code> \u5C5E\u6027\u8FD4\u56DE <code>bound</code> \u52A0\u4E0A\u539F\u51FD\u6570\u7684\u540D\u5B57\uFF1B<code>Function</code> \u6784\u9020\u51FD\u6570\u521B\u9020\u7684\u51FD\u6570\uFF0C<code>name</code> \u5C5E\u6027\u8FD4\u56DE <code>anonymous</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;anonymous&quot;</span>

<span class="token keyword">var</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">doSomething</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;bound doSomething&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5BF9\u8C61\u7684\u65B9\u6CD5\u662F\u4E00\u4E2A Symbol \u503C\uFF0C\u90A3\u4E48 <code>name</code> \u5C5E\u6027\u8FD4\u56DE\u7684\u662F\u8FD9\u4E2A Symbol \u503C\u7684\u63CF\u8FF0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> key1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> key2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key1<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>key2<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>key1<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;[description]&quot;</span>
obj<span class="token punctuation">[</span>key2<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>key1</code> \u5BF9\u5E94\u7684 Symbol \u503C\u6709\u63CF\u8FF0\uFF0C<code>key2</code> \u6CA1\u6709\u3002</p>`,49),r={id:"object-is",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#object-is","aria-hidden":"true"},"#",-1),k={href:"http://Object.is",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>ES5 \u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u76F8\u7B49\uFF0C\u53EA\u6709\u4E24\u4E2A\u8FD0\u7B97\u7B26: \u76F8\u7B49\u8FD0\u7B97\u7B26(<code>==</code>)\u548C\u4E25\u683C\u76F8\u7B49\u8FD0\u7B97\u7B26(<code>===</code>)\u3002\u5B83\u4EEC\u90FD\u6709\u7F3A\u70B9\uFF0C\u524D\u8005\u4F1A\u81EA\u52A8\u8F6C\u6362\u6570\u636E\u7C7B\u578B\uFF0C\u540E\u8005\u7684 <code>NaN</code> \u4E0D\u7B49\u4E8E\u81EA\u8EAB\uFF0C\u4EE5\u53CA <code>+0</code> \u7B49\u4E8E <code>-0</code>\u3002JavaScript \u7F3A\u4E4F\u4E00\u79CD\u8FD0\u7B97\uFF0C\u5728\u6240\u6709\u73AF\u5883\u4E2D\uFF0C\u53EA\u8981\u4E24\u4E2A\u503C\u662F\u4E00\u6837\u7684\uFF0C\u5B83\u4EEC\u5C31\u5E94\u8BE5\u76F8\u7B49\u3002</p><p>ES6 \u63D0\u51FA\u201CSame-value equality\u201D(\u540C\u503C\u76F8\u7B49)\u7B97\u6CD5\uFF0C\u7528\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002<code>Object.is</code> \u5C31\u662F\u90E8\u7F72\u8FD9\u4E2A\u7B97\u6CD5\u7684\u65B0\u65B9\u6CD5\u3002\u5B83\u7528\u6765\u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u4E25\u683C\u76F8\u7B49\uFF0C\u4E0E\u4E25\u683C\u6BD4\u8F83\u8FD0\u7B97\u7B26(===)\u7684\u884C\u4E3A\u57FA\u672C\u4E00\u81F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u540C\u4E4B\u5904\u53EA\u6709\u4E24\u4E2A: \u4E00\u662F <code>+0</code> \u4E0D\u7B49\u4E8E <code>-0</code>\uFF0C\u4E8C\u662F <code>NaN</code> \u7B49\u4E8E\u81EA\u8EAB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">+</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
<span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">,</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES5 \u53EF\u4EE5\u901A\u8FC7\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u90E8\u7F72 <code>Object.is</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&quot;is&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9488\u5BF9+0 \u4E0D\u7B49\u4E8E -0\u7684\u60C5\u51B5</span>
      <span class="token keyword">return</span> x <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">/</span> x <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">/</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9488\u5BF9NaN\u7684\u60C5\u51B5</span>
    <span class="token keyword">return</span> x <span class="token operator">!==</span> x <span class="token operator">&amp;&amp;</span> y <span class="token operator">!==</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign()</h2><h3 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h3><p><code>Object.assign</code> \u65B9\u6CD5\u7528\u4E8E\u5BF9\u8C61\u7684\u5408\u5E76\uFF0C\u5C06\u6E90\u5BF9\u8C61(source)\u7684\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027\uFF0C\u590D\u5236\u5230\u76EE\u6807\u5BF9\u8C61(target)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> source1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source1<span class="token punctuation">,</span> source2<span class="token punctuation">)</span><span class="token punctuation">;</span>
target<span class="token punctuation">;</span> <span class="token comment">// {a:1, b:2, c:3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Object.assign</code> \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u76EE\u6807\u5BF9\u8C61\uFF0C\u540E\u9762\u7684\u53C2\u6570\u90FD\u662F\u6E90\u5BF9\u8C61\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0E\u6E90\u5BF9\u8C61\u6709\u540C\u540D\u5C5E\u6027\uFF0C\u6216\u591A\u4E2A\u6E90\u5BF9\u8C61\u6709\u540C\u540D\u5C5E\u6027\uFF0C\u5219\u540E\u9762\u7684\u5C5E\u6027\u4F1A\u8986\u76D6\u524D\u9762\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> source1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source1<span class="token punctuation">,</span> source2<span class="token punctuation">)</span><span class="token punctuation">;</span>
target<span class="token punctuation">;</span> <span class="token comment">// {a:1, b:2, c:3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C<code>Object.assign</code> \u4F1A\u76F4\u63A5\u8FD4\u56DE\u8BE5\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> obj<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8BE5\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C\u5219\u4F1A\u5148\u8F6C\u6210\u5BF9\u8C61\uFF0C\u7136\u540E\u8FD4\u56DE\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">typeof</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;object&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7531\u4E8E <code>undefined</code> \u548C <code>null</code> \u65E0\u6CD5\u8F6C\u6210\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5982\u679C\u5B83\u4EEC\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u975E\u5BF9\u8C61\u53C2\u6570\u51FA\u73B0\u5728\u6E90\u5BF9\u8C61\u7684\u4F4D\u7F6E(\u5373\u975E\u9996\u53C2\u6570)\uFF0C\u90A3\u4E48\u5904\u7406\u89C4\u5219\u6709\u6240\u4E0D\u540C\u3002\u9996\u5148\uFF0C\u8FD9\u4E9B\u53C2\u6570\u90FD\u4F1A\u8F6C\u6210\u5BF9\u8C61\uFF0C\u5982\u679C\u65E0\u6CD5\u8F6C\u6210\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u8DF3\u8FC7\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5982\u679C <code>undefined</code> \u548C <code>null</code> \u4E0D\u5728\u9996\u53C2\u6570\uFF0C\u5C31\u4E0D\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">===</span> obj<span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">===</span> obj<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4ED6\u7C7B\u578B\u7684\u503C(\u5373\u6570\u503C\u3001\u5B57\u7B26\u4E32\u548C\u5E03\u5C14\u503C)\u4E0D\u5728\u9996\u53C2\u6570\uFF0C\u4E5F\u4E0D\u4F1A\u62A5\u9519\u3002\u4F46\u662F\uFF0C\u9664\u4E86\u5B57\u7B26\u4E32\u4F1A\u4EE5\u6570\u7EC4\u5F62\u5F0F\uFF0C\u62F7\u8D1D\u5165\u76EE\u6807\u5BF9\u8C61\uFF0C\u5176\u4ED6\u503C\u90FD\u4E0D\u4F1A\u4EA7\u751F\u6548\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> v1 <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> v2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> v3 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> v1<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> v3<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { &quot;0&quot;: &quot;a&quot;, &quot;1&quot;: &quot;b&quot;, &quot;2&quot;: &quot;c&quot; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>v1</code>\u3001<code>v2</code>\u3001<code>v3</code> \u5206\u522B\u662F\u5B57\u7B26\u4E32\u3001\u5E03\u5C14\u503C\u548C\u6570\u503C\uFF0C\u7ED3\u679C\u53EA\u6709\u5B57\u7B26\u4E32\u5408\u5165\u76EE\u6807\u5BF9\u8C61(\u4EE5\u5B57\u7B26\u6570\u7EC4\u7684\u5F62\u5F0F)\uFF0C\u6570\u503C\u548C\u5E03\u5C14\u503C\u90FD\u4F1A\u88AB\u5FFD\u7565\u3002\u8FD9\u662F\u56E0\u4E3A\u53EA\u6709\u5B57\u7B26\u4E32\u7684\u5305\u88C5\u5BF9\u8C61\uFF0C\u4F1A\u4EA7\u751F\u53EF\u679A\u4E3E\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Object</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {[[PrimitiveValue]]: true}</span>
<span class="token function">Object</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  {[[PrimitiveValue]]: 10}</span>
<span class="token function">Object</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {0: &quot;a&quot;, 1: &quot;b&quot;, 2: &quot;c&quot;, length: 3, [[PrimitiveValue]]: &quot;abc&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5E03\u5C14\u503C\u3001\u6570\u503C\u3001\u5B57\u7B26\u4E32\u5206\u522B\u8F6C\u6210\u5BF9\u5E94\u7684\u5305\u88C5\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u770B\u5230\u5B83\u4EEC\u7684\u539F\u59CB\u503C\u90FD\u5728\u5305\u88C5\u5BF9\u8C61\u7684\u5185\u90E8\u5C5E\u6027 <code>[[PrimitiveValue]]</code> \u4E0A\u9762\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u662F\u4E0D\u4F1A\u88AB <code>Object.assign</code> \u62F7\u8D1D\u7684\u3002\u53EA\u6709\u5B57\u7B26\u4E32\u7684\u5305\u88C5\u5BF9\u8C61\uFF0C\u4F1A\u4EA7\u751F\u53EF\u679A\u4E3E\u7684\u5B9E\u4E49\u5C5E\u6027\uFF0C\u90A3\u4E9B\u5C5E\u6027\u5219\u4F1A\u88AB\u62F7\u8D1D\u3002</p><p><code>Object.assign</code> \u62F7\u8D1D\u7684\u5C5E\u6027\u662F\u6709\u9650\u5236\u7684\uFF0C\u53EA\u62F7\u8D1D\u6E90\u5BF9\u8C61\u7684\u81EA\u8EAB\u5C5E\u6027(\u4E0D\u62F7\u8D1D\u7EE7\u627F\u5C5E\u6027)\uFF0C\u4E5F\u4E0D\u62F7\u8D1D\u4E0D\u53EF\u679A\u4E3E\u7684\u5C5E\u6027(<code>enumerable: false</code>)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;invisible&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { b: &#39;c&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Object.assign</code> \u8981\u62F7\u8D1D\u7684\u5BF9\u8C61\u53EA\u6709\u4E00\u4E2A\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027 <code>invisible</code>\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u5E76\u6CA1\u6709\u88AB\u62F7\u8D1D\u8FDB\u53BB\u3002</p><p>\u5C5E\u6027\u540D\u4E3A Symbol \u503C\u7684\u5C5E\u6027\uFF0C\u4E5F\u4F1A\u88AB <code>Object.assign</code> \u62F7\u8D1D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { a: &#39;b&#39;, Symbol(c): &#39;d&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CE8\u610F\u70B9" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u70B9" aria-hidden="true">#</a> \u6CE8\u610F\u70B9</h3><ol><li><p>\u6D45\u62F7\u8D1D</p><p><code>Object.assign</code> \u65B9\u6CD5\u5B9E\u884C\u7684\u662F\u6D45\u62F7\u8D1D\uFF0C\u800C\u4E0D\u662F\u6DF1\u62F7\u8D1D\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u6E90\u5BF9\u8C61\u67D0\u4E2A\u5C5E\u6027\u7684\u503C\u662F\u5BF9\u8C61\uFF0C\u90A3\u4E48\u76EE\u6807\u5BF9\u8C61\u62F7\u8D1D\u5F97\u5230\u7684\u662F\u8FD9\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>

obj1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
obj2<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6E90\u5BF9\u8C61 <code>obj1</code> \u7684 <code>a</code> \u5C5E\u6027\u7684\u503C\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C<code>Object.assign</code> \u62F7\u8D1D\u5F97\u5230\u7684\u662F\u8FD9\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528\u3002\u8FD9\u4E2A\u5BF9\u8C61\u7684\u4EFB\u4F55\u53D8\u5316\uFF0C\u90FD\u4F1A\u53CD\u6620\u5230\u76EE\u6807\u5BF9\u8C61\u4E0A\u9762\u3002</p></li><li><p>\u540C\u540D\u5C5E\u6027\u7684\u66FF\u6362</p><p>\u5BF9\u4E8E\u8FD9\u79CD\u5D4C\u5957\u7684\u5BF9\u8C61\uFF0C\u4E00\u65E6\u9047\u5230\u540C\u540D\u5C5E\u6027\uFF0C<code>Object.assign</code> \u7684\u5904\u7406\u65B9\u6CD5\u662F\u66FF\u6362\uFF0C\u800C\u4E0D\u662F\u6DFB\u52A0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token string">&quot;e&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { a: { b: &#39;hello&#39; } }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>target</code> \u5BF9\u8C61\u7684 <code>a</code> \u5C5E\u6027\u88AB <code>source</code> \u5BF9\u8C61\u7684 <code>a</code> \u5C5E\u6027\u6574\u4E2A\u66FF\u6362\u6389\u4E86\uFF0C\u800C\u4E0D\u4F1A\u5F97\u5230 <code>{ a: { b: &#39;hello&#39;, d: &#39;e&#39; } }</code> \u7684\u7ED3\u679C\u3002\u8FD9\u901A\u5E38\u4E0D\u662F\u5F00\u53D1\u8005\u60F3\u8981\u7684\uFF0C\u9700\u8981\u7279\u522B\u5C0F\u5FC3\u3002</p><p>\u4E00\u4E9B\u51FD\u6570\u5E93\u63D0\u4F9B <code>Object.assign</code> \u7684\u5B9A\u5236\u7248\u672C(\u6BD4\u5982 Lodash \u7684 <code>_.defaultsDeep</code> \u65B9\u6CD5)\uFF0C\u53EF\u4EE5\u5F97\u5230\u6DF1\u62F7\u8D1D\u7684\u5408\u5E76\u3002</p></li><li><p>\u6570\u7EC4\u7684\u5904\u7406</p><p><code>Object.assign</code> \u53EF\u4EE5\u7528\u6765\u5904\u7406\u6570\u7EC4\uFF0C\u4F46\u662F\u4F1A\u628A\u6570\u7EC4\u89C6\u4E3A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [4, 5, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Object.assign</code> \u628A\u6570\u7EC4\u89C6\u4E3A\u5C5E\u6027\u540D\u4E3A 0\u30011\u30012 \u7684\u5BF9\u8C61\uFF0C\u56E0\u6B64\u6E90\u6570\u7EC4\u7684 0 \u53F7\u5C5E\u6027 <code>4</code> \u8986\u76D6\u4E86\u76EE\u6807\u6570\u7EC4\u7684 0 \u53F7\u5C5E\u6027 <code>1</code>\u3002</p></li><li><p>\u53D6\u503C\u51FD\u6570\u7684\u5904\u7406</p><p><code>Object.assign</code> \u53EA\u80FD\u8FDB\u884C\u503C\u7684\u590D\u5236\uFF0C\u5982\u679C\u8981\u590D\u5236\u7684\u503C\u662F\u4E00\u4E2A\u53D6\u503C\u51FD\u6570\uFF0C\u90A3\u4E48\u5C06\u6C42\u503C\u540E\u518D\u590D\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { foo: 1 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>source</code> \u5BF9\u8C61\u7684 <code>foo</code> \u5C5E\u6027\u662F\u4E00\u4E2A\u53D6\u503C\u51FD\u6570\uFF0C<code>Object.assign</code> \u4E0D\u4F1A\u590D\u5236\u8FD9\u4E2A\u53D6\u503C\u51FD\u6570\uFF0C\u53EA\u4F1A\u62FF\u5230\u503C\u4EE5\u540E\uFF0C\u5C06\u8FD9\u4E2A\u503C\u590D\u5236\u8FC7\u53BB\u3002</p></li></ol><h3 id="\u5E38\u89C1\u7528\u9014" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u7528\u9014" aria-hidden="true">#</a> \u5E38\u89C1\u7528\u9014</h3><p><code>Object.assign</code> \u65B9\u6CD5\u6709\u5F88\u591A\u7528\u5904\u3002</p><ol><li><p>\u4E3A\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u65B9\u6CD5\u901A\u8FC7 <code>Object.assign</code> \u65B9\u6CD5\uFF0C\u5C06 <code>x</code> \u5C5E\u6027\u548C <code>y</code> \u5C5E\u6027\u6DFB\u52A0\u5230 <code>Point</code> \u7C7B\u7684\u5BF9\u8C61\u5B9E\u4F8B\u3002</p></li><li><p>\u4E3A\u5BF9\u8C61\u6DFB\u52A0\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token class-name">SomeClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    \xB7\xB7\xB7
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">anotherMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    \xB7\xB7\xB7
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E\u4E0B\u9762\u7684\u5199\u6CD5</span>
<span class="token class-name">SomeClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">someMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arg1<span class="token punctuation">,</span> arg2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  \xB7\xB7\xB7
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">SomeClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">anotherMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  \xB7\xB7\xB7
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4F7F\u7528\u4E86\u5BF9\u8C61\u5C5E\u6027\u7684\u7B80\u6D01\u8868\u793A\u6CD5\uFF0C\u76F4\u63A5\u5C06\u4E24\u4E2A\u51FD\u6570\u653E\u5728\u5927\u62EC\u53F7\u4E2D\uFF0C\u518D\u4F7F\u7528 <code>assign</code> \u65B9\u6CD5\u6DFB\u52A0\u5230 <code>SomeClass.prototype</code> \u4E4B\u4E2D\u3002</p></li><li><p>\u514B\u9686\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> origin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06\u539F\u59CB\u5BF9\u8C61\u62F7\u8D1D\u5230\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u5C31\u5F97\u5230\u4E86\u539F\u59CB\u5BF9\u8C61\u7684\u514B\u9686\u3002</p><p>\u4E0D\u8FC7\uFF0C\u91C7\u7528\u8FD9\u79CD\u65B9\u6CD5\u514B\u9686\uFF0C\u53EA\u80FD\u514B\u9686\u539F\u59CB\u5BF9\u8C61\u81EA\u8EAB\u7684\u503C\uFF0C\u4E0D\u80FD\u514B\u9686\u5B83\u7EE7\u627F\u7684\u503C\u3002\u5982\u679C\u60F3\u8981\u4FDD\u6301\u7EE7\u627F\u94FE\uFF0C\u53EF\u4EE5\u91C7\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> originProto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>originProto<span class="token punctuation">)</span><span class="token punctuation">,</span> origin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61</p><p>\u5C06\u591A\u4E2A\u5BF9\u8C61\u5408\u5E76\u5230\u67D0\u4E2A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> <span class="token operator">...</span>sources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token operator">...</span>sources<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u5E0C\u671B\u5408\u5E76\u540E\u8FD4\u56DE\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u6539\u5199\u4E0A\u9762\u51FD\u6570\uFF0C\u5BF9\u4E00\u4E2A\u7A7A\u5BF9\u8C61\u5408\u5E76\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>sources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>sources<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u4E3A\u5C5E\u6027\u6307\u5B9A\u9ED8\u8BA4\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">DEFAULTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">logLevel</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outputFormat</span><span class="token operator">:</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">processContent</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">DEFAULTS</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>DEFAULTS</code> \u5BF9\u8C61\u662F\u9ED8\u8BA4\u503C\uFF0C<code>options</code> \u5BF9\u8C61\u662F\u7528\u6237\u63D0\u4F9B\u7684\u53C2\u6570\u3002<code>Object.assign</code> \u65B9\u6CD5\u5C06 <code>DEFAULTS</code> \u548C <code>options</code> \u5408\u5E76\u6210\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u5982\u679C\u4E24\u8005\u6709\u540C\u540D\u5C5E\u6027\uFF0C\u5219 <code>option</code> \u7684\u5C5E\u6027\u503C\u4F1A\u8986\u76D6 <code>DEFAULTS</code> \u7684\u5C5E\u6027\u503C\u3002</p><p>\u6CE8\u610F\uFF0C\u7531\u4E8E\u5B58\u5728\u6D45\u62F7\u8D1D\u7684\u95EE\u9898\uFF0C<code>DEFAULTS</code> \u5BF9\u8C61\u548C <code>options</code> \u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u7684\u503C\uFF0C\u6700\u597D\u90FD\u662F\u7B80\u5355\u7C7B\u578B\uFF0C\u4E0D\u8981\u6307\u5411\u53E6\u4E00\u4E2A\u5BF9\u8C61\u3002\u5426\u5219\uFF0C<code>DEFAULTS</code> \u5BF9\u8C61\u7684\u8BE5\u5C5E\u6027\u5F88\u53EF\u80FD\u4E0D\u8D77\u4F5C\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">DEFAULTS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;example.com&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">7070</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">processContent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8000</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">//   url: {port: 8000}</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684\u539F\u610F\u662F\u5C06 <code>url.port</code> \u6539\u6210 8000\uFF0C<code>url.host</code> \u4E0D\u53D8\u3002\u5B9E\u9645\u7ED3\u679C\u5374\u662F <code>options.url</code> \u8986\u76D6\u6389 <code>DEFAULTS.url</code>\uFF0C\u6240\u4EE5 <code>url.host</code> \u5C31\u4E0D\u5B58\u5728\u4E86\u3002</p></li></ol><h2 id="\u5C5E\u6027\u7684\u53EF\u679A\u4E3E\u6027\u548C\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u7684\u53EF\u679A\u4E3E\u6027\u548C\u904D\u5386" aria-hidden="true">#</a> \u5C5E\u6027\u7684\u53EF\u679A\u4E3E\u6027\u548C\u904D\u5386</h2><h3 id="\u53EF\u679A\u4E3E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u679A\u4E3E\u6027" aria-hidden="true">#</a> \u53EF\u679A\u4E3E\u6027</h3><p>\u5BF9\u8C61\u7684\u6BCF\u4E2A\u5C5E\u6027\u90FD\u6709\u4E00\u4E2A\u63CF\u8FF0\u5BF9\u8C61(Descriptor)\uFF0C\u7528\u6765\u63A7\u5236\u8BE5\u5C5E\u6027\u7684\u884C\u4E3A\u3002<code>Object.getOwnPropertyDescriptor</code> \u65B9\u6CD5\u53EF\u4EE5\u83B7\u53D6\u8BE5\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  {</span>
<span class="token comment">//    value: 123,</span>
<span class="token comment">//    writable: true,</span>
<span class="token comment">//    enumerable: true,</span>
<span class="token comment">//    configurable: true</span>
<span class="token comment">//  }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63CF\u8FF0\u5BF9\u8C61\u7684 <code>enumerable</code> \u5C5E\u6027\uFF0C\u79F0\u4E3A\u201D\u53EF\u679A\u4E3E\u6027\u201C\uFF0C\u5982\u679C\u8BE5\u5C5E\u6027\u4E3A <code>false</code>\uFF0C\u5C31\u8868\u793A\u67D0\u4E9B\u64CD\u4F5C\u4F1A\u5FFD\u7565\u5F53\u524D\u5C5E\u6027\u3002</p><p>\u76EE\u524D\uFF0C\u6709\u56DB\u4E2A\u64CD\u4F5C\u4F1A\u5FFD\u7565 <code>enumerable</code> \u4E3A <code>false</code> \u7684\u5C5E\u6027\u3002</p><ul><li><code>for...in</code> \u5FAA\u73AF: \u53EA\u904D\u5386\u5BF9\u8C61\u81EA\u8EAB\u7684\u548C\u7EE7\u627F\u7684\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u3002</li><li><code>Object.keys()</code>: \u8FD4\u56DE\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u7684\u952E\u540D\u3002</li><li><code>JSON.stringify()</code>: \u53EA\u4E32\u884C\u5316\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u3002</li><li><code>Object.assign()</code>: \u5FFD\u7565 <code>enumerable</code> \u4E3A <code>false</code> \u7684\u5C5E\u6027\uFF0C\u53EA\u62F7\u8D1D\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u3002</li></ul><p>\u8FD9\u56DB\u4E2A\u64CD\u4F5C\u4E4B\u4E2D\uFF0C\u524D\u4E09\u4E2A\u662F ES5 \u5C31\u6709\u7684\uFF0C\u6700\u540E\u4E00\u4E2A <code>Object.assign()</code> \u662F ES6 \u65B0\u589E\u7684\u3002\u5176\u4E2D\uFF0C\u53EA\u6709 <code>for...in</code> \u4F1A\u8FD4\u56DE\u7EE7\u627F\u7684\u5C5E\u6027\uFF0C\u5176\u4ED6\u4E09\u4E2A\u65B9\u6CD5\u90FD\u4F1A\u5FFD\u7565\u7EE7\u627F\u7684\u5C5E\u6027\uFF0C\u53EA\u5904\u7406\u5BF9\u8C61\u81EA\u8EAB\u7684\u5C5E\u6027\u3002\u5B9E\u9645\u4E0A\uFF0C\u5F15\u5165\u201C\u53EF\u679A\u4E3E\u201D(<code>enumerable</code>)\u8FD9\u4E2A\u6982\u5FF5\u7684\u6700\u521D\u76EE\u7684\uFF0C\u5C31\u662F\u8BA9\u67D0\u4E9B\u5C5E\u6027\u53EF\u4EE5\u89C4\u907F\u6389 <code>for...in</code> \u64CD\u4F5C\uFF0C\u4E0D\u7136\u6240\u6709\u5185\u90E8\u5C5E\u6027\u548C\u65B9\u6CD5\u90FD\u4F1A\u88AB\u904D\u5386\u5230\u3002\u6BD4\u5982\uFF0C\u5BF9\u8C61\u539F\u578B\u7684 <code>toString</code> \u65B9\u6CD5\uFF0C\u4EE5\u53CA\u6570\u7EC4\u7684 <code>length</code> \u5C5E\u6027\uFF0C\u5C31\u901A\u8FC7\u201C\u53EF\u679A\u4E3E\u6027\u201D\uFF0C\u4ECE\u800C\u907F\u514D\u88AB <code>for...in</code> \u904D\u5386\u5230\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;toString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>enumerable<span class="token punctuation">;</span>
<span class="token comment">// false</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>enumerable<span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>toString</code> \u548C <code>length</code> \u5C5E\u6027\u7684 <code>enumerable</code> \u90FD\u662F <code>false</code>\uFF0C\u56E0\u6B64 <code>for...in</code> \u4E0D\u4F1A\u904D\u5386\u5230\u8FD9\u4E24\u4E2A\u7EE7\u627F\u81EA\u539F\u578B\u7684\u5C5E\u6027\u3002</p><p>\u53E6\u5916\uFF0CES6 \u89C4\u5B9A\uFF0C\u6240\u6709 Class \u7684\u539F\u578B\u7684\u65B9\u6CD5\u90FD\u662F\u4E0D\u53EF\u679A\u4E3E\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>
  <span class="token keyword">class</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span>
  <span class="token string">&quot;foo&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span>enumerable<span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7684\u6765\u8BF4\uFF0C\u64CD\u4F5C\u4E2D\u5F15\u5165\u7EE7\u627F\u7684\u5C5E\u6027\u4F1A\u8BA9\u95EE\u9898\u590D\u6742\u5316\uFF0C\u5927\u591A\u6570\u65F6\u5019\uFF0C\u6211\u4EEC\u53EA\u5173\u5FC3\u5BF9\u8C61\u81EA\u8EAB\u7684\u5C5E\u6027\u3002\u6240\u4EE5\uFF0C\u5C3D\u91CF\u4E0D\u8981\u7528 <code>for...in</code> \u5FAA\u73AF\uFF0C\u800C\u7528 <code>Object.keys()</code> \u4EE3\u66FF\u3002</p><h3 id="\u5C5E\u6027\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u7684\u904D\u5386" aria-hidden="true">#</a> \u5C5E\u6027\u7684\u904D\u5386</h3><p>ES6 \u4E00\u5171\u6709 5 \u79CD\u65B9\u6CD5\u53EF\u4EE5\u904D\u5386\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><ol><li><p>or...in</p><p><code>for...in</code> \u5FAA\u73AF\u904D\u5386\u5BF9\u8C61\u81EA\u8EAB\u7684\u548C\u7EE7\u627F\u7684\u53EF\u679A\u4E3E\u5C5E\u6027(\u4E0D\u542B Symbol \u5C5E\u6027)\u3002</p></li><li><p>Object.keys(obj)</p><p><code>Object.keys</code> \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u62EC\u5BF9\u8C61\u81EA\u8EAB\u7684(\u4E0D\u542B\u7EE7\u627F\u7684)\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027(\u4E0D\u542B Symbol \u5C5E\u6027)\u7684\u952E\u540D\u3002</p></li><li><p>Object.getOwnPropertyNames(obj)</p><p><code>Object.getOwnPropertyNames</code> \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u5C5E\u6027(\u4E0D\u542B Symbol \u5C5E\u6027\uFF0C\u4F46\u662F\u5305\u62EC\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027)\u7684\u952E\u540D\u3002</p></li><li><p>Object.getOwnPropertySymbols(obj)</p><p><code>Object.getOwnPropertySymbols</code> \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709 Symbol \u5C5E\u6027\u7684\u952E\u540D\u3002</p></li><li><p>Reflect.ownKeys(obj)</p><p><code>Reflect.ownKeys</code> \u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u952E\u540D\uFF0C\u4E0D\u7BA1\u952E\u540D\u662F Symbol \u6216\u5B57\u7B26\u4E32\uFF0C\u4E5F\u4E0D\u7BA1\u662F\u5426\u53EF\u679A\u4E3E\u3002</p></li></ol><p>\u4EE5\u4E0A\u7684 5 \u79CD\u65B9\u6CD5\u904D\u5386\u5BF9\u8C61\u7684\u952E\u540D\uFF0C\u90FD\u9075\u5B88\u540C\u6837\u7684\u5C5E\u6027\u904D\u5386\u7684\u6B21\u5E8F\u89C4\u5219\u3002</p><ul><li>\u9996\u5148\u904D\u5386\u6240\u6709\u6570\u503C\u952E\uFF0C\u6309\u7167\u6570\u503C\u5347\u5E8F\u6392\u5217\u3002</li><li>\u5176\u6B21\u904D\u5386\u6240\u6709\u5B57\u7B26\u4E32\u952E\uFF0C\u6309\u7167\u52A0\u5165\u65F6\u95F4\u5347\u5E8F\u6392\u5217\u3002</li><li>\u6700\u540E\u904D\u5386\u6240\u6709 Symbol \u952E\uFF0C\u6309\u7167\u52A0\u5165\u65F6\u95F4\u5347\u5E8F\u6392\u5217\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;2&#39;, &#39;10&#39;, &#39;b&#39;, &#39;a&#39;, Symbol()]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Reflect.ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5305\u542B\u4E86\u53C2\u6570\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\u3002\u8FD9\u4E2A\u6570\u7EC4\u7684\u5C5E\u6027\u6B21\u5E8F\u662F\u8FD9\u6837\u7684\uFF0C\u9996\u5148\u662F\u6570\u503C\u5C5E\u6027 <code>2</code> \u548C <code>10</code>\uFF0C\u5176\u6B21\u662F\u5B57\u7B26\u4E32\u5C5E\u6027 <code>b</code> \u548C <code>a</code>\uFF0C\u6700\u540E\u662F Symbol \u5C5E\u6027\u3002</p><h2 id="object-getownpropertydescriptors" tabindex="-1"><a class="header-anchor" href="#object-getownpropertydescriptors" aria-hidden="true">#</a> Object.getOwnPropertyDescriptors()</h2><p>\u524D\u9762\u8BF4\u8FC7\uFF0C<code>Object.getOwnPropertyDescriptor</code> \u65B9\u6CD5\u4F1A\u8FD4\u56DE\u67D0\u4E2A\u5BF9\u8C61\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61(descriptor)\u3002ES2017 \u5F15\u5165\u4E86 <code>Object.getOwnPropertyDescriptors</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u6307\u5B9A\u5BF9\u8C61\u6240\u6709\u81EA\u8EAB\u5C5E\u6027(\u975E\u7EE7\u627F\u5C5E\u6027)\u7684\u63CF\u8FF0\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { foo:</span>
<span class="token comment">//    { value: 123,</span>
<span class="token comment">//      writable: true,</span>
<span class="token comment">//      enumerable: true,</span>
<span class="token comment">//      configurable: true },</span>
<span class="token comment">//   bar:</span>
<span class="token comment">//    { get: [Function: get bar],</span>
<span class="token comment">//      set: undefined,</span>
<span class="token comment">//      enumerable: true,</span>
<span class="token comment">//      configurable: true } }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Object.getOwnPropertyDescriptors</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6240\u6709\u539F\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u90FD\u662F\u8BE5\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u5BF9\u5E94\u7684\u5C5E\u6027\u503C\u5C31\u662F\u8BE5\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\u3002</p><p>\u8BE5\u65B9\u6CD5\u7684\u5B9E\u73B0\u975E\u5E38\u5BB9\u6613\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u7684\u5F15\u5165\u76EE\u7684\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u89E3\u51B3 <code>Object.assign()</code> \u65E0\u6CD5\u6B63\u786E\u62F7\u8D1D <code>get</code> \u5C5E\u6027\u548C <code>set</code> \u5C5E\u6027\u7684\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> target1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>target1<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>target1<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { value: undefined,</span>
<span class="token comment">//   writable: true,</span>
<span class="token comment">//   enumerable: true,</span>
<span class="token comment">//   configurable: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>source</code> \u5BF9\u8C61\u7684 <code>foo</code> \u5C5E\u6027\u7684\u503C\u662F\u4E00\u4E2A\u8D4B\u503C\u51FD\u6570\uFF0C<code>Object.assign</code> \u65B9\u6CD5\u5C06\u8FD9\u4E2A\u5C5E\u6027\u62F7\u8D1D\u7ED9 <code>target1</code> \u5BF9\u8C61\uFF0C\u7ED3\u679C\u8BE5\u5C5E\u6027\u7684\u503C\u53D8\u6210\u4E86 <code>undefined</code>\u3002\u8FD9\u662F\u56E0\u4E3A <code>Object.assign</code> \u65B9\u6CD5\u603B\u662F\u62F7\u8D1D\u4E00\u4E2A\u5C5E\u6027\u7684\u503C\uFF0C\u800C\u4E0D\u4F1A\u62F7\u8D1D\u5B83\u80CC\u540E\u7684\u8D4B\u503C\u65B9\u6CD5\u6216\u53D6\u503C\u65B9\u6CD5\u3002</p><p>\u8FD9\u65F6\uFF0C<code>Object.getOwnPropertyDescriptors</code> \u65B9\u6CD5\u914D\u5408 <code>Object.defineProperties</code> \u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u5B9E\u73B0\u6B63\u786E\u62F7\u8D1D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">set</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> target2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>target2<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>target2<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { get: undefined,</span>
<span class="token comment">//   set: [Function: set foo],</span>
<span class="token comment">//   enumerable: true,</span>
<span class="token comment">//   configurable: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u5408\u5E76\u7684\u903B\u8F91\u53EF\u4EE5\u5199\u6210\u4E00\u4E2A\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">shallowMerge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> source</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Object.getOwnPropertyDescriptors</code> \u65B9\u6CD5\u7684\u53E6\u4E00\u4E2A\u7528\u5904\uFF0C\u662F\u914D\u5408 <code>Object.create</code> \u65B9\u6CD5\uFF0C\u5C06\u5BF9\u8C61\u5C5E\u6027\u514B\u9686\u5230\u4E00\u4E2A\u65B0\u5BF9\u8C61\u3002\u8FD9\u5C5E\u4E8E\u6D45\u62F7\u8D1D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> clone <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
  Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
  Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6216\u8005</span>

<span class="token keyword">const</span> <span class="token function-variable function">shallowClone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
    Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
    Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4F1A\u514B\u9686\u5BF9\u8C61 <code>obj</code>\u3002</p><p>\u53E6\u5916\uFF0C<code>Object.getOwnPropertyDescriptors</code> \u65B9\u6CD5\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u5BF9\u8C61\u7EE7\u627F\u53E6\u4E00\u4E2A\u5BF9\u8C61\u3002\u4EE5\u524D\uFF0C\u7EE7\u627F\u53E6\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E38\u5E38\u5199\u6210\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">__proto__</span><span class="token operator">:</span> prot<span class="token punctuation">,</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u89C4\u5B9A <code>__proto__</code> \u53EA\u6709\u6D4F\u89C8\u5668\u8981\u90E8\u7F72\uFF0C\u5176\u4ED6\u73AF\u5883\u4E0D\u7528\u90E8\u7F72\u3002\u5982\u679C\u53BB\u9664 <code>__proto__</code>\uFF0C\u4E0A\u9762\u4EE3\u7801\u5C31\u8981\u6539\u6210\u4E0B\u9762\u8FD9\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>prot<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>

<span class="token comment">// \u6216\u8005</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>prot<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u4E86 <code>Object.getOwnPropertyDescriptors</code>\uFF0C\u6211\u4EEC\u5C31\u6709\u4E86\u53E6\u4E00\u79CD\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
  prot<span class="token punctuation">,</span>
  Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Object.getOwnPropertyDescriptors</code> \u4E5F\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0 Mixin(\u6DF7\u5165)\u6A21\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">mix</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">with</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>mixins</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    mixins<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> mixin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>mixin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      object
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// multiple mixins example</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token function">mix</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

d<span class="token punctuation">.</span>c<span class="token punctuation">;</span> <span class="token comment">// &quot;c&quot;</span>
d<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// &quot;b&quot;</span>
d<span class="token punctuation">.</span>a<span class="token punctuation">;</span> <span class="token comment">// &quot;a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61 <code>d</code>\uFF0C\u4EE3\u8868\u4E86\u5BF9\u8C61 <code>a</code> \u548C <code>b</code> \u88AB\u6DF7\u5165\u4E86\u5BF9\u8C61 <code>c</code> \u7684\u64CD\u4F5C\u3002</p><p>\u51FA\u4E8E\u5B8C\u6574\u6027\u7684\u8003\u8651\uFF0C<code>Object.getOwnPropertyDescriptors</code> \u8FDB\u5165\u6807\u51C6\u4EE5\u540E\uFF0C\u4EE5\u540E\u8FD8\u4F1A\u65B0\u589E <code>Reflect.getOwnPropertyDescriptors</code> \u65B9\u6CD5\u3002</p><h2 id="proto-\u5C5E\u6027-object-setprototypeof-object-getprototypeof" tabindex="-1"><a class="header-anchor" href="#proto-\u5C5E\u6027-object-setprototypeof-object-getprototypeof" aria-hidden="true">#</a> <code>__proto__</code> \u5C5E\u6027\uFF0CObject.setPrototypeOf()\uFF0CObject.getPrototypeOf()</h2><p>JavaScript \u8BED\u8A00\u7684\u5BF9\u8C61\u7EE7\u627F\u662F\u901A\u8FC7\u539F\u578B\u94FE\u5B9E\u73B0\u7684\u3002ES6 \u63D0\u4F9B\u4E86\u66F4\u591A\u539F\u578B\u5BF9\u8C61\u7684\u64CD\u4F5C\u65B9\u6CD5\u3002</p><h3 id="proto-\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#proto-\u5C5E\u6027" aria-hidden="true">#</a> <code>__proto__</code> \u5C5E\u6027</h3><p><code>__proto__</code> \u5C5E\u6027(\u524D\u540E\u5404\u4E24\u4E2A\u4E0B\u5212\u7EBF)\uFF0C\u7528\u6765\u8BFB\u53D6\u6216\u8BBE\u7F6E\u5F53\u524D\u5BF9\u8C61\u7684 <code>prototype</code> \u5BF9\u8C61\u3002\u76EE\u524D\uFF0C\u6240\u6709\u6D4F\u89C8\u5668(\u5305\u62EC IE11)\u90FD\u90E8\u7F72\u4E86\u8FD9\u4E2A\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// es5 \u7684\u5199\u6CD5</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">method</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> someOtherObj<span class="token punctuation">;</span>

<span class="token comment">// es6 \u7684\u5199\u6CD5</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>someOtherObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function-variable function">method</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u5C5E\u6027\u6CA1\u6709\u5199\u5165 ES6 \u7684\u6B63\u6587\uFF0C\u800C\u662F\u5199\u5165\u4E86\u9644\u5F55\uFF0C\u539F\u56E0\u662F <code>__proto__</code> \u524D\u540E\u7684\u53CC\u4E0B\u5212\u7EBF\uFF0C\u8BF4\u660E\u5B83\u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u5185\u90E8\u5C5E\u6027\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u6B63\u5F0F\u7684\u5BF9\u5916\u7684 API\uFF0C\u53EA\u662F\u7531\u4E8E\u6D4F\u89C8\u5668\u5E7F\u6CDB\u652F\u6301\uFF0C\u624D\u88AB\u52A0\u5165\u4E86 ES6\u3002\u6807\u51C6\u660E\u786E\u89C4\u5B9A\uFF0C\u53EA\u6709\u6D4F\u89C8\u5668\u5FC5\u987B\u90E8\u7F72\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5176\u4ED6\u8FD0\u884C\u73AF\u5883\u4E0D\u4E00\u5B9A\u9700\u8981\u90E8\u7F72\uFF0C\u800C\u4E14\u65B0\u7684\u4EE3\u7801\u6700\u597D\u8BA4\u4E3A\u8FD9\u4E2A\u5C5E\u6027\u662F\u4E0D\u5B58\u5728\u7684\u3002\u56E0\u6B64\uFF0C\u65E0\u8BBA\u4ECE\u8BED\u4E49\u7684\u89D2\u5EA6\uFF0C\u8FD8\u662F\u4ECE\u517C\u5BB9\u6027\u7684\u89D2\u5EA6\uFF0C\u90FD\u4E0D\u8981\u4F7F\u7528\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u800C\u662F\u4F7F\u7528\u4E0B\u9762\u7684 <code>Object.setPrototypeOf()</code>(\u5199\u64CD\u4F5C)\u3001<code>Object.getPrototypeOf()</code>(\u8BFB\u64CD\u4F5C)\u3001<code>Object.create()</code>(\u751F\u6210\u64CD\u4F5C)\u4EE3\u66FF\u3002</p><p>\u5B9E\u73B0\u4E0A\uFF0C<code>__proto__</code> \u8C03\u7528\u7684\u662F <code>Object.prototype.__proto__</code>\uFF0C\u5177\u4F53\u5B9E\u73B0\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;__proto__&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> _thisObj <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>_thisObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> <span class="token keyword">this</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> status <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">Object</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u672C\u8EAB\u90E8\u7F72\u4E86 <code>__proto__</code> \u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u7684\u503C\u5C31\u662F\u5BF9\u8C61\u7684\u539F\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">__proto__</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-setprototypeof" tabindex="-1"><a class="header-anchor" href="#object-setprototypeof" aria-hidden="true">#</a> Object.setPrototypeOf()</h3><p><code>Object.setPrototypeOf</code> \u65B9\u6CD5\u7684\u4F5C\u7528\u4E0E <code>__proto__</code> \u76F8\u540C\uFF0C\u7528\u6765\u8BBE\u7F6E\u4E00\u4E2A\u5BF9\u8C61\u7684 <code>prototype</code> \u5BF9\u8C61\uFF0C\u8FD4\u56DE\u53C2\u6570\u5BF9\u8C61\u672C\u8EAB\u3002\u5B83\u662F ES6 \u6B63\u5F0F\u63A8\u8350\u7684\u8BBE\u7F6E\u539F\u578B\u5BF9\u8C61\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u683C\u5F0F</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7528\u6CD5</span>
<span class="token keyword">const</span> o <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u7B49\u540C\u4E8E\u4E0B\u9762\u7684\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> proto</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> proto<span class="token punctuation">;</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>

proto<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
proto<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>x<span class="token punctuation">;</span> <span class="token comment">// 10</span>
obj<span class="token punctuation">.</span>y<span class="token punctuation">;</span> <span class="token comment">// 20</span>
obj<span class="token punctuation">.</span>z<span class="token punctuation">;</span> <span class="token comment">// 40</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06 <code>proto</code> \u5BF9\u8C61\u8BBE\u4E3A <code>obj</code> \u5BF9\u8C61\u7684\u539F\u578B\uFF0C\u6240\u4EE5\u4ECE <code>obj</code> \u5BF9\u8C61\u53EF\u4EE5\u8BFB\u53D6 <code>proto</code> \u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C\u4F1A\u81EA\u52A8\u8F6C\u4E3A\u5BF9\u8C61\u3002\u4F46\u662F\u7531\u4E8E\u8FD4\u56DE\u7684\u8FD8\u662F\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u64CD\u4F5C\u4E0D\u4F1A\u4EA7\u751F\u4EFB\u4F55\u6548\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E <code>undefined</code> \u548C <code>null</code> \u65E0\u6CD5\u8F6C\u4E3A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>undefined</code> \u6216 <code>null</code>\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Object.setPrototypeOf called on null or undefined</span>

Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Object.setPrototypeOf called on null or undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-getprototypeof" tabindex="-1"><a class="header-anchor" href="#object-getprototypeof" aria-hidden="true">#</a> Object.getPrototypeOf()</h3><p>\u8BE5\u65B9\u6CD5\u4E0E <code>Object.setPrototypeOf</code> \u65B9\u6CD5\u914D\u5957\uFF0C\u7528\u4E8E\u8BFB\u53D6\u4E00\u4E2A\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> rec <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>rec<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">Rectangle</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// true</span>

Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>rec<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>rec<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">Rectangle</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u540C\u4E8E Object.getPrototypeOf(Number(1))</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Number {[[PrimitiveValue]]: 0}</span>

<span class="token comment">// \u7B49\u540C\u4E8E Object.getPrototypeOf(String(&#39;foo&#39;))</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// String {length: 0, [[PrimitiveValue]]: &quot;&quot;}</span>

<span class="token comment">// \u7B49\u540C\u4E8E Object.getPrototypeOf(Boolean(true))</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Boolean {[[PrimitiveValue]]: false}</span>

Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">Number</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u662F <code>undefined</code> \u6216 <code>null</code>\uFF0C\u5B83\u4EEC\u65E0\u6CD5\u8F6C\u4E3A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Cannot convert undefined or null to object</span>

Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: Cannot convert undefined or null to object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="super-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#super-\u5173\u952E\u5B57" aria-hidden="true">#</a> super \u5173\u952E\u5B57</h2><p>\u6211\u4EEC\u77E5\u9053\uFF0C<code>this</code> \u5173\u952E\u5B57\u603B\u662F\u6307\u5411\u51FD\u6570\u6240\u5728\u7684\u5F53\u524D\u5BF9\u8C61\uFF0CES6 \u53C8\u65B0\u589E\u4E86\u53E6\u4E00\u4E2A\u7C7B\u4F3C\u7684\u5173\u952E\u5B57 <code>super</code>\uFF0C\u6307\u5411\u5F53\u524D\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span>
  <span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61 <code>obj</code> \u7684 <code>find</code> \u65B9\u6CD5\u4E4B\u4E2D\uFF0C\u901A\u8FC7 <code>super.foo</code> \u5F15\u7528\u4E86\u539F\u578B\u5BF9\u8C61 <code>proto</code> \u7684 <code>foo</code> \u5C5E\u6027\u3002</p><p>\u6CE8\u610F\uFF0C<code>super</code> \u5173\u952E\u5B57\u8868\u793A\u539F\u578B\u5BF9\u8C61\u65F6\uFF0C\u53EA\u80FD\u7528\u5728\u5BF9\u8C61\u7684\u65B9\u6CD5\u4E4B\u4E2D\uFF0C\u7528\u5728\u5176\u4ED6\u5730\u65B9\u90FD\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u62A5\u9519</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token keyword">super</span><span class="token punctuation">.</span>foo<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u62A5\u9519</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">super</span><span class="token punctuation">.</span>foo<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u62A5\u9519</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">foo</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4E09\u79CD <code>super</code> \u7684\u7528\u6CD5\u90FD\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A\u5BF9\u4E8E JavaScript \u5F15\u64CE\u6765\u8BF4\uFF0C\u8FD9\u91CC\u7684 <code>super</code> \u90FD\u6CA1\u6709\u7528\u5728\u5BF9\u8C61\u7684\u65B9\u6CD5\u4E4B\u4E2D\u3002\u7B2C\u4E00\u79CD\u5199\u6CD5\u662F <code>super</code> \u7528\u5728\u5C5E\u6027\u91CC\u9762\uFF0C\u7B2C\u4E8C\u79CD\u548C\u7B2C\u4E09\u79CD\u5199\u6CD5\u662F <code>super</code> \u7528\u5728\u4E00\u4E2A\u51FD\u6570\u91CC\u9762\uFF0C\u7136\u540E\u8D4B\u503C\u7ED9 <code>foo</code> \u5C5E\u6027\u3002\u76EE\u524D\uFF0C\u53EA\u6709\u5BF9\u8C61\u65B9\u6CD5\u7684\u7B80\u5199\u6CD5\u53EF\u4EE5\u8BA9 JavaScript \u5F15\u64CE\u786E\u8BA4\uFF0C\u5B9A\u4E49\u7684\u662F\u5BF9\u8C61\u7684\u65B9\u6CD5\u3002</p><p>JavaScript \u5F15\u64CE\u5185\u90E8\uFF0C<code>super.foo</code> \u7B49\u540C\u4E8E <code>Object.getPrototypeOf(this).foo</code>(\u5C5E\u6027)\u6216 <code>Object.getPrototypeOf(this).foo.call(this)</code>(\u65B9\u6CD5)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>super.foo</code> \u6307\u5411\u539F\u578B\u5BF9\u8C61 <code>proto</code> \u7684 <code>foo</code> \u65B9\u6CD5\uFF0C\u4F46\u662F\u7ED1\u5B9A\u7684 <code>this</code> \u5374\u8FD8\u662F\u5F53\u524D\u5BF9\u8C61 <code>obj</code>\uFF0C\u56E0\u6B64\u8F93\u51FA\u7684\u5C31\u662F <code>world</code>\u3002</p><h2 id="object-keys-object-values-object-entries" tabindex="-1"><a class="header-anchor" href="#object-keys-object-values-object-entries" aria-hidden="true">#</a> Object.keys()\uFF0CObject.values()\uFF0CObject.entries()</h2><h3 id="object-keys" tabindex="-1"><a class="header-anchor" href="#object-keys" aria-hidden="true">#</a> Object.keys()</h3><p>ES5 \u5F15\u5165\u4E86 <code>Object.keys</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6210\u5458\u662F\u53C2\u6570\u5BF9\u8C61\u81EA\u8EAB\u7684(\u4E0D\u542B\u7EE7\u627F\u7684)\u6240\u6709\u53EF\u904D\u5386(enumerable)\u5C5E\u6027\u7684\u952E\u540D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;foo&quot;, &quot;baz&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,128),m={href:"https://github.com/tc39/proposal-object-values-entries",target:"_blank",rel:"noopener noreferrer"},b=s("code",null,"Object.keys",-1),y=s("code",null,"Object.values",-1),g=s("code",null,"Object.entries",-1),j=s("code",null,"for...of",-1),f=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> entries <span class="token punctuation">}</span> <span class="token operator">=</span> Object<span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> <span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;a&#39;, &#39;b&#39;, &#39;c&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> <span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-values" tabindex="-1"><a class="header-anchor" href="#object-values" aria-hidden="true">#</a> Object.values()</h3><p><code>Object.values</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6210\u5458\u662F\u53C2\u6570\u5BF9\u8C61\u81EA\u8EAB\u7684(\u4E0D\u542B\u7EE7\u627F\u7684)\u6240\u6709\u53EF\u904D\u5386(enumerable)\u5C5E\u6027\u7684\u952E\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;bar&quot;, 42]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u6570\u7EC4\u7684\u6210\u5458\u987A\u5E8F\uFF0C\u4E0E\u672C\u7AE0\u7684\u300A\u5C5E\u6027\u7684\u904D\u5386\u300B\u90E8\u5206\u4ECB\u7ECD\u7684\u6392\u5217\u89C4\u5219\u4E00\u81F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">100</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;b&quot;, &quot;c&quot;, &quot;a&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5C5E\u6027\u540D\u4E3A\u6570\u503C\u7684\u5C5E\u6027\uFF0C\u662F\u6309\u7167\u6570\u503C\u5927\u5C0F\uFF0C\u4ECE\u5C0F\u5230\u5927\u904D\u5386\u7684\uFF0C\u56E0\u6B64\u8FD4\u56DE\u7684\u987A\u5E8F\u662F <code>b</code>\u3001<code>c</code>\u3001<code>a</code>\u3002</p><p><code>Object.values</code> \u53EA\u8FD4\u56DE\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u904D\u5386\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Object.create</code> \u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6DFB\u52A0\u7684\u5BF9\u8C61\u5C5E\u6027(\u5C5E\u6027 <code>p</code>)\uFF0C\u5982\u679C\u4E0D\u663E\u5F0F\u58F0\u660E\uFF0C\u9ED8\u8BA4\u662F\u4E0D\u53EF\u904D\u5386\u7684\uFF0C\u56E0\u4E3A <code>p</code> \u7684\u5C5E\u6027\u63CF\u8FF0\u5BF9\u8C61\u7684 <code>enumerable</code> \u9ED8\u8BA4\u662F <code>false</code>\uFF0C<code>Object.values</code> \u4E0D\u4F1A\u8FD4\u56DE\u8FD9\u4E2A\u5C5E\u6027\u3002\u53EA\u8981\u628A <code>enumerable</code> \u6539\u6210 <code>true</code>\uFF0C<code>Object.values</code> \u5C31\u4F1A\u8FD4\u56DE\u5C5E\u6027 <code>p</code> \u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
      <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [42]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Object.values</code> \u4F1A\u8FC7\u6EE4\u5C5E\u6027\u540D\u4E3A Symbol \u503C\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;abc&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>Object.values</code> \u65B9\u6CD5\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F1A\u8FD4\u56DE\u5404\u4E2A\u5B57\u7B26\u7EC4\u6210\u7684\u4E00\u4E2A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;f&#39;, &#39;o&#39;, &#39;o&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5B57\u7B26\u4E32\u4F1A\u5148\u8F6C\u6210\u4E00\u4E2A\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\u3002\u5B57\u7B26\u4E32\u7684\u6BCF\u4E2A\u5B57\u7B26\uFF0C\u5C31\u662F\u8BE5\u5BF9\u8C61\u7684\u4E00\u4E2A\u5C5E\u6027\u3002\u56E0\u6B64\uFF0C<code>Object.values</code> \u8FD4\u56DE\u6BCF\u4E2A\u5C5E\u6027\u7684\u952E\u503C\uFF0C\u5C31\u662F\u5404\u4E2A\u5B57\u7B26\u7EC4\u6210\u7684\u4E00\u4E2A\u6570\u7EC4\u3002</p><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Object.values</code> \u4F1A\u5148\u5C06\u5176\u8F6C\u4E3A\u5BF9\u8C61\u3002\u7531\u4E8E\u6570\u503C\u548C\u5E03\u5C14\u503C\u7684\u5305\u88C5\u5BF9\u8C61\uFF0C\u90FD\u4E0D\u4F1A\u4E3A\u5B9E\u4F8B\u6DFB\u52A0\u975E\u7EE7\u627F\u7684\u5C5E\u6027\u3002\u6240\u4EE5\uFF0C<code>Object.values</code> \u4F1A\u8FD4\u56DE\u7A7A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-entries" tabindex="-1"><a class="header-anchor" href="#object-entries" aria-hidden="true">#</a> Object.entries</h3><p><code>Object.entries</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6210\u5458\u662F\u53C2\u6570\u5BF9\u8C61\u81EA\u8EAB\u7684(\u4E0D\u542B\u7EE7\u627F\u7684)\u6240\u6709\u53EF\u904D\u5386(enumerable)\u5C5E\u6027\u7684\u952E\u503C\u5BF9\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ [&quot;foo&quot;, &quot;bar&quot;], [&quot;baz&quot;, 42] ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86\u8FD4\u56DE\u503C\u4E0D\u4E00\u6837\uFF0C\u8BE5\u65B9\u6CD5\u7684\u884C\u4E3A\u4E0E <code>Object.values</code> \u57FA\u672C\u4E00\u81F4\u3002</p><p>\u5982\u679C\u539F\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u662F\u4E00\u4E2A Symbol \u503C\uFF0C\u8BE5\u5C5E\u6027\u4F1A\u88AB\u5FFD\u7565\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ [ &#39;foo&#39;, &#39;abc&#39; ] ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u539F\u5BF9\u8C61\u6709\u4E24\u4E2A\u5C5E\u6027\uFF0C<code>Object.entries</code> \u53EA\u8F93\u51FA\u5C5E\u6027\u540D\u975E Symbol \u503C\u7684\u5C5E\u6027\u3002\u5C06\u6765\u53EF\u80FD\u4F1A\u6709 <code>Reflect.ownEntries()</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u5C5E\u6027\u3002</p><p><code>Object.entries</code> \u7684\u57FA\u672C\u7528\u9014\u662F\u904D\u5386\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">one</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">two</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;one&quot;: 1</span>
<span class="token comment">// &quot;two&quot;: 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Object.entries</code> \u65B9\u6CD5\u7684\u53E6\u4E00\u4E2A\u7528\u5904\u662F\uFF0C\u5C06\u5BF9\u8C61\u8F6C\u4E3A\u771F\u6B63\u7684 <code>Map</code> \u7ED3\u6784\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">;</span> <span class="token comment">// Map { foo: &quot;bar&quot;, baz: 42 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u5DF1\u5B9E\u73B0 <code>Object.entries</code> \u65B9\u6CD5\uFF0C\u975E\u5E38\u7B80\u5355\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Generator\u51FD\u6570\u7684\u7248\u672C</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">entries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u975EGenerator\u51FD\u6570\u7684\u7248\u672C</span>
<span class="token keyword">function</span> <span class="token function">entries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61\u7684\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7684\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5BF9\u8C61\u7684\u6269\u5C55\u8FD0\u7B97\u7B26</h2><p>\u300A\u6570\u7EC4\u7684\u6269\u5C55\u300B\u4E00\u7AE0\u4E2D\uFF0C\u5DF2\u7ECF\u4ECB\u7ECD\u8FC7\u6269\u5C55\u8FD0\u7B97\u7B26(<code>...</code>)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">;</span> <span class="token comment">// 1</span>
b<span class="token punctuation">;</span> <span class="token comment">// [2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),w={href:"https://github.com/sebmarkbage/ecmascript-rest-spread",target:"_blank",rel:"noopener noreferrer"},h=a(`<h3 id="\u89E3\u6784\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u8D4B\u503C" aria-hidden="true">#</a> \u89E3\u6784\u8D4B\u503C</h3><p>\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\u7528\u4E8E\u4ECE\u4E00\u4E2A\u5BF9\u8C61\u53D6\u503C\uFF0C\u76F8\u5F53\u4E8E\u5C06\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u53EF\u904D\u5386\u7684(enumerable)\u3001\u4F46\u5C1A\u672A\u88AB\u8BFB\u53D6\u7684\u5C5E\u6027\uFF0C\u5206\u914D\u5230\u6307\u5B9A\u7684\u5BF9\u8C61\u4E0A\u9762\u3002\u6240\u6709\u7684\u952E\u548C\u5B83\u4EEC\u7684\u503C\uFF0C\u90FD\u4F1A\u62F7\u8D1D\u5230\u65B0\u5BF9\u8C61\u4E0A\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
x<span class="token punctuation">;</span> <span class="token comment">// 1</span>
y<span class="token punctuation">;</span> <span class="token comment">// 2</span>
z<span class="token punctuation">;</span> <span class="token comment">// { a: 3, b: 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>z</code> \u662F\u89E3\u6784\u8D4B\u503C\u6240\u5728\u7684\u5BF9\u8C61\u3002\u5B83\u83B7\u53D6\u7B49\u53F7\u53F3\u8FB9\u7684\u6240\u6709\u5C1A\u672A\u8BFB\u53D6\u7684\u952E(<code>a</code> \u548C <code>b</code>)\uFF0C\u5C06\u5B83\u4EEC\u8FDE\u540C\u503C\u4E00\u8D77\u62F7\u8D1D\u8FC7\u6765\u3002</p><p>\u7531\u4E8E\u89E3\u6784\u8D4B\u503C\u8981\u6C42\u7B49\u53F7\u53F3\u8FB9\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5982\u679C\u7B49\u53F7\u53F3\u8FB9\u662F <code>undefined</code> \u6216 <code>null</code>\uFF0C\u5C31\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u65E0\u6CD5\u8F6C\u4E3A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C\u65F6\u9519\u8BEF</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD0\u884C\u65F6\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6784\u8D4B\u503C\u5FC5\u987B\u662F\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token operator">...</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span> <span class="token comment">// \u53E5\u6CD5\u9519\u8BEF</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> <span class="token operator">...</span>y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span> <span class="token comment">// \u53E5\u6CD5\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u89E3\u6784\u8D4B\u503C\u4E0D\u662F\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519\u3002</p><p>\u6CE8\u610F\uFF0C\u89E3\u6784\u8D4B\u503C\u7684\u62F7\u8D1D\u662F\u6D45\u62F7\u8D1D\uFF0C\u5373\u5982\u679C\u4E00\u4E2A\u952E\u7684\u503C\u662F\u590D\u5408\u7C7B\u578B\u7684\u503C(\u6570\u7EC4\u3001\u5BF9\u8C61\u3001\u51FD\u6570)\u3001\u90A3\u4E48\u89E3\u6784\u8D4B\u503C\u62F7\u8D1D\u7684\u662F\u8FD9\u4E2A\u503C\u7684\u5F15\u7528\uFF0C\u800C\u4E0D\u662F\u8FD9\u4E2A\u503C\u7684\u526F\u672C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token operator">...</span>x <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>x</code> \u662F\u89E3\u6784\u8D4B\u503C\u6240\u5728\u7684\u5BF9\u8C61\uFF0C\u62F7\u8D1D\u4E86\u5BF9\u8C61 <code>obj</code> \u7684 <code>a</code> \u5C5E\u6027\u3002<code>a</code> \u5C5E\u6027\u5F15\u7528\u4E86\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4FEE\u6539\u8FD9\u4E2A\u5BF9\u8C61\u7684\u503C\uFF0C\u4F1A\u5F71\u54CD\u5230\u89E3\u6784\u8D4B\u503C\u5BF9\u5B83\u7684\u5F15\u7528\u3002</p><p>\u53E6\u5916\uFF0C\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u89E3\u6784\u8D4B\u503C\uFF0C\u4E0D\u80FD\u590D\u5236\u7EE7\u627F\u81EA\u539F\u578B\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> o1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> o2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
o2<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> o1<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token operator">...</span>o3 <span class="token punctuation">}</span> <span class="token operator">=</span> o2<span class="token punctuation">;</span>
o3<span class="token punctuation">;</span> <span class="token comment">// { b: 2 }</span>
o3<span class="token punctuation">.</span>a<span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61 <code>o3</code> \u590D\u5236\u4E86 <code>o2</code>\uFF0C\u4F46\u662F\u53EA\u590D\u5236\u4E86 <code>o2</code> \u81EA\u8EAB\u7684\u5C5E\u6027\uFF0C\u6CA1\u6709\u590D\u5236\u5B83\u7684\u539F\u578B\u5BF9\u8C61 <code>o1</code> \u7684\u5C5E\u6027\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> o <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
o<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> <span class="token operator">...</span>newObj <span class="token punctuation">}</span> <span class="token operator">=</span> o<span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> y<span class="token punctuation">,</span> z <span class="token punctuation">}</span> <span class="token operator">=</span> newObj<span class="token punctuation">;</span>
x<span class="token punctuation">;</span> <span class="token comment">// 1</span>
y<span class="token punctuation">;</span> <span class="token comment">// undefined</span>
z<span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>x</code> \u662F\u5355\u7EAF\u7684\u89E3\u6784\u8D4B\u503C\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8BFB\u53D6\u5BF9\u8C61 <code>o</code> \u7EE7\u627F\u7684\u5C5E\u6027\uFF1B\u53D8\u91CF <code>y</code> \u548C <code>z</code> \u662F\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u89E3\u6784\u8D4B\u503C\uFF0C\u53EA\u80FD\u8BFB\u53D6\u5BF9\u8C61 <code>o</code> \u81EA\u8EAB\u7684\u5C5E\u6027\uFF0C\u6240\u4EE5\u53D8\u91CF <code>z</code> \u53EF\u4EE5\u8D4B\u503C\u6210\u529F\uFF0C\u53D8\u91CF <code>y</code> \u53D6\u4E0D\u5230\u503C\u3002ES6 \u89C4\u5B9A\uFF0C\u53D8\u91CF\u58F0\u660E\u8BED\u53E5\u4E4B\u4E2D\uFF0C\u5982\u679C\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\uFF0C\u6269\u5C55\u8FD0\u7B97\u7B26\u540E\u9762\u5FC5\u987B\u662F\u4E00\u4E2A\u53D8\u91CF\u540D\uFF0C\u800C\u4E0D\u80FD\u662F\u4E00\u4E2A\u89E3\u6784\u8D4B\u503C\u8868\u8FBE\u5F0F\uFF0C\u6240\u4EE5\u4E0A\u9762\u4EE3\u7801\u5F15\u5165\u4E86\u4E2D\u95F4\u53D8\u91CF <code>newObj</code>\uFF0C\u5982\u679C\u5199\u6210\u4E0B\u9762\u8FD9\u6837\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">{</span> y<span class="token punctuation">,</span> z <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> o<span class="token punctuation">;</span>
<span class="token comment">// SyntaxError: ... must be followed by an identifier in declaration contexts</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6784\u8D4B\u503C\u7684\u4E00\u4E2A\u7528\u5904\uFF0C\u662F\u6269\u5C55\u67D0\u4E2A\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u5F15\u5165\u5176\u4ED6\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">baseFunction</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">wrapperFunction</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>restConfig <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F7F\u7528 x \u548C y \u53C2\u6570\u8FDB\u884C\u64CD\u4F5C</span>
  <span class="token comment">// \u5176\u4F59\u53C2\u6570\u4F20\u7ED9\u539F\u59CB\u51FD\u6570</span>
  <span class="token keyword">return</span> <span class="token function">baseFunction</span><span class="token punctuation">(</span>restConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u539F\u59CB\u51FD\u6570 <code>baseFunction</code> \u63A5\u53D7 <code>a</code> \u548C <code>b</code> \u4F5C\u4E3A\u53C2\u6570\uFF0C\u51FD\u6570 <code>wrapperFunction</code> \u5728 <code>baseFunction</code> \u7684\u57FA\u7840\u4E0A\u8FDB\u884C\u4E86\u6269\u5C55\uFF0C\u80FD\u591F\u63A5\u53D7\u591A\u4F59\u7684\u53C2\u6570\uFF0C\u5E76\u4E14\u4FDD\u7559\u539F\u59CB\u51FD\u6570\u7684\u884C\u4E3A\u3002</p><h3 id="\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u6269\u5C55\u8FD0\u7B97\u7B26</h3><p>\u5BF9\u8C61\u7684\u6269\u5C55\u8FD0\u7B97\u7B26(<code>...</code>)\u7528\u4E8E\u53D6\u51FA\u53C2\u6570\u5BF9\u8C61\u7684\u6240\u6709\u53EF\u904D\u5386\u5C5E\u6027\uFF0C\u62F7\u8D1D\u5230\u5F53\u524D\u5BF9\u8C61\u4E4B\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>z <span class="token punctuation">}</span><span class="token punctuation">;</span>
n<span class="token punctuation">;</span> <span class="token comment">// { a: 3, b: 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u7B49\u540C\u4E8E\u4F7F\u7528 <code>Object.assign</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> aClone <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> aClone <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u53EA\u662F\u62F7\u8D1D\u4E86\u5BF9\u8C61\u5B9E\u4F8B\u7684\u5C5E\u6027\uFF0C\u5982\u679C\u60F3\u5B8C\u6574\u514B\u9686\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD8\u62F7\u8D1D\u5BF9\u8C61\u539F\u578B\u7684\u5C5E\u6027\uFF0C\u53EF\u4EE5\u91C7\u7528\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5199\u6CD5\u4E00</span>
<span class="token keyword">const</span> clone1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">__proto__</span><span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>obj<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u6CD5\u4E8C</span>
<span class="token keyword">const</span> clone2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5199\u6CD5\u4E09</span>
<span class="token keyword">const</span> clone3 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
  Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span>
  Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5199\u6CD5\u4E00\u7684 <code>__proto__</code> \u5C5E\u6027\u5728\u975E\u6D4F\u89C8\u5668\u7684\u73AF\u5883\u4E0D\u4E00\u5B9A\u90E8\u7F72\uFF0C\u56E0\u6B64\u63A8\u8350\u4F7F\u7528\u5199\u6CD5\u4E8C\u548C\u5199\u6CD5\u4E09\u3002</p><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u53EF\u4EE5\u7528\u4E8E\u5408\u5E76\u4E24\u4E2A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ab <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> ab <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7528\u6237\u81EA\u5B9A\u4E49\u7684\u5C5E\u6027\uFF0C\u653E\u5728\u6269\u5C55\u8FD0\u7B97\u7B26\u540E\u9762\uFF0C\u5219\u6269\u5C55\u8FD0\u7B97\u7B26\u5185\u90E8\u7684\u540C\u540D\u5C5E\u6027\u4F1A\u88AB\u8986\u76D6\u6389\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> aWithOverrides <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> aWithOverrides <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
  aWithOverrides <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>a<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> aWithOverrides <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>a</code> \u5BF9\u8C61\u7684 <code>x</code> \u5C5E\u6027\u548C <code>y</code> \u5C5E\u6027\uFF0C\u62F7\u8D1D\u5230\u65B0\u5BF9\u8C61\u540E\u4F1A\u88AB\u8986\u76D6\u6389\u3002</p><p>\u8FD9\u7528\u6765\u4FEE\u6539\u73B0\u6709\u5BF9\u8C61\u90E8\u5206\u7684\u5C5E\u6027\u5C31\u5F88\u65B9\u4FBF\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> newVersion <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>previousVersion<span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;New Name&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Override the name property</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>newVersion</code> \u5BF9\u8C61\u81EA\u5B9A\u4E49\u4E86 <code>name</code> \u5C5E\u6027\uFF0C\u5176\u4ED6\u5C5E\u6027\u5168\u90E8\u590D\u5236\u81EA <code>previousVersion</code> \u5BF9\u8C61\u3002</p><p>\u5982\u679C\u628A\u81EA\u5B9A\u4E49\u5C5E\u6027\u653E\u5728\u6269\u5C55\u8FD0\u7B97\u7B26\u524D\u9762\uFF0C\u5C31\u53D8\u6210\u4E86\u8BBE\u7F6E\u65B0\u5BF9\u8C61\u7684\u9ED8\u8BA4\u5C5E\u6027\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> aWithDefaults <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">...</span>a <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> aWithDefaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">let</span> aWithDefaults <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u6570\u7EC4\u7684\u6269\u5C55\u8FD0\u7B97\u7B26\u4E00\u6837\uFF0C\u5BF9\u8C61\u7684\u6269\u5C55\u8FD0\u7B97\u7B26\u540E\u9762\u53EF\u4EE5\u8DDF\u8868\u8FBE\u5F0F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6269\u5C55\u8FD0\u7B97\u7B26\u540E\u9762\u662F\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u5219\u6CA1\u6709\u4EFB\u4F55\u6548\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span>
<span class="token comment">// { a: 1 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u53C2\u6570\u662F <code>null</code> \u6216 <code>undefined</code>\uFF0C\u8FD9\u4E24\u4E2A\u503C\u4F1A\u88AB\u5FFD\u7565\uFF0C\u4E0D\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> emptyObject <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u53C2\u6570\u5BF9\u8C61\u4E4B\u4E2D\uFF0C\u5982\u679C\u6709\u53D6\u503C\u51FD\u6570 <code>get</code>\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662F\u4F1A\u6267\u884C\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5E76\u4E0D\u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u56E0\u4E3A x \u5C5E\u6027\u53EA\u662F\u88AB\u5B9A\u4E49\uFF0C\u4F46\u6CA1\u6267\u884C</span>
<span class="token keyword">let</span> aWithXGetter <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>a<span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;not throw yet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F1A\u629B\u51FA\u9519\u8BEF\uFF0C\u56E0\u4E3A x \u5C5E\u6027\u88AB\u6267\u884C\u4E86</span>
<span class="token keyword">let</span> runtimeError <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>a<span class="token punctuation">,</span>
  <span class="token operator">...</span><span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;throw now&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function O(q,x){const p=l("ExternalLinkIcon");return o(),c("div",null,[u,s("h2",r,[d,n(),s("a",k,[n("Object.is"),t(p)]),n("()")]),v,s("p",null,[n("ES2017 "),s("a",m,[n("\u5F15\u5165"),t(p)]),n("\u4E86\u8DDF "),b,n(" \u914D\u5957\u7684 "),y,n(" \u548C "),g,n("\uFF0C\u4F5C\u4E3A\u904D\u5386\u4E00\u4E2A\u5BF9\u8C61\u7684\u8865\u5145\u624B\u6BB5\uFF0C\u4F9B "),j,n(" \u5FAA\u73AF\u4F7F\u7528\u3002")]),f,s("p",null,[n("ES2018 \u5C06\u8FD9\u4E2A\u8FD0\u7B97\u7B26"),s("a",w,[n("\u5F15\u5165"),t(p)]),n("\u4E86\u5BF9\u8C61\u3002")]),h])}const S=e(i,[["render",O],["__file","object.html.vue"]]);export{S as default};
