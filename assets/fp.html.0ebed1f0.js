import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.6f239d00.js";const t={},o=p(`<h1 id="\u51FD\u6570\u5F0F\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5F0F\u7F16\u7A0B" aria-hidden="true">#</a> \u51FD\u6570\u5F0F\u7F16\u7A0B</h1><p>JavaScript \u8BED\u8A00\u4ECE\u4E00\u8BDE\u751F\uFF0C\u5C31\u5177\u6709\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u70D9\u5370\u3002\u5B83\u5C06\u51FD\u6570\u4F5C\u4E3A\u4E00\u79CD\u72EC\u7ACB\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u4E0E\u5176\u4ED6\u6570\u636E\u7C7B\u578B\u5904\u4E8E\u5B8C\u5168\u5E73\u7B49\u7684\u5730\u4F4D\u3002\u5728 JavaScript \u8BED\u8A00\u4E2D\uFF0C\u60A8\u53EF\u4EE5\u91C7\u7528\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\uFF0C\u4E5F\u53EF\u4EE5\u91C7\u7528\u51FD\u6570\u5F0F\u7F16\u7A0B\u3002\u6709\u4EBA\u751A\u81F3\u8BF4\uFF0CJavaScript \u662F\u6709\u53F2\u4EE5\u6765\u7B2C\u4E00\u79CD\u88AB\u5927\u89C4\u6A21\u91C7\u7528\u7684\u51FD\u6570\u5F0F\u7F16\u7A0B\u8BED\u8A00\u3002</p><p>ES6 \u7684\u79CD\u79CD\u65B0\u589E\u529F\u80FD\uFF0C\u4F7F\u5F97\u51FD\u6570\u5F0F\u7F16\u7A0B\u53D8\u5F97\u66F4\u65B9\u4FBF\u3001\u66F4\u5F3A\u5927\u3002\u672C\u7AE0\u4ECB\u7ECD ES6 \u5982\u4F55\u8FDB\u884C\u51FD\u6570\u5F0F\u7F16\u7A0B\u3002</p><h2 id="\u67EF\u91CC\u5316" tabindex="-1"><a class="header-anchor" href="#\u67EF\u91CC\u5316" aria-hidden="true">#</a> \u67EF\u91CC\u5316</h2><p>\u67EF\u91CC\u5316(currying)\u6307\u7684\u662F\u5C06\u4E00\u4E2A\u591A\u53C2\u6570\u7684\u51FD\u6570\u62C6\u5206\u6210\u4E00\u7CFB\u5217\u51FD\u6570\uFF0C\u6BCF\u4E2A\u62C6\u5206\u540E\u7684\u51FD\u6570\u90FD\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570(unary)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>add</code> \u63A5\u53D7\u4E24\u4E2A\u53C2\u6570 <code>a</code> \u548C <code>b</code>\u3002</p><p>\u67EF\u91CC\u5316\u5C31\u662F\u5C06\u4E0A\u9762\u7684\u51FD\u6570\u62C6\u5206\u6210\u4E24\u4E2A\u51FD\u6570\uFF0C\u6BCF\u4E2A\u51FD\u6570\u90FD\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6216\u8005\u91C7\u7528\u7BAD\u5934\u51FD\u6570\u5199\u6CD5</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>

<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>add</code> \u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570 <code>a</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570 <code>f</code>\u3002\u51FD\u6570 <code>f</code> \u4E5F\u53EA\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570 <code>b</code>\u3002</p><h2 id="\u51FD\u6570\u5408\u6210" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5408\u6210" aria-hidden="true">#</a> \u51FD\u6570\u5408\u6210</h2><p>\u51FD\u6570\u5408\u6210(function composition)\u6307\u7684\u662F\uFF0C\u5C06\u591A\u4E2A\u51FD\u6570\u5408\u6210\u4E00\u4E2A\u51FD\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">compose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">g</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>compose</code> \u5C31\u662F\u4E00\u4E2A\u51FD\u6570\u5408\u6210\u5668\uFF0C\u7528\u4E8E\u5C06\u4E24\u4E2A\u51FD\u6570\u5408\u6210\u4E00\u4E2A\u51FD\u6570\u3002</p><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u67EF\u91CC\u5316\u4E0E\u51FD\u6570\u5408\u6210\u6709\u7740\u5BC6\u5207\u7684\u8054\u7CFB\u3002\u524D\u8005\u7528\u4E8E\u5C06\u4E00\u4E2A\u51FD\u6570\u62C6\u6210\u591A\u4E2A\u51FD\u6570\uFF0C\u540E\u8005\u7528\u4E8E\u5C06\u591A\u4E2A\u51FD\u6570\u5408\u5E76\u6210\u4E00\u4E2A\u51FD\u6570\u3002</p><h2 id="\u53C2\u6570\u5012\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u5012\u7F6E" aria-hidden="true">#</a> \u53C2\u6570\u5012\u7F6E</h2><p>\u53C2\u6570\u5012\u7F6E(flip)\u6307\u7684\u662F\u6539\u53D8\u51FD\u6570\u524D\u4E24\u4E2A\u53C2\u6570\u7684\u987A\u5E8F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">divide</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span>
<span class="token keyword">let</span> flip <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span>divide<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">flip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.5</span>
<span class="token function">flip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>

<span class="token keyword">let</span> <span class="token function-variable function">three</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> flip <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span>three<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">flip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// =&gt; [2, 1, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u6309\u7167\u6B63\u5E38\u7684\u53C2\u6570\u987A\u5E8F\uFF0C10 \u9664\u4EE5 5 \u7B49\u4E8E 2\u3002\u4F46\u662F\uFF0C\u53C2\u6570\u5012\u7F6E\u4EE5\u540E\u5F97\u5230\u7684\u65B0\u51FD\u6570\uFF0C\u7ED3\u679C\u5C31\u662F 5 \u9664\u4EE5 10\uFF0C\u7ED3\u679C\u5F97\u5230 0.5\u3002\u5982\u679C\u539F\u51FD\u6570\u6709 3 \u4E2A\u53C2\u6570\uFF0C\u5219\u53EA\u98A0\u5012\u524D\u4E24\u4E2A\u53C2\u6570\u7684\u4F4D\u7F6E\u3002</p><p>\u53C2\u6570\u5012\u7F6E\u7684\u4EE3\u7801\u975E\u5E38\u7B80\u5355\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">flip</span> <span class="token operator">=</span>
  <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">fn</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6267\u884C\u8FB9\u754C" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u8FB9\u754C" aria-hidden="true">#</a> \u6267\u884C\u8FB9\u754C</h2><p>\u6267\u884C\u8FB9\u754C(until)\u6307\u7684\u662F\u51FD\u6570\u6267\u884C\u5230\u6EE1\u8DB3\u6761\u4EF6\u4E3A\u6B62\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">condition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">inc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> until <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">until</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> inc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">until</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 101</span>

<span class="token function-variable function">condition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">;</span>
until <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">until</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> inc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">until</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E00\u6BB5\u7684\u6761\u4EF6\u662F\u6267\u884C\u5230 <code>x</code> \u5927\u4E8E 100 \u4E3A\u6B62\uFF0C\u6240\u4EE5 <code>x</code> \u521D\u503C\u4E3A 0 \u65F6\uFF0C\u4F1A\u4E00\u76F4\u6267\u884C\u5230 101\u3002\u7B2C\u4E8C\u6BB5\u7684\u6761\u4EF6\u662F\u6267\u884C\u5230\u7B49\u4E8E 5 \u4E3A\u6B62\uFF0C\u6240\u4EE5 <code>x</code> \u6700\u540E\u7684\u503C\u662F 5\u3002</p><p>\u6267\u884C\u8FB9\u754C\u7684\u5B9E\u73B0\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">until</span> <span class="token operator">=</span>
  <span class="token punctuation">(</span><span class="token parameter">condition<span class="token punctuation">,</span> f</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">condition</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">?</span> r <span class="token operator">:</span> f<span class="token punctuation">.</span><span class="token function">until</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684\u5173\u952E\u5C31\u662F\uFF0C\u5982\u679C\u6EE1\u8DB3\u6761\u4EF6\u5C31\u8FD4\u56DE\u7ED3\u679C\uFF0C\u5426\u5219\u4E0D\u65AD\u9012\u5F52\u6267\u884C\u3002</p><h2 id="\u961F\u5217\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u961F\u5217\u64CD\u4F5C" aria-hidden="true">#</a> \u961F\u5217\u64CD\u4F5C</h2><p>\u961F\u5217(list)\u64CD\u4F5C\u5305\u62EC\u4EE5\u4E0B\u51E0\u79CD\u3002</p><ul><li><code>head</code>: \u53D6\u51FA\u961F\u5217\u7684\u7B2C\u4E00\u4E2A\u975E\u7A7A\u6210\u5458\u3002</li><li><code>last</code>: \u53D6\u51FA\u6709\u9650\u961F\u5217\u7684\u6700\u540E\u4E00\u4E2A\u975E\u7A7A\u6210\u5458\u3002</li><li><code>tail</code>: \u53D6\u51FA\u9664\u4E86\u201C\u961F\u5217\u5934\u201D\u4EE5\u5916\u7684\u5176\u4ED6\u975E\u7A7A\u6210\u5458\u3002</li><li><code>init</code>: \u53D6\u51FA\u9664\u4E86\u201C\u961F\u5217\u5C3E\u201D\u4EE5\u5916\u7684\u5176\u4ED6\u975E\u7A7A\u6210\u5458\u3002</li></ul><p>\u4E0B\u9762\u662F\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>f<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
f<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
f<span class="token punctuation">.</span><span class="token function">tail</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [27, 3, 1]</span>
f<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [5, 27, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E9B\u65B9\u6CD5\u7684\u5B9E\u73B0\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">head</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> xs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">last</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> xs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">tail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>xs<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> xs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5408\u5E76\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u64CD\u4F5C" aria-hidden="true">#</a> \u5408\u5E76\u64CD\u4F5C</h2><p>\u5408\u5E76\u64CD\u4F5C\u5206\u4E3A <code>concat</code> \u548C <code>concatMap</code> \u4E24\u79CD\u3002\u524D\u8005\u5C31\u662F\u5C06\u591A\u4E2A\u6570\u7EC4\u5408\u6210\u4E00\u4E2A\uFF0C\u540E\u8005\u5219\u662F\u5148\u5904\u7406\u4E00\u4E0B\u53C2\u6570\uFF0C\u7136\u540E\u518D\u5C06\u5904\u7406\u7ED3\u679C\u5408\u6210\u4E00\u4E2A\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>f<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [5, 27, 3]</span>
f<span class="token punctuation">.</span><span class="token function">concatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;hi &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;hi 1&#39;, &#39;hi 2&#39;, &#39;hi 3&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u79CD\u65B9\u6CD5\u7684\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">concat</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> xs<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
f<span class="token punctuation">.</span><span class="token function-variable function">concatMap</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">f<span class="token punctuation">,</span> <span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>xs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u914D\u5BF9\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u914D\u5BF9\u64CD\u4F5C" aria-hidden="true">#</a> \u914D\u5BF9\u64CD\u4F5C</h2><p>\u914D\u5BF9\u64CD\u4F5C\u5206\u4E3A <code>zip</code> \u548C <code>zipWith</code> \u4E24\u79CD\u65B9\u6CD5\u3002<code>zip</code> \u64CD\u4F5C\u5C06\u4E24\u4E2A\u961F\u5217\u7684\u6210\u5458\uFF0C\u4E00\u4E00\u914D\u5BF9\uFF0C\u5408\u6210\u4E00\u4E2A\u65B0\u7684\u961F\u5217\u3002\u5982\u679C\u4E24\u4E2A\u961F\u5217\u4E0D\u7B49\u957F\uFF0C\u8F83\u957F\u7684\u90A3\u4E2A\u961F\u5217\u591A\u51FA\u6765\u7684\u6210\u5458\uFF0C\u4F1A\u88AB\u5FFD\u7565\u3002<code>zipWith</code> \u64CD\u4F5C\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u7136\u540E\u4F1A\u5C06\u540E\u9762\u7684\u961F\u5217\u6210\u5458\u4E00\u4E00\u914D\u5BF9\uFF0C\u8F93\u5165\u8BE5\u51FD\u6570\uFF0C\u8FD4\u56DE\u503C\u5C31\u7EC4\u6210\u4E00\u4E2A\u65B0\u7684\u961F\u5217\u3002</p><p>\u4E0B\u9762\u662F\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

f<span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [[0, 3], [1, 4], [2, 5]]</span>
f<span class="token punctuation">.</span><span class="token function">zipWith</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [9, 12, 15]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>zipWith</code> \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u6C42\u548C\u51FD\u6570\uFF0C\u5B83\u5C06\u540E\u9762\u4E09\u4E2A\u961F\u5217\u7684\u6210\u5458\uFF0C\u4E00\u4E00\u914D\u5BF9\u8FDB\u884C\u76F8\u52A0\u3002</p><p>\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u7684\u5B9E\u73B0\u5982\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

f<span class="token punctuation">.</span><span class="token function-variable function">zip</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> nple <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>
    <span class="token keyword">null</span><span class="token punctuation">,</span>
    xs<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nple<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    r<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nple<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nple <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> r<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

f<span class="token punctuation">.</span><span class="token function-variable function">zipWith</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">op<span class="token punctuation">,</span> <span class="token operator">...</span>xs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> f<span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> xs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),e=[o];function c(u,l){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","fp.html.vue"]]);export{r as default};
