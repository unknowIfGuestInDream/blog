import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.8754ca23.js";const t={},e=p(`<h2 id="\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u8868\u793A\u6CD5" aria-hidden="true">#</a> \u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u8868\u793A\u6CD5</h2><p>ES6 \u63D0\u4F9B\u4E86\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u6570\u503C\u7684\u65B0\u7684\u5199\u6CD5\uFF0C\u5206\u522B\u7528\u524D\u7F00 <code>0b</code> (\u6216 <code>0B</code>) \u548C <code>0o</code> (\u6216 <code>0O</code> )\u8868\u793A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0b111110111</span> <span class="token operator">===</span> <span class="token number">503</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token number">0o767</span> <span class="token operator">===</span> <span class="token number">503</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE ES5 \u5F00\u59CB\uFF0C\u5728\u4E25\u683C\u6A21\u5F0F\u4E4B\u4E2D\uFF0C\u516B\u8FDB\u5236\u5C31\u4E0D\u518D\u5141\u8BB8\u4F7F\u7528\u524D\u7F00 <code>0</code> \u8868\u793A\uFF0CES6 \u8FDB\u4E00\u6B65\u660E\u786E\uFF0C\u8981\u4F7F\u7528\u524D\u7F00 <code>0o</code> \u8868\u793A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u975E\u4E25\u683C\u6A21\u5F0F</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0o11</span> <span class="token operator">===</span> <span class="token number">011</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>
  <span class="token comment">// true</span>

  <span class="token comment">// \u4E25\u683C\u6A21\u5F0F</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0o11</span> <span class="token operator">===</span> <span class="token number">011</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught SyntaxError: Octal literals are not allowed in strict mode.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8981\u5C06 <code>0b</code> \u548C <code>0o</code> \u524D\u7F00\u7684\u5B57\u7B26\u4E32\u6570\u503C\u8F6C\u4E3A\u5341\u8FDB\u5236\uFF0C\u8981\u4F7F\u7528 <code>Number</code> \u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;0b111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7</span>
<span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&quot;0o10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="number-isfinite-number-isnan" tabindex="-1"><a class="header-anchor" href="#number-isfinite-number-isnan" aria-hidden="true">#</a> Number.isFinite(), Number.isNaN()</h2><p>ES6 \u5728 <code>Number</code> \u5BF9\u8C61\u4E0A\uFF0C\u65B0\u63D0\u4F9B\u4E86 <code>Number.isFinite()</code> \u548C <code>Number.isNaN()</code> \u4E24\u4E2A\u65B9\u6CD5\u3002</p><p><code>Number.isFinite()</code> \u7528\u6765\u68C0\u67E5\u4E00\u4E2A\u6570\u503C\u662F\u5426\u4E3A\u6709\u9650\u7684(finite)\uFF0C\u5373\u4E0D\u662F <code>Infinity</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5982\u679C\u53C2\u6570\u7C7B\u578B\u4E0D\u662F\u6570\u503C\uFF0C<code>Number.isFinite</code> \u4E00\u5F8B\u8FD4\u56DE <code>false</code>\u3002</p><p><code>Number.isNaN()</code> \u7528\u6765\u68C0\u67E5\u4E00\u4E2A\u503C\u662F\u5426\u4E3A <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">/</span> <span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u7C7B\u578B\u4E0D\u662F <code>NaN</code>\uFF0C<code>Number.isNaN</code> \u4E00\u5F8B\u8FD4\u56DE <code>false</code>\u3002</p><p>\u5B83\u4EEC\u4E0E\u4F20\u7EDF\u7684\u5168\u5C40\u65B9\u6CD5 <code>isFinite()</code> \u548C <code>isNaN()</code> \u7684\u533A\u522B\u5728\u4E8E\uFF0C\u4F20\u7EDF\u65B9\u6CD5\u5148\u8C03\u7528 <code>Number()</code> \u5C06\u975E\u6570\u503C\u7684\u503C\u8F6C\u4E3A\u6570\u503C\uFF0C\u518D\u8FDB\u884C\u5224\u65AD\uFF0C\u800C\u8FD9\u4E24\u4E2A\u65B0\u65B9\u6CD5\u53EA\u5BF9\u6570\u503C\u6709\u6548\uFF0C<code>Number.isFinite()</code> \u5BF9\u4E8E\u975E\u6570\u503C\u4E00\u5F8B\u8FD4\u56DE <code>false</code>, <code>Number.isNaN()</code> \u53EA\u6709\u5BF9\u4E8E <code>NaN</code> \u624D\u8FD4\u56DE <code>true</code>\uFF0C\u975E <code>NaN</code> \u4E00\u5F8B\u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;NaN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;NaN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="number-parseint-number-parsefloat" tabindex="-1"><a class="header-anchor" href="#number-parseint-number-parsefloat" aria-hidden="true">#</a> Number.parseInt(), Number.parseFloat()</h2><p>ES6 \u5C06\u5168\u5C40\u65B9\u6CD5 <code>parseInt()</code> \u548C <code>parseFloat()</code>\uFF0C\u79FB\u690D\u5230 <code>Number</code> \u5BF9\u8C61\u4E0A\u9762\uFF0C\u884C\u4E3A\u5B8C\u5168\u4FDD\u6301\u4E0D\u53D8\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ES5 \u7684\u5199\u6CD5</span>
<span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;12.34&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
<span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;123.45#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123.45</span>

<span class="token comment">// ES6 \u7684\u5199\u6CD5</span>
Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;12.34&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12</span>
Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;123.45#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123.45</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u505A\u7684\u76EE\u7684\uFF0C\u662F\u9010\u6B65\u51CF\u5C11\u5168\u5C40\u6027\u65B9\u6CD5\uFF0C\u4F7F\u5F97\u8BED\u8A00\u9010\u6B65\u6A21\u5757\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span>parseInt <span class="token operator">===</span> parseInt<span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span>parseFloat <span class="token operator">===</span> parseFloat<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="number-isinteger" tabindex="-1"><a class="header-anchor" href="#number-isinteger" aria-hidden="true">#</a> Number.isInteger()</h2><p><code>Number.isInteger()</code> \u7528\u6765\u5224\u65AD\u4E00\u4E2A\u6570\u503C\u662F\u5426\u4E3A\u6574\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>JavaScript \u5185\u90E8\uFF0C\u6574\u6570\u548C\u6D6E\u70B9\u6570\u91C7\u7528\u7684\u662F\u540C\u6837\u7684\u50A8\u5B58\u65B9\u6CD5\uFF0C\u6240\u4EE5 <code>25</code> \u548C <code>25.0</code> \u88AB\u89C6\u4E3A\u540C\u4E00\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u6570\u503C\uFF0C<code>Number.isInteger</code> \u8FD4\u56DE <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u7531\u4E8E JavaScript \u91C7\u7528 IEEE 754 \u6807\u51C6\uFF0C\u6570\u503C\u5B58\u50A8\u4E3A 64 \u4F4D\u53CC\u7CBE\u5EA6\u683C\u5F0F\uFF0C\u6570\u503C\u7CBE\u5EA6\u6700\u591A\u53EF\u4EE5\u8FBE\u5230 53 \u4E2A\u4E8C\u8FDB\u5236\u4F4D(1 \u4E2A\u9690\u85CF\u4F4D\u4E0E 52 \u4E2A\u6709\u6548\u4F4D)\u3002\u5982\u679C\u6570\u503C\u7684\u7CBE\u5EA6\u8D85\u8FC7\u8FD9\u4E2A\u9650\u5EA6\uFF0C\u7B2C 54 \u4F4D\u53CA\u540E\u9762\u7684\u4F4D\u5C31\u4F1A\u88AB\u4E22\u5F03\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C<code>Number.isInteger</code> \u53EF\u80FD\u4F1A\u8BEF\u5224\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">3.0000000000000002</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>Number.isInteger</code> \u7684\u53C2\u6570\u660E\u660E\u4E0D\u662F\u6574\u6570\uFF0C\u4F46\u662F\u4F1A\u8FD4\u56DE <code>true</code>\u3002\u539F\u56E0\u5C31\u662F\u8FD9\u4E2A\u5C0F\u6570\u7684\u7CBE\u5EA6\u8FBE\u5230\u4E86\u5C0F\u6570\u70B9\u540E 16 \u4E2A\u5341\u8FDB\u5236\u4F4D\uFF0C\u8F6C\u6210\u4E8C\u8FDB\u5236\u4F4D\u8D85\u8FC7\u4E86 53 \u4E2A\u4E8C\u8FDB\u5236\u4F4D\uFF0C\u5BFC\u81F4\u6700\u540E\u7684\u90A3\u4E2A <code>2</code> \u88AB\u4E22\u5F03\u4E86\u3002</p><p>\u7C7B\u4F3C\u7684\u60C5\u51B5\u8FD8\u6709\uFF0C\u5982\u679C\u4E00\u4E2A\u6570\u503C\u7684\u7EDD\u5BF9\u503C\u5C0F\u4E8E <code>Number.MIN_VALUE</code>(5E-324)\uFF0C\u5373\u5C0F\u4E8E JavaScript \u80FD\u591F\u5206\u8FA8\u7684\u6700\u5C0F\u503C\uFF0C\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A 0\u3002\u8FD9\u65F6\uFF0C<code>Number.isInteger</code> \u4E5F\u4F1A\u8BEF\u5224\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">5e-324</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">5e-325</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>5E-325</code> \u7531\u4E8E\u503C\u592A\u5C0F\uFF0C\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A 0\uFF0C\u56E0\u6B64\u8FD4\u56DE <code>true</code>\u3002</p><p>\u603B\u4E4B\uFF0C\u5982\u679C\u5BF9\u6570\u636E\u7CBE\u5EA6\u7684\u8981\u6C42\u8F83\u9AD8\uFF0C\u4E0D\u5EFA\u8BAE\u4F7F\u7528 <code>Number.isInteger()</code> \u5224\u65AD\u4E00\u4E2A\u6570\u503C\u662F\u5426\u4E3A\u6574\u6570\u3002</p><h2 id="number-epsilon" tabindex="-1"><a class="header-anchor" href="#number-epsilon" aria-hidden="true">#</a> Number.EPSILON</h2><p>ES6 \u5728 <code>Number</code> \u5BF9\u8C61\u4E0A\u9762\uFF0C\u65B0\u589E\u4E00\u4E2A\u6781\u5C0F\u7684\u5E38\u91CF <code>Number.EPSILON</code>\u3002\u6839\u636E\u89C4\u683C\uFF0C\u5B83\u8868\u793A 1 \u4E0E\u5927\u4E8E 1 \u7684\u6700\u5C0F\u6D6E\u70B9\u6570\u4E4B\u95F4\u7684\u5DEE\u3002</p><p>\u5BF9\u4E8E 64 \u4F4D\u6D6E\u70B9\u6570\u6765\u8BF4\uFF0C\u5927\u4E8E 1 \u7684\u6700\u5C0F\u6D6E\u70B9\u6570\u76F8\u5F53\u4E8E\u4E8C\u8FDB\u5236\u7684 <code>1.00..001</code>\uFF0C\u5C0F\u6570\u70B9\u540E\u9762\u6709\u8FDE\u7EED 51 \u4E2A\u96F6\u3002\u8FD9\u4E2A\u503C\u51CF\u53BB 1 \u4E4B\u540E\uFF0C\u5C31\u7B49\u4E8E 2 \u7684 -52 \u6B21\u65B9\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span> <span class="token operator">===</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span><span class="token punctuation">;</span>
<span class="token comment">// 2.220446049250313e-16</span>
Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;0.00000000000000022204&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Number.EPSILON</code> \u5B9E\u9645\u4E0A\u662F JavaScript \u80FD\u591F\u8868\u793A\u7684\u6700\u5C0F\u7CBE\u5EA6\u3002\u8BEF\u5DEE\u5982\u679C\u5C0F\u4E8E\u8FD9\u4E2A\u503C\uFF0C\u5C31\u53EF\u4EE5\u8BA4\u4E3A\u5DF2\u7ECF\u6CA1\u6709\u610F\u4E49\u4E86\uFF0C\u5373\u4E0D\u5B58\u5728\u8BEF\u5DEE\u4E86\u3002</p><p>\u5F15\u5165\u4E00\u4E2A\u8FD9\u4E48\u5C0F\u7684\u91CF\u7684\u76EE\u7684\uFF0C\u5728\u4E8E\u4E3A\u6D6E\u70B9\u6570\u8BA1\u7B97\uFF0C\u8BBE\u7F6E\u4E00\u4E2A\u8BEF\u5DEE\u8303\u56F4\u3002\u6211\u4EEC\u77E5\u9053\u6D6E\u70B9\u6570\u8BA1\u7B97\u662F\u4E0D\u7CBE\u786E\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">;</span>
<span class="token comment">// 0.30000000000000004</span>

<span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">-</span> <span class="token number">0.3</span><span class="token punctuation">;</span>
<span class="token comment">// 5.551115123125783e-17</span>

<span class="token punctuation">(</span><span class="token number">5.551115123125783e-17</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;0.00000000000000005551&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u89E3\u91CA\u4E86\uFF0C\u4E3A\u4EC0\u4E48\u6BD4\u8F83 <code>0.1 + 0.2</code> \u4E0E <code>0.3</code> \u5F97\u5230\u7684\u7ED3\u679C\u662F <code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">===</span> <span class="token number">0.3</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Number.EPSILON</code> \u53EF\u4EE5\u7528\u6765\u8BBE\u7F6E\u201C\u80FD\u591F\u63A5\u53D7\u7684\u8BEF\u5DEE\u8303\u56F4\u201D\u3002\u6BD4\u5982\uFF0C\u8BEF\u5DEE\u8303\u56F4\u8BBE\u4E3A 2<sup>-50</sup> (\u5373 <code>Number.EPSILON * Math.pow(2, 2)</code>)\uFF0C\u5373\u5982\u679C\u4E24\u4E2A\u6D6E\u70B9\u6570\u7684\u5DEE\u5C0F\u4E8E\u8FD9\u4E2A\u503C\uFF0C\u6211\u4EEC\u5C31\u8BA4\u4E3A\u8FD9\u4E24\u4E2A\u6D6E\u70B9\u6570\u76F8\u7B49\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">5.551115123125783e-17</span> <span class="token operator">&lt;</span> Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\uFF0C<code>Number.EPSILON</code> \u7684\u5B9E\u8D28\u662F\u4E00\u4E2A\u53EF\u4EE5\u63A5\u53D7\u7684\u6700\u5C0F\u8BEF\u5DEE\u8303\u56F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">withinErrorMargin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>left <span class="token operator">-</span> right<span class="token punctuation">)</span> <span class="token operator">&lt;</span> Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">===</span> <span class="token number">0.3</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">withinErrorMargin</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token number">1.1</span> <span class="token operator">+</span> <span class="token number">1.3</span> <span class="token operator">===</span> <span class="token number">2.4</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">withinErrorMargin</span><span class="token punctuation">(</span><span class="token number">1.1</span> <span class="token operator">+</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E3A\u6D6E\u70B9\u6570\u8FD0\u7B97\uFF0C\u90E8\u7F72\u4E86\u4E00\u4E2A\u8BEF\u5DEE\u68C0\u67E5\u51FD\u6570\u3002</p><h2 id="\u5B89\u5168\u6574\u6570\u548C-number-issafeinteger" tabindex="-1"><a class="header-anchor" href="#\u5B89\u5168\u6574\u6570\u548C-number-issafeinteger" aria-hidden="true">#</a> \u5B89\u5168\u6574\u6570\u548C Number.isSafeInteger()</h2><p>JavaScript \u80FD\u591F\u51C6\u786E\u8868\u793A\u7684\u6574\u6570\u8303\u56F4\u5728 <code>-2^53</code> \u5230 <code>2^53</code> \u4E4B\u95F4(\u4E0D\u542B\u4E24\u4E2A\u7AEF\u70B9)\uFF0C\u8D85\u8FC7\u8FD9\u4E2A\u8303\u56F4\uFF0C\u65E0\u6CD5\u7CBE\u786E\u8868\u793A\u8FD9\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>

<span class="token number">9007199254740992</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>
<span class="token number">9007199254740993</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740992</span>

Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">===</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u8D85\u51FA 2 \u7684 53 \u6B21\u65B9\u4E4B\u540E\uFF0C\u4E00\u4E2A\u6570\u5C31\u4E0D\u7CBE\u786E\u4E86\u3002</p><p>ES6 \u5F15\u5165\u4E86 <code>Number.MAX_SAFE_INTEGER</code> \u548C <code>Number.MIN_SAFE_INTEGER</code> \u8FD9\u4E24\u4E2A\u5E38\u91CF\uFF0C\u7528\u6765\u8868\u793A\u8FD9\u4E2A\u8303\u56F4\u7684\u4E0A\u4E0B\u9650\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span> <span class="token operator">===</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span> <span class="token operator">===</span> <span class="token number">9007199254740991</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span> <span class="token operator">===</span> <span class="token operator">-</span>Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">9007199254740991</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230 JavaScript \u80FD\u591F\u7CBE\u786E\u8868\u793A\u7684\u6781\u9650\u3002</p><p><code>Number.isSafeInteger()</code> \u5219\u662F\u7528\u6765\u5224\u65AD\u4E00\u4E2A\u6574\u6570\u662F\u5426\u843D\u5728\u8FD9\u4E2A\u8303\u56F4\u4E4B\u5185\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">9007199254740990</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">9007199254740992</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9E\u73B0\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u8DDF\u5B89\u5168\u6574\u6570\u7684\u4E24\u4E2A\u8FB9\u754C\u503C\u6BD4\u8F83\u4E00\u4E0B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function-variable function">isSafeInteger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">typeof</span> n <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span> <span class="token operator">&amp;&amp;</span>
  Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">===</span> n <span class="token operator">&amp;&amp;</span>
  Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span> <span class="token operator">&lt;=</span> n <span class="token operator">&amp;&amp;</span>
  n <span class="token operator">&lt;=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u4F7F\u7528\u8FD9\u4E2A\u51FD\u6570\u65F6\uFF0C\u9700\u8981\u6CE8\u610F\u3002\u9A8C\u8BC1\u8FD0\u7B97\u7ED3\u679C\u662F\u5426\u843D\u5728\u5B89\u5168\u6574\u6570\u7684\u8303\u56F4\u5185\uFF0C\u4E0D\u8981\u53EA\u9A8C\u8BC1\u8FD0\u7B97\u7ED3\u679C\uFF0C\u800C\u8981\u540C\u65F6\u9A8C\u8BC1\u53C2\u4E0E\u8FD0\u7B97\u7684\u6BCF\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">9007199254740993</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">990</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span><span class="token number">9007199254740993</span> <span class="token operator">-</span> <span class="token number">990</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token number">9007199254740993</span> <span class="token operator">-</span> <span class="token number">990</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD4\u56DE\u7ED3\u679C 9007199254740002</span>
<span class="token comment">// \u6B63\u786E\u7B54\u6848\u5E94\u8BE5\u662F 9007199254740003</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>9007199254740993</code> \u4E0D\u662F\u4E00\u4E2A\u5B89\u5168\u6574\u6570\uFF0C\u4F46\u662F <code>Number.isSafeInteger</code> \u4F1A\u8FD4\u56DE\u7ED3\u679C\uFF0C\u663E\u793A\u8BA1\u7B97\u7ED3\u679C\u662F\u5B89\u5168\u7684\u3002\u8FD9\u662F\u56E0\u4E3A\uFF0C\u8FD9\u4E2A\u6570\u8D85\u51FA\u4E86\u7CBE\u5EA6\u8303\u56F4\uFF0C\u5BFC\u81F4\u5728\u8BA1\u7B97\u673A\u5185\u90E8\uFF0C\u4EE5 <code>9007199254740992</code> \u7684\u5F62\u5F0F\u50A8\u5B58\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">9007199254740993</span> <span class="token operator">===</span> <span class="token number">9007199254740992</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u5982\u679C\u53EA\u9A8C\u8BC1\u8FD0\u7B97\u7ED3\u679C\u662F\u5426\u4E3A\u5B89\u5168\u6574\u6570\uFF0C\u5F88\u53EF\u80FD\u5F97\u5230\u9519\u8BEF\u7ED3\u679C\u3002\u4E0B\u9762\u7684\u51FD\u6570\u53EF\u4EE5\u540C\u65F6\u9A8C\u8BC1\u4E24\u4E2A\u8FD0\u7B97\u6570\u548C\u8FD0\u7B97\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">trusty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    Number<span class="token punctuation">.</span><span class="token function">isSafeInteger</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&quot;Operation cannot be trusted!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">trusty</span><span class="token punctuation">(</span><span class="token number">9007199254740993</span><span class="token punctuation">,</span> <span class="token number">990</span><span class="token punctuation">,</span> <span class="token number">9007199254740993</span> <span class="token operator">-</span> <span class="token number">990</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// RangeError: Operation cannot be trusted!</span>

<span class="token function">trusty</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="math-\u5BF9\u8C61\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#math-\u5BF9\u8C61\u7684\u6269\u5C55" aria-hidden="true">#</a> Math \u5BF9\u8C61\u7684\u6269\u5C55</h2><p>ES6 \u5728 Math \u5BF9\u8C61\u4E0A\u65B0\u589E\u4E86 17 \u4E2A\u4E0E\u6570\u5B66\u76F8\u5173\u7684\u65B9\u6CD5\u3002\u6240\u6709\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u662F\u9759\u6001\u65B9\u6CD5\uFF0C\u53EA\u80FD\u5728 Math \u5BF9\u8C61\u4E0A\u8C03\u7528\u3002</p><h3 id="math-trunc" tabindex="-1"><a class="header-anchor" href="#math-trunc" aria-hidden="true">#</a> Math.trunc()</h3><p><code>Math.trunc</code> \u65B9\u6CD5\u7528\u4E8E\u53BB\u9664\u4E00\u4E2A\u6570\u7684\u5C0F\u6570\u90E8\u5206\uFF0C\u8FD4\u56DE\u6574\u6570\u90E8\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">4.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">4.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -4</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u975E\u6570\u503C\uFF0C<code>Math.trunc</code> \u5185\u90E8\u4F7F\u7528 <code>Number</code> \u65B9\u6CD5\u5C06\u5176\u5148\u8F6C\u4E3A\u6570\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token string">&quot;123.456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 123</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u7A7A\u503C\u548C\u65E0\u6CD5\u622A\u53D6\u6574\u6570\u7684\u503C\uFF0C\u8FD4\u56DE <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>trunc <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>trunc <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="math-sign" tabindex="-1"><a class="header-anchor" href="#math-sign" aria-hidden="true">#</a> Math.sign()</h3><p><code>Math.sign</code> \u65B9\u6CD5\u7528\u6765\u5224\u65AD\u4E00\u4E2A\u6570\u5230\u5E95\u662F\u6B63\u6570\u3001\u8D1F\u6570\u3001\u8FD8\u662F\u96F6\u3002\u5BF9\u4E8E\u975E\u6570\u503C\uFF0C\u4F1A\u5148\u5C06\u5176\u8F6C\u6362\u4E3A\u6570\u503C\u3002</p><p>\u5B83\u4F1A\u8FD4\u56DE\u4E94\u79CD\u503C\u3002</p><ul><li>\u53C2\u6570\u4E3A\u6B63\u6570\uFF0C\u8FD4\u56DE <code>+1</code>\uFF1B</li><li>\u53C2\u6570\u4E3A\u8D1F\u6570\uFF0C\u8FD4\u56DE <code>-1</code>\uFF1B</li><li>\u53C2\u6570\u4E3A 0\uFF0C\u8FD4\u56DE <code>0</code>\uFF1B</li><li>\u53C2\u6570\u4E3A-0\uFF0C\u8FD4\u56DE <code>-0</code>;</li><li>\u5176\u4ED6\u503C\uFF0C\u8FD4\u56DE <code>NaN</code>\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +1</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +0</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u662F\u975E\u6570\u503C\uFF0C\u4F1A\u81EA\u52A8\u8F6C\u4E3A\u6570\u503C\u3002\u5BF9\u4E8E\u90A3\u4E9B\u65E0\u6CD5\u8F6C\u4E3A\u6570\u503C\u7684\u503C\uFF0C\u4F1A\u8FD4\u56DE <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +1</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// +1</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>sign <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>sign <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token operator">+</span>x<span class="token punctuation">;</span> <span class="token comment">// convert to a number</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="math-cbrt" tabindex="-1"><a class="header-anchor" href="#math-cbrt" aria-hidden="true">#</a> Math.cbrt()</h3><p><code>Math.cbrt</code> \u65B9\u6CD5\u7528\u4E8E\u8BA1\u7B97\u4E00\u4E2A\u6570\u7684\u7ACB\u65B9\u6839\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.2599210498948734</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u975E\u6570\u503C\uFF0C<code>Math.cbrt</code> \u65B9\u6CD5\u5185\u90E8\u4E5F\u662F\u5148\u4F7F\u7528 <code>Number</code> \u65B9\u6CD5\u5C06\u5176\u8F6C\u4E3A\u6570\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token string">&quot;8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
Math<span class="token punctuation">.</span><span class="token function">cbrt</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>cbrt <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>cbrt <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span>y <span class="token operator">:</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="math-clz32" tabindex="-1"><a class="header-anchor" href="#math-clz32" aria-hidden="true">#</a> Math.clz32()</h3><p>JavaScript \u7684\u6574\u6570\u4F7F\u7528 32 \u4F4D\u4E8C\u8FDB\u5236\u5F62\u5F0F\u8868\u793A\uFF0C<code>Math.clz32</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7684 32 \u4F4D\u65E0\u7B26\u53F7\u6574\u6570\u5F62\u5F0F\u6709\u591A\u5C11\u4E2A\u524D\u5BFC 0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 31</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 22</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">0b01000000000000000000000000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">0b00100000000000000000000000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C0 \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5168\u4E3A 0\uFF0C\u6240\u4EE5\u6709 32 \u4E2A\u524D\u5BFC 0\uFF1B1 \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u662F <code>0b1</code>\uFF0C\u53EA\u5360 1 \u4F4D\uFF0C\u6240\u4EE5 32 \u4F4D\u4E4B\u4E2D\u6709 31 \u4E2A\u524D\u5BFC 0\uFF1B1000 \u7684\u4E8C\u8FDB\u5236\u5F62\u5F0F\u662F <code>0b1111101000</code>\uFF0C\u4E00\u5171\u6709 10 \u4F4D\uFF0C\u6240\u4EE5 32 \u4F4D\u4E4B\u4E2D\u6709 22 \u4E2A\u524D\u5BFC 0\u3002</p><p><code>clz32</code> \u8FD9\u4E2A\u51FD\u6570\u540D\u5C31\u6765\u81EA\u201Ccount leading zero bits in 32-bit binary representation of a number\u201D(\u8BA1\u7B97\u4E00\u4E2A\u6570\u7684 32 \u4F4D\u4E8C\u8FDB\u5236\u5F62\u5F0F\u7684\u524D\u5BFC 0 \u7684\u4E2A\u6570)\u7684\u7F29\u5199\u3002</p><p>\u5DE6\u79FB\u8FD0\u7B97\u7B26(<code>&lt;&lt;</code>)\u4E0E <code>Math.clz32</code> \u65B9\u6CD5\u76F4\u63A5\u76F8\u5173\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 31</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 29</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u5C0F\u6570\uFF0C<code>Math.clz32</code> \u65B9\u6CD5\u53EA\u8003\u8651\u6574\u6570\u90E8\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">3.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">3.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u7A7A\u503C\u6216\u5176\u4ED6\u7C7B\u578B\u7684\u503C\uFF0C<code>Math.clz32</code> \u65B9\u6CD5\u4F1A\u5C06\u5B83\u4EEC\u5148\u8F6C\u4E3A\u6570\u503C\uFF0C\u7136\u540E\u518D\u8BA1\u7B97\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 32</span>
Math<span class="token punctuation">.</span><span class="token function">clz32</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 31</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="math-imul" tabindex="-1"><a class="header-anchor" href="#math-imul" aria-hidden="true">#</a> Math.imul()</h3><p><code>Math.imul</code> \u65B9\u6CD5\u8FD4\u56DE\u4E24\u4E2A\u6570\u4EE5 32 \u4F4D\u5E26\u7B26\u53F7\u6574\u6570\u5F62\u5F0F\u76F8\u4E58\u7684\u7ED3\u679C\uFF0C\u8FD4\u56DE\u7684\u4E5F\u662F\u4E00\u4E2A 32 \u4F4D\u7684\u5E26\u7B26\u53F7\u6574\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -8</span>
Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53EA\u8003\u8651\u6700\u540E 32 \u4F4D\uFF0C\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C<code>Math.imul(a, b)</code> \u4E0E <code>a * b</code> \u7684\u7ED3\u679C\u662F\u76F8\u540C\u7684\uFF0C\u5373\u8BE5\u65B9\u6CD5\u7B49\u540C\u4E8E <code>(a * b)|0</code> \u7684\u6548\u679C(\u8D85\u8FC7 32 \u4F4D\u7684\u90E8\u5206\u6EA2\u51FA)\u3002\u4E4B\u6240\u4EE5\u9700\u8981\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u662F\u56E0\u4E3A JavaScript \u6709\u7CBE\u5EA6\u9650\u5236\uFF0C\u8D85\u8FC7 2 \u7684 53 \u6B21\u65B9\u7684\u503C\u65E0\u6CD5\u7CBE\u786E\u8868\u793A\u3002\u8FD9\u5C31\u662F\u8BF4\uFF0C\u5BF9\u4E8E\u90A3\u4E9B\u5F88\u5927\u7684\u6570\u7684\u4E58\u6CD5\uFF0C\u4F4E\u4F4D\u6570\u503C\u5F80\u5F80\u90FD\u662F\u4E0D\u7CBE\u786E\u7684\uFF0C<code>Math.imul</code> \u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE\u6B63\u786E\u7684\u4F4E\u4F4D\u6570\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">0x7fffffff</span> <span class="token operator">*</span> <span class="token number">0x7fffffff</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u8FD9\u4E2A\u4E58\u6CD5\u7B97\u5F0F\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E3A 0\u3002\u4F46\u662F\u7531\u4E8E\u8FD9\u4E24\u4E2A\u4E8C\u8FDB\u5236\u6570\u7684\u6700\u4F4E\u4F4D\u90FD\u662F 1\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u7ED3\u679C\u80AF\u5B9A\u662F\u4E0D\u6B63\u786E\u7684\uFF0C\u56E0\u4E3A\u6839\u636E\u4E8C\u8FDB\u5236\u4E58\u6CD5\uFF0C\u8BA1\u7B97\u7ED3\u679C\u7684\u4E8C\u8FDB\u5236\u6700\u4F4E\u4F4D\u5E94\u8BE5\u4E5F\u662F 1\u3002\u8FD9\u4E2A\u9519\u8BEF\u5C31\u662F\u56E0\u4E3A\u5B83\u4EEC\u7684\u4E58\u79EF\u8D85\u8FC7\u4E86 2 \u7684 53 \u6B21\u65B9\uFF0CJavaScript \u65E0\u6CD5\u4FDD\u5B58\u989D\u5916\u7684\u7CBE\u5EA6\uFF0C\u5C31\u628A\u4F4E\u4F4D\u7684\u503C\u90FD\u53D8\u6210\u4E86 0\u3002<code>Math.imul</code> \u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE\u6B63\u786E\u7684\u503C 1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">imul</span><span class="token punctuation">(</span><span class="token number">0x7fffffff</span><span class="token punctuation">,</span> <span class="token number">0x7fffffff</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="math-fround" tabindex="-1"><a class="header-anchor" href="#math-fround" aria-hidden="true">#</a> Math.fround()</h3><p><code>Math.fround</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7684 32 \u4F4D\u5355\u7CBE\u5EA6\u6D6E\u70B9\u6570\u5F62\u5F0F\u3002</p><p>\u5BF9\u4E8E 32 \u4F4D\u5355\u7CBE\u5EA6\u683C\u5F0F\u6765\u8BF4\uFF0C\u6570\u503C\u7CBE\u5EA6\u662F 24 \u4E2A\u4E8C\u8FDB\u5236\u4F4D(1 \u4F4D\u9690\u85CF\u4F4D\u4E0E 23 \u4F4D\u6709\u6548\u4F4D)\uFF0C\u6240\u4EE5\u5BF9\u4E8E -2<sup>24</sup> \u81F3 2<sup>24</sup> \u4E4B\u95F4\u7684\u6574\u6570(\u4E0D\u542B\u4E24\u4E2A\u7AEF\u70B9)\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E0E\u53C2\u6570\u672C\u8EAB\u4E00\u81F4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">24</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16777215</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53C2\u6570\u7684\u7EDD\u5BF9\u503C\u5927\u4E8E 2<sup>24</sup>\uFF0C\u8FD4\u56DE\u7684\u7ED3\u679C\u4FBF\u5F00\u59CB\u4E22\u5931\u7CBE\u5EA6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16777216</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">24</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16777216</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Math.fround</code> \u65B9\u6CD5\u7684\u4E3B\u8981\u4F5C\u7528\uFF0C\u662F\u5C06 64 \u4F4D\u53CC\u7CBE\u5EA6\u6D6E\u70B9\u6570\u8F6C\u4E3A 32 \u4F4D\u5355\u7CBE\u5EA6\u6D6E\u70B9\u6570\u3002\u5982\u679C\u5C0F\u6570\u7684\u7CBE\u5EA6\u8D85\u8FC7 24 \u4E2A\u4E8C\u8FDB\u5236\u4F4D\uFF0C\u8FD4\u56DE\u503C\u5C31\u4F1A\u4E0D\u540C\u4E8E\u539F\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u503C\u4E0D\u53D8(\u5373\u4E0E 64 \u4F4D\u53CC\u7CBE\u5EA6\u503C\u4E00\u81F4)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u672A\u4E22\u5931\u6709\u6548\u7CBE\u5EA6</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">1.125</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.125</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">7.25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7.25</span>

<span class="token comment">// \u4E22\u5931\u7CBE\u5EA6</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.30000001192092896</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.699999988079071</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">1.0000000123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E <code>NaN</code> \u548C <code>Infinity</code>\uFF0C\u6B64\u65B9\u6CD5\u8FD4\u56DE\u539F\u503C\u3002\u5BF9\u4E8E\u5176\u5B83\u7C7B\u578B\u7684\u975E\u6570\u503C\uFF0C<code>Math.fround</code> \u65B9\u6CD5\u4F1A\u5148\u5C06\u5176\u8F6C\u4E3A\u6570\u503C\uFF0C\u518D\u8FD4\u56DE\u5355\u7CBE\u5EA6\u6D6E\u70B9\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Infinity</span>

Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">fround</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>fround <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>fround <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Float32Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="math-hypot" tabindex="-1"><a class="header-anchor" href="#math-hypot" aria-hidden="true">#</a> Math.hypot()</h3><p><code>Math.hypot</code> \u65B9\u6CD5\u8FD4\u56DE\u6240\u6709\u53C2\u6570\u7684\u5E73\u65B9\u548C\u7684\u5E73\u65B9\u6839\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7.0710678118654755</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7.0710678118654755</span>
Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C3<sup>2</sup> \u52A0\u4E0A 4<sup>2</sup>\uFF0C\u7B49\u4E8E 5<sup>2</sup>\u3002</p><p>\u5982\u679C\u53C2\u6570\u4E0D\u662F\u6570\u503C\uFF0C<code>Math.hypot</code> \u65B9\u6CD5\u4F1A\u5C06\u5176\u8F6C\u4E3A\u6570\u503C\u3002\u53EA\u8981\u6709\u4E00\u4E2A\u53C2\u6570\u65E0\u6CD5\u8F6C\u4E3A\u6570\u503C\uFF0C\u5C31\u4F1A\u8FD4\u56DE <code>NaN</code>\u3002</p><h3 id="\u5BF9\u6570\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u6570\u65B9\u6CD5" aria-hidden="true">#</a> \u5BF9\u6570\u65B9\u6CD5</h3><p>ES6 \u65B0\u589E\u4E86 4 \u4E2A\u5BF9\u6570\u76F8\u5173\u65B9\u6CD5\u3002</p><ol><li><p>Math.expm1()</p><p><code>Math.expm1(x)</code> \u8FD4\u56DE e<sup>x</sup> - 1\uFF0C\u5373 <code>Math.exp(x) - 1</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">expm1</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -0.6321205588285577</span>
Math<span class="token punctuation">.</span><span class="token function">expm1</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">expm1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.718281828459045</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>expm1 <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>expm1 <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">exp</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Math.log1p()</p><p><code>Math.log1p(x)</code> \u65B9\u6CD5\u8FD4\u56DE <code>1 + x</code> \u7684\u81EA\u7136\u5BF9\u6570\uFF0C\u5373 <code>Math.log(1 + x)</code>\u3002\u5982\u679C <code>x</code> \u5C0F\u4E8E-1\uFF0C\u8FD4\u56DE <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">log1p</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.6931471805599453</span>
Math<span class="token punctuation">.</span><span class="token function">log1p</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">log1p</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -Infinity</span>
Math<span class="token punctuation">.</span><span class="token function">log1p</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>log1p <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>log1p <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Math.log10()</p><p><code>Math.log10(x)</code> \u8FD4\u56DE\u4EE5 10 \u4E3A\u5E95\u7684 <code>x</code> \u7684\u5BF9\u6570\u3002\u5982\u679C <code>x</code> \u5C0F\u4E8E 0\uFF0C\u5219\u8FD4\u56DE <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.3010299956639812</span>
Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -Infinity</span>
Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>log10 <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>log10 <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token constant">LN10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Math.log2()</p><p><code>Math.log2(x)</code> \u8FD4\u56DE\u4EE5 2 \u4E3A\u5E95\u7684 <code>x</code> \u7684\u5BF9\u6570\u3002\u5982\u679C <code>x</code> \u5C0F\u4E8E 0\uFF0C\u5219\u8FD4\u56DE <code>NaN</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.584962500721156</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -Infinity</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
Math<span class="token punctuation">.</span><span class="token function">log2</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6CA1\u6709\u90E8\u7F72\u8FD9\u4E2A\u65B9\u6CD5\u7684\u73AF\u5883\uFF0C\u53EF\u4EE5\u7528\u4E0B\u9762\u7684\u4EE3\u7801\u6A21\u62DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span>log2 <span class="token operator">=</span>
  Math<span class="token punctuation">.</span>log2 <span class="token operator">||</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token constant">LN2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="\u53CC\u66F2\u51FD\u6570\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u53CC\u66F2\u51FD\u6570\u65B9\u6CD5" aria-hidden="true">#</a> \u53CC\u66F2\u51FD\u6570\u65B9\u6CD5</h3><p>ES6 \u65B0\u589E\u4E86 6 \u4E2A\u53CC\u66F2\u51FD\u6570\u65B9\u6CD5\u3002</p><ul><li><code>Math.sinh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CC\u66F2\u6B63\u5F26(hyperbolic sine)</li><li><code>Math.cosh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CC\u66F2\u4F59\u5F26(hyperbolic cosine)</li><li><code>Math.tanh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CC\u66F2\u6B63\u5207(hyperbolic tangent)</li><li><code>Math.asinh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CD\u53CC\u66F2\u6B63\u5F26(inverse hyperbolic sine)</li><li><code>Math.acosh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CD\u53CC\u66F2\u4F59\u5F26(inverse hyperbolic cosine)</li><li><code>Math.atanh(x)</code> \u8FD4\u56DE <code>x</code> \u7684\u53CD\u53CC\u66F2\u6B63\u5207(inverse hyperbolic tangent)</li></ul><h2 id="\u6307\u6570\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6307\u6570\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u6307\u6570\u8FD0\u7B97\u7B26</h2><p>ES2016 \u65B0\u589E\u4E86\u4E00\u4E2A\u6307\u6570\u8FD0\u7B97\u7B26 (<code>**</code>)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token number">2</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u8FD0\u7B97\u7B26\u7684\u4E00\u4E2A\u7279\u70B9\u662F\u53F3\u7ED3\u5408\uFF0C\u800C\u4E0D\u662F\u5E38\u89C1\u7684\u5DE6\u7ED3\u5408\u3002\u591A\u4E2A\u6307\u6570\u8FD0\u7B97\u7B26\u8FDE\u7528\u65F6\uFF0C\u662F\u4ECE\u6700\u53F3\u8FB9\u5F00\u59CB\u8BA1\u7B97\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u76F8\u5F53\u4E8E 2 ** (3 ** 2)</span>
<span class="token number">2</span> <span class="token operator">**</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 512</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u9996\u5148\u8BA1\u7B97\u7684\u662F\u7B2C\u4E8C\u4E2A\u6307\u6570\u8FD0\u7B97\u7B26\uFF0C\u800C\u4E0D\u662F\u7B2C\u4E00\u4E2A\u3002</p><p>\u6307\u6570\u8FD0\u7B97\u7B26\u53EF\u4EE5\u4E0E\u7B49\u53F7\u7ED3\u5408\uFF0C\u5F62\u6210\u4E00\u4E2A\u65B0\u7684\u8D4B\u503C\u8FD0\u7B97\u7B26 (<code>**=</code>)\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
a <span class="token operator">**=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E a = a * a;</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
b <span class="token operator">**=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E b = b * b * b;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0CV8 \u5F15\u64CE\u7684\u6307\u6570\u8FD0\u7B97\u7B26\u4E0E <code>Math.pow</code> \u7684\u5B9E\u73B0\u4E0D\u76F8\u540C\uFF0C\u5BF9\u4E8E\u7279\u522B\u5927\u7684\u8FD0\u7B97\u7ED3\u679C\uFF0C\u4E24\u8005\u4F1A\u6709\u7EC6\u5FAE\u7684\u5DEE\u5F02\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3.697296376497263e+197</span>

<span class="token number">99</span> <span class="token operator">**</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token comment">// 3.697296376497268e+197</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E24\u4E2A\u8FD0\u7B97\u7ED3\u679C\u7684\u6700\u540E\u4E00\u4F4D\u6709\u6548\u6570\u5B57\u662F\u6709\u5DEE\u5F02\u7684\u3002</p>`,146),c=[e];function o(u,l){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","number.html.vue"]]);export{k as default};
