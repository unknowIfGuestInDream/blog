import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as p,d as t,a as n,f as e}from"./app.c0414ddc.js";const o={},c=n("p",null,"Proxy \u7528\u4E8E\u4FEE\u6539\u67D0\u4E9B\u64CD\u4F5C\u7684\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u7B49\u540C\u4E8E\u5728\u8BED\u8A00\u5C42\u9762\u505A\u51FA\u4FEE\u6539\uFF0C\u6240\u4EE5\u5C5E\u4E8E\u4E00\u79CD\u201C\u5143\u7F16\u7A0B\u201D(meta programming)\uFF0C\u5373\u5BF9\u7F16\u7A0B\u8BED\u8A00\u8FDB\u884C\u7F16\u7A0B\u3002",-1),l=n("p",null,"Proxy \u53EF\u4EE5\u7406\u89E3\u6210\uFF0C\u5728\u76EE\u6807\u5BF9\u8C61\u4E4B\u524D\u67B6\u8BBE\u4E00\u5C42\u201C\u62E6\u622A\u201D\uFF0C\u5916\u754C\u5BF9\u8BE5\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u90FD\u5FC5\u987B\u5148\u901A\u8FC7\u8FD9\u5C42\u62E6\u622A\uFF0C\u56E0\u6B64\u63D0\u4F9B\u4E86\u4E00\u79CD\u673A\u5236\uFF0C\u53EF\u4EE5\u5BF9\u5916\u754C\u7684\u8BBF\u95EE\u8FDB\u884C\u8FC7\u6EE4\u548C\u6539\u5199\u3002Proxy \u8FD9\u4E2A\u8BCD\u7684\u539F\u610F\u662F\u4EE3\u7406\uFF0C\u7528\u5728\u8FD9\u91CC\u8868\u793A\u7531\u5B83\u6765\u201C\u4EE3\u7406\u201D\u67D0\u4E9B\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u8BD1\u4E3A\u201C\u4EE3\u7406\u5668\u201D\u3002",-1),i=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5BF9\u4E00\u4E2A\u7A7A\u5BF9\u8C61\u67B6\u8BBE\u4E86\u4E00\u5C42\u62E6\u622A\uFF0C\u91CD\u5B9A\u4E49\u4E86\u5C5E\u6027\u7684\u8BFB\u53D6(<code>get</code>)\u548C\u8BBE\u7F6E(<code>set</code>)\u884C\u4E3A\u3002\u8FD9\u91CC\u6682\u65F6\u5148\u4E0D\u89E3\u91CA\u5177\u4F53\u7684\u8BED\u6CD5\uFF0C\u53EA\u770B\u8FD0\u884C\u7ED3\u679C\u3002\u5BF9\u8BBE\u7F6E\u4E86\u62E6\u622A\u884C\u4E3A\u7684\u5BF9\u8C61 <code>obj</code>\uFF0C\u53BB\u8BFB\u5199\u5B83\u7684\u5C5E\u6027\uFF0C\u5C31\u4F1A\u5F97\u5230\u4E0B\u9762\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>obj<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//  setting count!</span>
<span class="token operator">++</span>obj<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
<span class="token comment">//  getting count!</span>
<span class="token comment">//  setting count!</span>
<span class="token comment">//  2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\uFF0CProxy \u5B9E\u9645\u4E0A\u91CD\u8F7D(overload)\u4E86\u70B9\u8FD0\u7B97\u7B26\uFF0C\u5373\u7528\u81EA\u5DF1\u7684\u5B9A\u4E49\u8986\u76D6\u4E86\u8BED\u8A00\u7684\u539F\u59CB\u5B9A\u4E49\u3002</p><p>ES6 \u539F\u751F\u63D0\u4F9B Proxy \u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 Proxy \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Proxy \u5BF9\u8C61\u7684\u6240\u6709\u7528\u6CD5\uFF0C\u90FD\u662F\u4E0A\u9762\u8FD9\u79CD\u5F62\u5F0F\uFF0C\u4E0D\u540C\u7684\u53EA\u662F <code>handler</code> \u53C2\u6570\u7684\u5199\u6CD5\u3002\u5176\u4E2D\uFF0C<code>new Proxy()</code> \u8868\u793A\u751F\u6210\u4E00\u4E2A <code>Proxy</code> \u5B9E\u4F8B\uFF0C<code>target</code> \u53C2\u6570\u8868\u793A\u6240\u8981\u62E6\u622A\u7684\u76EE\u6807\u5BF9\u8C61\uFF0C<code>handler</code> \u53C2\u6570\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7528\u6765\u5B9A\u5236\u62E6\u622A\u884C\u4E3A\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u62E6\u622A\u8BFB\u53D6\u5C5E\u6027\u884C\u4E3A\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">35</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>time<span class="token punctuation">;</span> <span class="token comment">// 35</span>
proxy<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// 35</span>
proxy<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token comment">// 35</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\uFF0C<code>Proxy</code> \u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u6240\u8981\u4EE3\u7406\u7684\u76EE\u6807\u5BF9\u8C61(\u4E0A\u4F8B\u662F\u4E00\u4E2A\u7A7A\u5BF9\u8C61)\uFF0C\u5373\u5982\u679C\u6CA1\u6709 <code>Proxy</code> \u7684\u4ECB\u5165\uFF0C\u64CD\u4F5C\u539F\u6765\u8981\u8BBF\u95EE\u7684\u5C31\u662F\u8FD9\u4E2A\u5BF9\u8C61\uFF1B\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u914D\u7F6E\u5BF9\u8C61\uFF0C\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u88AB\u4EE3\u7406\u7684\u64CD\u4F5C\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A\u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u5C06\u62E6\u622A\u5BF9\u5E94\u7684\u64CD\u4F5C\u3002\u6BD4\u5982\uFF0C\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u914D\u7F6E\u5BF9\u8C61\u6709\u4E00\u4E2A <code>get</code> \u65B9\u6CD5\uFF0C\u7528\u6765\u62E6\u622A\u5BF9\u76EE\u6807\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBF\u95EE\u8BF7\u6C42\u3002<code>get</code> \u65B9\u6CD5\u7684\u4E24\u4E2A\u53C2\u6570\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u548C\u6240\u8981\u8BBF\u95EE\u7684\u5C5E\u6027\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u7531\u4E8E\u62E6\u622A\u51FD\u6570\u603B\u662F\u8FD4\u56DE <code>35</code>\uFF0C\u6240\u4EE5\u8BBF\u95EE\u4EFB\u4F55\u5C5E\u6027\u90FD\u5F97\u5230 <code>35</code>\u3002</p><p>\u6CE8\u610F\uFF0C\u8981\u4F7F\u5F97 <code>Proxy</code> \u8D77\u4F5C\u7528\uFF0C\u5FC5\u987B\u9488\u5BF9 <code>Proxy</code> \u5B9E\u4F8B(\u4E0A\u4F8B\u662F <code>proxy</code> \u5BF9\u8C61)\u8FDB\u884C\u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F\u9488\u5BF9\u76EE\u6807\u5BF9\u8C61(\u4E0A\u4F8B\u662F\u7A7A\u5BF9\u8C61)\u8FDB\u884C\u64CD\u4F5C\u3002</p><p>\u5982\u679C <code>handler</code> \u6CA1\u6709\u8BBE\u7F6E\u4EFB\u4F55\u62E6\u622A\uFF0C\u90A3\u5C31\u7B49\u540C\u4E8E\u76F4\u63A5\u901A\u5411\u539F\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
target<span class="token punctuation">.</span>a<span class="token punctuation">;</span> <span class="token comment">// &quot;b&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>handler</code> \u662F\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u6CA1\u6709\u4EFB\u4F55\u62E6\u622A\u6548\u679C\uFF0C\u8BBF\u95EE <code>proxy</code> \u5C31\u7B49\u540C\u4E8E\u8BBF\u95EE <code>target</code>\u3002</p><p>\u4E00\u4E2A\u6280\u5DE7\u662F\u5C06 Proxy \u5BF9\u8C61\uFF0C\u8BBE\u7F6E\u5230 <code>object.proxy</code> \u5C5E\u6027\uFF0C\u4ECE\u800C\u53EF\u4EE5\u5728 <code>object</code> \u5BF9\u8C61\u4E0A\u8C03\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Proxy \u5B9E\u4F8B\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u5176\u4ED6\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">35</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>time<span class="token punctuation">;</span> <span class="token comment">// 35</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>proxy</code> \u5BF9\u8C61\u662F <code>obj</code> \u5BF9\u8C61\u7684\u539F\u578B\uFF0C<code>obj</code> \u5BF9\u8C61\u672C\u8EAB\u5E76\u6CA1\u6709 <code>time</code> \u5C5E\u6027\uFF0C\u6240\u4EE5\u6839\u636E\u539F\u578B\u94FE\uFF0C\u4F1A\u5728 <code>proxy</code> \u5BF9\u8C61\u4E0A\u8BFB\u53D6\u8BE5\u5C5E\u6027\uFF0C\u5BFC\u81F4\u88AB\u62E6\u622A\u3002</p><p>\u540C\u4E00\u4E2A\u62E6\u622A\u5668\u51FD\u6570\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u62E6\u622A\u591A\u4E2A\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&quot;prototype&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisBinding<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">construct</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> fproxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">new</span> <span class="token class-name">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: 2}</span>
fproxy<span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">// true</span>
fproxy<span class="token punctuation">.</span>foo <span class="token operator">===</span> <span class="token string">&quot;Hello, foo&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u53EF\u4EE5\u8BBE\u7F6E\u3001\u4F46\u6CA1\u6709\u8BBE\u7F6E\u62E6\u622A\u7684\u64CD\u4F5C\uFF0C\u5219\u76F4\u63A5\u843D\u5728\u76EE\u6807\u5BF9\u8C61\u4E0A\uFF0C\u6309\u7167\u539F\u5148\u7684\u65B9\u5F0F\u4EA7\u751F\u7ED3\u679C\u3002</p><p>\u4E0B\u9762\u662F Proxy \u652F\u6301\u7684\u62E6\u622A\u64CD\u4F5C\u4E00\u89C8\uFF0C\u4E00\u5171 13 \u79CD\u3002</p><ul><li><strong>get(target, propKey, receiver)</strong>: \u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6\uFF0C\u6BD4\u5982 <code>proxy.foo</code> \u548C <code>proxy[&#39;foo&#39;]</code>\u3002</li><li><strong>set(target, propKey, value, receiver)</strong>: \u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBE\u7F6E\uFF0C\u6BD4\u5982 <code>proxy.foo = v</code> \u6216 <code>proxy[&#39;foo&#39;] = v</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>has(target, propKey)</strong>: \u62E6\u622A <code>propKey in proxy</code> \u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>deleteProperty(target, propKey)</strong>: \u62E6\u622A <code>delete proxy[propKey]</code> \u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>ownKeys(target)</strong>: \u62E6\u622A <code>Object.getOwnPropertyNames(proxy)</code>\u3001<code>Object.getOwnPropertySymbols(proxy)</code>\u3001<code>Object.keys(proxy)</code>\u3001<code>for...in</code> \u5FAA\u73AF\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u6240\u6709\u81EA\u8EAB\u7684\u5C5E\u6027\u7684\u5C5E\u6027\u540D\uFF0C\u800C <code>Object.keys()</code> \u7684\u8FD4\u56DE\u7ED3\u679C\u4EC5\u5305\u62EC\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u904D\u5386\u5C5E\u6027\u3002</li><li><strong>getOwnPropertyDescriptor(target, propKey)</strong>: \u62E6\u622A <code>Object.getOwnPropertyDescriptor(proxy, propKey)</code>\uFF0C\u8FD4\u56DE\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\u3002</li><li><strong>defineProperty(target, propKey, propDesc)</strong>: \u62E6\u622A <code>Object.defineProperty(proxy, propKey, propDesc)</code>\u3001<code>Object.defineProperties(proxy, propDescs)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>preventExtensions(target)</strong>: \u62E6\u622A <code>Object.preventExtensions(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>getPrototypeOf(target)</strong>: \u62E6\u622A <code>Object.getPrototypeOf(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u3002</li><li><strong>isExtensible(target)</strong>: \u62E6\u622A <code>Object.isExtensible(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li><strong>setPrototypeOf(target, proto)</strong>: \u62E6\u622A <code>Object.setPrototypeOf(proxy, proto)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u662F\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD8\u6709\u4E24\u79CD\u989D\u5916\u64CD\u4F5C\u53EF\u4EE5\u62E6\u622A\u3002</li><li><strong>apply(target, object, args)</strong>: \u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 <code>proxy(...args)</code>\u3001<code>proxy.call(object, ...args)</code>\u3001<code>proxy.apply(...)</code>\u3002</li><li><strong>construct(target, args)</strong>: \u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 <code>new proxy(...args)</code>\u3002</li></ul><h2 id="proxy-\u5B9E\u4F8B\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#proxy-\u5B9E\u4F8B\u7684\u65B9\u6CD5" aria-hidden="true">#</a> Proxy \u5B9E\u4F8B\u7684\u65B9\u6CD5</h2><p>\u4E0B\u9762\u662F\u4E0A\u9762\u8FD9\u4E9B\u62E6\u622A\u65B9\u6CD5\u7684\u8BE6\u7EC6\u4ECB\u7ECD\u3002</p><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h3><p><code>get</code> \u65B9\u6CD5\u7528\u4E8E\u62E6\u622A\u67D0\u4E2A\u5C5E\u6027\u7684\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u548C proxy \u5B9E\u4F8B\u672C\u8EAB(\u4E25\u683C\u5730\u8BF4\uFF0C\u662F\u64CD\u4F5C\u884C\u4E3A\u6240\u9488\u5BF9\u7684\u5BF9\u8C61)\uFF0C\u5176\u4E2D\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009\u3002</p><p><code>get</code> \u65B9\u6CD5\u7684\u7528\u6CD5\uFF0C\u4E0A\u6587\u5DF2\u7ECF\u6709\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u62E6\u622A\u8BFB\u53D6\u64CD\u4F5C\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target<span class="token punctuation">[</span>property<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ReferenceError</span><span class="token punctuation">(</span><span class="token string">&#39;Property &quot;&#39;</span> <span class="token operator">+</span> property <span class="token operator">+</span> <span class="token string">&#39;&quot; does not exist.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &quot;\u5F20\u4E09&quot;</span>
proxy<span class="token punctuation">.</span>age<span class="token punctuation">;</span> <span class="token comment">// \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8868\u793A\uFF0C\u5982\u679C\u8BBF\u95EE\u76EE\u6807\u5BF9\u8C61\u4E0D\u5B58\u5728\u7684\u5C5E\u6027\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002\u5982\u679C\u6CA1\u6709\u8FD9\u4E2A\u62E6\u622A\u51FD\u6570\uFF0C\u8BBF\u95EE\u4E0D\u5B58\u5728\u7684\u5C5E\u6027\uFF0C\u53EA\u4F1A\u8FD4\u56DE <code>undefined</code>\u3002</p><p><code>get</code> \u65B9\u6CD5\u53EF\u4EE5\u7EE7\u627F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> proto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propertyKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;GET &quot;</span> <span class="token operator">+</span> propertyKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> target<span class="token punctuation">[</span>propertyKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// &quot;GET foo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u62E6\u622A\u64CD\u4F5C\u5B9A\u4E49\u5728 <code>Prototype</code> \u5BF9\u8C61\u4E0A\u9762\uFF0C\u6240\u4EE5\u5982\u679C\u8BFB\u53D6 <code>obj</code> \u5BF9\u8C61\u7EE7\u627F\u7684\u5C5E\u6027\u65F6\uFF0C\u62E6\u622A\u4F1A\u751F\u6548\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u4F7F\u7528 <code>get</code> \u62E6\u622A\uFF0C\u5B9E\u73B0\u6570\u7EC4\u8BFB\u53D6\u8D1F\u6570\u7684\u7D22\u5F15\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createArray</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>elements</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>propKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        propKey <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  target<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">createArray</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6570\u7EC4\u7684\u4F4D\u7F6E\u53C2\u6570\u662F <code>-1</code>\uFF0C\u5C31\u4F1A\u8F93\u51FA\u6570\u7EC4\u7684\u5012\u6570\u7B2C\u4E00\u4E2A\u6210\u5458\u3002</p><p>\u5229\u7528 Proxy\uFF0C\u53EF\u4EE5\u5C06\u8BFB\u53D6\u5C5E\u6027\u7684\u64CD\u4F5C(<code>get</code>)\uFF0C\u8F6C\u53D8\u4E3A\u6267\u884C\u67D0\u4E2A\u51FD\u6570\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5C5E\u6027\u7684\u94FE\u5F0F\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> pipe <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> funcStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> oproxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pipeObject<span class="token punctuation">,</span> fnName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>fnName <span class="token operator">===</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> funcStack<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          funcStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>window<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> oproxy<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> oproxy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">double</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">pow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> n<span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">reverseInt</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token function">pipe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>double<span class="token punctuation">.</span>pow<span class="token punctuation">.</span>reverseInt<span class="token punctuation">.</span>get<span class="token punctuation">;</span> <span class="token comment">// 63</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BBE\u7F6E Proxy \u4EE5\u540E\uFF0C\u8FBE\u5230\u4E86\u5C06\u51FD\u6570\u540D\u94FE\u5F0F\u4F7F\u7528\u7684\u6548\u679C\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5219\u662F\u5229\u7528 <code>get</code> \u62E6\u622A\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u751F\u6210\u5404\u79CD DOM \u8282\u70B9\u7684\u901A\u7528\u51FD\u6570 <code>dom</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>children</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> prop <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>attrs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> attrs<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> child <span class="token keyword">of</span> children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> child <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            child <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> el<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> el <span class="token operator">=</span> dom<span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Hello, my name is &quot;</span><span class="token punctuation">,</span>
  dom<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&quot;//example.com&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;Mark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">&quot;. I like:&quot;</span><span class="token punctuation">,</span>
  dom<span class="token punctuation">.</span><span class="token function">ul</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    dom<span class="token punctuation">.</span><span class="token function">li</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;The web&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    dom<span class="token punctuation">.</span><span class="token function">li</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;Food&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    dom<span class="token punctuation">.</span><span class="token function">li</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2026actually that&#39;s it&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A <code>get</code> \u65B9\u6CD5\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\u7684\u4F8B\u5B50\uFF0C\u5B83\u603B\u662F\u6307\u5411\u539F\u59CB\u7684\u8BFB\u64CD\u4F5C\u6240\u5728\u7684\u90A3\u4E2A\u5BF9\u8C61\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u5C31\u662F Proxy \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> receiver<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>getReceiver <span class="token operator">===</span> proxy<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>proxy</code> \u5BF9\u8C61\u7684 <code>getReceiver</code> \u5C5E\u6027\u662F\u7531 <code>proxy</code> \u5BF9\u8C61\u63D0\u4F9B\u7684\uFF0C\u6240\u4EE5 <code>receiver</code> \u6307\u5411 <code>proxy</code> \u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> receiver<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> d <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
d<span class="token punctuation">.</span>a <span class="token operator">===</span> d<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>d</code> \u5BF9\u8C61\u672C\u8EAB\u6CA1\u6709 <code>a</code> \u5C5E\u6027\uFF0C\u6240\u4EE5\u8BFB\u53D6 <code>d.a</code> \u7684\u65F6\u5019\uFF0C\u4F1A\u53BB <code>d</code> \u7684\u539F\u578B <code>proxy</code> \u5BF9\u8C61\u627E\u3002\u8FD9\u65F6\uFF0C<code>receiver</code> \u5C31\u6307\u5411 <code>d</code>\uFF0C\u4EE3\u8868\u539F\u59CB\u7684\u8BFB\u64CD\u4F5C\u6240\u5728\u7684\u90A3\u4E2A\u5BF9\u8C61\u3002</p><p>\u5982\u679C\u4E00\u4E2A\u5C5E\u6027\u4E0D\u53EF\u914D\u7F6E(configurable)\u4E14\u4E0D\u53EF\u5199(writable)\uFF0C\u5219 Proxy \u4E0D\u80FD\u4FEE\u6539\u8BE5\u5C5E\u6027\uFF0C\u5426\u5219\u901A\u8FC7 Proxy \u5BF9\u8C61\u8BBF\u95EE\u8BE5\u5C5E\u6027\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
      <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
<span class="token comment">// TypeError: Invariant check failed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set()</h3><p><code>set</code> \u65B9\u6CD5\u7528\u6765\u62E6\u622A\u67D0\u4E2A\u5C5E\u6027\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u3001\u5C5E\u6027\u503C\u548C Proxy \u5B9E\u4F8B\u672C\u8EAB\uFF0C\u5176\u4E2D\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009\u3002</p><p>\u5047\u5B9A <code>Person</code> \u5BF9\u8C61\u6709\u4E00\u4E2A <code>age</code> \u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u5E94\u8BE5\u662F\u4E00\u4E2A\u4E0D\u5927\u4E8E 200 \u7684\u6574\u6570\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528 <code>Proxy</code> \u4FDD\u8BC1 <code>age</code> \u7684\u5C5E\u6027\u503C\u7B26\u5408\u8981\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> validator <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;The age is not an integer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&quot;The age seems invalid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5BF9\u4E8E\u6EE1\u8DB3\u6761\u4EF6\u7684 age \u5C5E\u6027\u4EE5\u53CA\u5176\u4ED6\u5C5E\u6027\uFF0C\u76F4\u63A5\u4FDD\u5B58</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> validator<span class="token punctuation">)</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span>age<span class="token punctuation">;</span> <span class="token comment">// 100</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&quot;young&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7531\u4E8E\u8BBE\u7F6E\u4E86\u5B58\u503C\u51FD\u6570 <code>set</code>\uFF0C\u4EFB\u4F55\u4E0D\u7B26\u5408\u8981\u6C42\u7684 <code>age</code> \u5C5E\u6027\u8D4B\u503C\uFF0C\u90FD\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u8FD9\u662F\u6570\u636E\u9A8C\u8BC1\u7684\u4E00\u79CD\u5B9E\u73B0\u65B9\u6CD5\u3002\u5229\u7528 <code>set</code> \u65B9\u6CD5\uFF0C\u8FD8\u53EF\u4EE5\u6570\u636E\u7ED1\u5B9A\uFF0C\u5373\u6BCF\u5F53\u5BF9\u8C61\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u4F1A\u81EA\u52A8\u66F4\u65B0 DOM\u3002</p><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u4F1A\u5728\u5BF9\u8C61\u4E0A\u9762\u8BBE\u7F6E\u5185\u90E8\u5C5E\u6027\uFF0C\u5C5E\u6027\u540D\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4F7F\u7528\u4E0B\u5212\u7EBF\u5F00\u5934\uFF0C\u8868\u793A\u8FD9\u4E9B\u5C5E\u6027\u4E0D\u5E94\u8BE5\u88AB\u5916\u90E8\u4F7F\u7528\u3002\u7ED3\u5408 <code>get</code> \u548C <code>set</code> \u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u505A\u5230\u9632\u6B62\u8FD9\u4E9B\u5185\u90E8\u5C5E\u6027\u88AB\u5916\u90E8\u8BFB\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">invariant</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid attempt to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>action<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> private &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; property</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>_prop<span class="token punctuation">;</span>
<span class="token comment">// Error: Invalid attempt to get private &quot;_prop&quot; property</span>
proxy<span class="token punctuation">.</span>_prop <span class="token operator">=</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Error: Invalid attempt to set private &quot;_prop&quot; property</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EA\u8981\u8BFB\u5199\u7684\u5C5E\u6027\u540D\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u662F\u4E0B\u5212\u7EBF\uFF0C\u4E00\u5F8B\u629B\u9519\uFF0C\u4ECE\u800C\u8FBE\u5230\u7981\u6B62\u8BFB\u5199\u5185\u90E8\u5C5E\u6027\u7684\u76EE\u7684\u3002</p><p>\u4E0B\u9762\u662F <code>set</code> \u65B9\u6CD5\u7B2C\u56DB\u4E2A\u53C2\u6570\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> receiver<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">===</span> proxy<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>set</code> \u65B9\u6CD5\u7684\u7B2C\u56DB\u4E2A\u53C2\u6570 <code>receiver</code>\uFF0C\u6307\u7684\u662F\u539F\u59CB\u7684\u64CD\u4F5C\u884C\u4E3A\u6240\u5728\u7684\u90A3\u4E2A\u5BF9\u8C61\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u662F <code>proxy</code> \u5B9E\u4F8B\u672C\u8EAB\uFF0C\u8BF7\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> receiver<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>

myObj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
myObj<span class="token punctuation">.</span>foo <span class="token operator">===</span> myObj<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u8BBE\u7F6E <code>myObj.foo</code> \u5C5E\u6027\u7684\u503C\u65F6\uFF0C<code>myObj</code> \u5E76\u6CA1\u6709 <code>foo</code> \u5C5E\u6027\uFF0C\u56E0\u6B64\u5F15\u64CE\u4F1A\u5230 <code>myObj</code> \u7684\u539F\u578B\u94FE\u53BB\u627E <code>foo</code> \u5C5E\u6027\u3002<code>myObj</code> \u7684\u539F\u578B\u5BF9\u8C61 <code>proxy</code> \u662F\u4E00\u4E2A Proxy \u5B9E\u4F8B\uFF0C\u8BBE\u7F6E\u5B83\u7684 <code>foo</code> \u5C5E\u6027\u4F1A\u89E6\u53D1 <code>set</code> \u65B9\u6CD5\u3002\u8FD9\u65F6\uFF0C\u7B2C\u56DB\u4E2A\u53C2\u6570 <code>receiver</code> \u5C31\u6307\u5411\u539F\u59CB\u8D4B\u503C\u884C\u4E3A\u6240\u5728\u7684\u5BF9\u8C61 <code>myObj</code>\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u67D0\u4E2A\u5C5E\u6027\uFF0C\u4E0D\u53EF\u5199\u4E14\u4E0D\u53EF\u914D\u7F6E\uFF0C\u90A3\u4E48 <code>set</code> \u65B9\u6CD5\u5C06\u4E0D\u8D77\u4F5C\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// &quot;bar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>obj.foo</code> \u5C5E\u6027\u4E0D\u53EF\u5199\uFF0CProxy \u5BF9\u8FD9\u4E2A\u5C5E\u6027\u7684 <code>set</code> \u4EE3\u7406\u5C06\u4E0D\u4F1A\u751F\u6548\u3002</p><h3 id="apply" tabindex="-1"><a class="header-anchor" href="#apply" aria-hidden="true">#</a> apply()</h3><p><code>apply</code> \u65B9\u6CD5\u62E6\u622A\u51FD\u6570\u7684\u8C03\u7528\u3001<code>call</code> \u548C <code>apply</code> \u64CD\u4F5C\u3002</p><p><code>apply</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u3001\u76EE\u6807\u5BF9\u8C61\u7684\u4E0A\u4E0B\u6587\u5BF9\u8C61(<code>this</code>)\u548C\u76EE\u6807\u5BF9\u8C61\u7684\u53C2\u6570\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;I am the target&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;I am the proxy&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;I am the proxy&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>p</code> \u662F Proxy \u7684\u5B9E\u4F8B\uFF0C\u5F53\u5B83\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u65F6(<code>p()</code>)\uFF0C\u5C31\u4F1A\u88AB <code>apply</code> \u65B9\u6CD5\u62E6\u622A\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u5916\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> twice <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> twice<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">proxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 22</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6BCF\u5F53\u6267\u884C <code>proxy</code> \u51FD\u6570(\u76F4\u63A5\u8C03\u7528\u6216 <code>call</code> \u548C <code>apply</code> \u8C03\u7528)\uFF0C\u5C31\u4F1A\u88AB <code>apply</code> \u65B9\u6CD5\u62E6\u622A\u3002</p><p>\u53E6\u5916\uFF0C\u76F4\u63A5\u8C03\u7528 <code>Reflect.apply</code> \u65B9\u6CD5\uFF0C\u4E5F\u4F1A\u88AB\u62E6\u622A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 38</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has" aria-hidden="true">#</a> has()</h3><p><code>has</code> \u65B9\u6CD5\u7528\u6765\u62E6\u622A <code>HasProperty</code> \u64CD\u4F5C\uFF0C\u5373\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u751F\u6548\u3002\u5178\u578B\u7684\u64CD\u4F5C\u5C31\u662F <code>in</code> \u8FD0\u7B97\u7B26\u3002</p><p><code>has</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u3001\u9700\u67E5\u8BE2\u7684\u5C5E\u6027\u540D\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u4F7F\u7528 <code>has</code> \u65B9\u6CD5\u9690\u85CF\u67D0\u4E9B\u5C5E\u6027\uFF0C\u4E0D\u88AB <code>in</code> \u8FD0\u7B97\u7B26\u53D1\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> key <span class="token keyword">in</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">_prop</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token string">&quot;_prop&quot;</span> <span class="token keyword">in</span> proxy<span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u539F\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u662F\u4E0B\u5212\u7EBF\uFF0C<code>proxy.has</code> \u5C31\u4F1A\u8FD4\u56DE <code>false</code>\uFF0C\u4ECE\u800C\u4E0D\u4F1A\u88AB <code>in</code> \u8FD0\u7B97\u7B26\u53D1\u73B0\u3002</p><p>\u5982\u679C\u539F\u5BF9\u8C61\u4E0D\u53EF\u914D\u7F6E\u6216\u8005\u7981\u6B62\u6269\u5C55\uFF0C\u8FD9\u65F6 <code>has</code> \u62E6\u622A\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">has</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token string">&quot;a&quot;</span> <span class="token keyword">in</span> p<span class="token punctuation">;</span> <span class="token comment">// TypeError is thrown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>obj</code> \u5BF9\u8C61\u7981\u6B62\u6269\u5C55\uFF0C\u7ED3\u679C\u4F7F\u7528 <code>has</code> \u62E6\u622A\u5C31\u4F1A\u62A5\u9519\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5982\u679C\u67D0\u4E2A\u5C5E\u6027\u4E0D\u53EF\u914D\u7F6E(\u6216\u8005\u76EE\u6807\u5BF9\u8C61\u4E0D\u53EF\u6269\u5C55)\uFF0C\u5219 <code>has</code> \u65B9\u6CD5\u5C31\u4E0D\u5F97\u201C\u9690\u85CF\u201D(\u5373\u8FD4\u56DE <code>false</code>)\u76EE\u6807\u5BF9\u8C61\u7684\u8BE5\u5C5E\u6027\u3002</p><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C<code>has</code> \u65B9\u6CD5\u62E6\u622A\u7684\u662F <code>HasProperty</code> \u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F <code>HasOwnProperty</code> \u64CD\u4F5C\uFF0C\u5373 <code>has</code> \u65B9\u6CD5\u4E0D\u5224\u65AD\u4E00\u4E2A\u5C5E\u6027\u662F\u5BF9\u8C61\u81EA\u8EAB\u7684\u5C5E\u6027\uFF0C\u8FD8\u662F\u7EE7\u627F\u7684\u5C5E\u6027\u3002</p><p>\u53E6\u5916\uFF0C\u867D\u7136 <code>for...in</code> \u5FAA\u73AF\u4E5F\u7528\u5230\u4E86 <code>in</code> \u8FD0\u7B97\u7B26\uFF0C\u4F46\u662F <code>has</code> \u62E6\u622A\u5BF9 <code>for...in</code> \u5FAA\u73AF\u4E0D\u751F\u6548\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> stu1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">59</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> stu2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">score</span><span class="token operator">:</span> <span class="token number">99</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> prop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&quot;score&quot;</span> <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>target<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u4E0D\u53CA\u683C </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> prop <span class="token keyword">in</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> oproxy1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>stu1<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> oproxy2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>stu2<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token string">&quot;score&quot;</span> <span class="token keyword">in</span> oproxy1<span class="token punctuation">;</span>
<span class="token comment">// \u5F20\u4E09 \u4E0D\u53CA\u683C</span>
<span class="token comment">// false</span>

<span class="token string">&quot;score&quot;</span> <span class="token keyword">in</span> oproxy2<span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> a <span class="token keyword">in</span> oproxy1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oproxy1<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5F20\u4E09</span>
<span class="token comment">// 59</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> b <span class="token keyword">in</span> oproxy2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oproxy2<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u674E\u56DB</span>
<span class="token comment">// 99</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>has</code> \u62E6\u622A\u53EA\u5BF9 <code>in</code> \u8FD0\u7B97\u7B26\u751F\u6548\uFF0C\u5BF9 <code>for...in</code> \u5FAA\u73AF\u4E0D\u751F\u6548\uFF0C\u5BFC\u81F4\u4E0D\u7B26\u5408\u8981\u6C42\u7684\u5C5E\u6027\u6CA1\u6709\u88AB <code>for...in</code> \u5FAA\u73AF\u6240\u6392\u9664\u3002</p><h3 id="construct" tabindex="-1"><a class="header-anchor" href="#construct" aria-hidden="true">#</a> construct()</h3><p><code>construct</code> \u65B9\u6CD5\u7528\u4E8E\u62E6\u622A <code>new</code> \u547D\u4EE4\uFF0C\u4E0B\u9762\u662F\u62E6\u622A\u5BF9\u8C61\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">construct</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> args<span class="token punctuation">,</span> newTarget</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">target</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>construct</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u3002</p><ul><li><code>target</code>: \u76EE\u6807\u5BF9\u8C61</li><li><code>args</code>: \u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u5BF9\u8C61</li><li><code>newTarget</code>: \u521B\u9020\u5B9E\u4F8B\u5BF9\u8C61\u65F6\uFF0C<code>new</code> \u547D\u4EE4\u4F5C\u7528\u7684\u6784\u9020\u51FD\u6570(\u4E0B\u9762\u4F8B\u5B50\u7684 <code>p</code>)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">construct</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;called: &quot;</span> <span class="token operator">+</span> args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">p</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token comment">// &quot;called: 1&quot;</span>
<span class="token comment">// 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>construct</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u5FC5\u987B\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">construct</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> argumentsList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">new</span> <span class="token class-name">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deleteproperty" tabindex="-1"><a class="header-anchor" href="#deleteproperty" aria-hidden="true">#</a> deleteProperty()</h3><p><code>deleteProperty</code> \u65B9\u6CD5\u7528\u4E8E\u62E6\u622A <code>delete</code> \u64CD\u4F5C\uFF0C\u5982\u679C\u8FD9\u4E2A\u65B9\u6CD5\u629B\u51FA\u9519\u8BEF\u6216\u8005\u8FD4\u56DE <code>false</code>\uFF0C\u5F53\u524D\u5C5E\u6027\u5C31\u65E0\u6CD5\u88AB <code>delete</code> \u547D\u4EE4\u5220\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;delete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">invariant</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid attempt to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>action<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> private &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; property</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">_prop</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> proxy<span class="token punctuation">.</span>_prop<span class="token punctuation">;</span>
<span class="token comment">// Error: Invalid attempt to delete private &quot;_prop&quot; property</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>deleteProperty</code> \u65B9\u6CD5\u62E6\u622A\u4E86 <code>delete</code> \u64CD\u4F5C\u7B26\uFF0C\u5220\u9664\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E3A\u4E0B\u5212\u7EBF\u7684\u5C5E\u6027\u4F1A\u62A5\u9519\u3002</p><p>\u6CE8\u610F\uFF0C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u4E0D\u53EF\u914D\u7F6E(configurable)\u7684\u5C5E\u6027\uFF0C\u4E0D\u80FD\u88AB <code>deleteProperty</code> \u65B9\u6CD5\u5220\u9664\uFF0C\u5426\u5219\u62A5\u9519\u3002</p><h3 id="defineproperty" tabindex="-1"><a class="header-anchor" href="#defineproperty" aria-hidden="true">#</a> defineProperty()</h3><p><code>defineProperty</code> \u65B9\u6CD5\u62E6\u622A\u4E86 <code>Object.defineProperty</code> \u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> descriptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u4F1A\u751F\u6548</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>defineProperty</code> \u65B9\u6CD5\u8FD4\u56DE <code>false</code>\uFF0C\u5BFC\u81F4\u6DFB\u52A0\u65B0\u5C5E\u6027\u603B\u662F\u65E0\u6548\u3002</p><p>\u6CE8\u610F\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0D\u53EF\u6269\u5C55(extensible)\uFF0C\u5219 <code>defineProperty</code> \u4E0D\u80FD\u589E\u52A0\u76EE\u6807\u5BF9\u8C61\u4E0A\u4E0D\u5B58\u5728\u7684\u5C5E\u6027\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002\u53E6\u5916\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u4E0D\u53EF\u5199(writable)\u6216\u4E0D\u53EF\u914D\u7F6E(configurable)\uFF0C\u5219 <code>defineProperty</code> \u65B9\u6CD5\u4E0D\u5F97\u6539\u53D8\u8FD9\u4E24\u4E2A\u8BBE\u7F6E\u3002</p><h3 id="getownpropertydescriptor" tabindex="-1"><a class="header-anchor" href="#getownpropertydescriptor" aria-hidden="true">#</a> getOwnPropertyDescriptor()</h3><p><code>getOwnPropertyDescriptor</code> \u65B9\u6CD5\u62E6\u622A <code>Object.getOwnPropertyDescriptor()</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5C5E\u6027\u63CF\u8FF0\u5BF9\u8C61\u6216\u8005 <code>undefined</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">_foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token string">&quot;tar&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&quot;wat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// undefined</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&quot;_foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// undefined</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// { value: &#39;tar&#39;, writable: true, enumerable: true, configurable: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>handler.getOwnPropertyDescriptor</code> \u65B9\u6CD5\u5BF9\u4E8E\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E3A\u4E0B\u5212\u7EBF\u7684\u5C5E\u6027\u540D\u4F1A\u8FD4\u56DE <code>undefined</code>\u3002</p><h3 id="getprototypeof" tabindex="-1"><a class="header-anchor" href="#getprototypeof" aria-hidden="true">#</a> getPrototypeOf()</h3><p><code>getPrototypeOf</code> \u65B9\u6CD5\u4E3B\u8981\u7528\u6765\u62E6\u622A\u83B7\u53D6\u5BF9\u8C61\u539F\u578B\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u62E6\u622A\u4E0B\u9762\u8FD9\u4E9B\u64CD\u4F5C\u3002</p><ul><li><code>Object.prototype.__proto__</code></li><li><code>Object.prototype.isPrototypeOf()</code></li><li><code>Object.getPrototypeOf()</code></li><li><code>Reflect.getPrototypeOf()</code></li><li><code>instanceof</code></li></ul><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> proto<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">===</span> proto<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>getPrototypeOf</code> \u65B9\u6CD5\u62E6\u622A <code>Object.getPrototypeOf()</code>\uFF0C\u8FD4\u56DE <code>proto</code> \u5BF9\u8C61\u3002</p><p>\u6CE8\u610F\uFF0C<code>getPrototypeOf</code> \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5FC5\u987B\u662F\u5BF9\u8C61\u6216\u8005 <code>null</code>\uFF0C\u5426\u5219\u62A5\u9519\u3002\u53E6\u5916\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0D\u53EF\u6269\u5C55(extensible)\uFF0C <code>getPrototypeOf</code> \u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u3002</p><h3 id="isextensible" tabindex="-1"><a class="header-anchor" href="#isextensible" aria-hidden="true">#</a> isExtensible()</h3><p><code>isExtensible</code> \u65B9\u6CD5\u62E6\u622A <code>Object.isExtensible</code> \u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">isExtensible</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;called&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;called&quot;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BBE\u7F6E\u4E86 <code>isExtensible</code> \u65B9\u6CD5\uFF0C\u5728\u8C03\u7528 <code>Object.isExtensible</code> \u65F6\u4F1A\u8F93\u51FA <code>called</code>\u3002</p><p>\u6CE8\u610F\uFF0C\u8BE5\u65B9\u6CD5\u53EA\u80FD\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u503C\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A\u5E03\u5C14\u503C\u3002</p><p>\u8FD9\u4E2A\u65B9\u6CD5\u6709\u4E00\u4E2A\u5F3A\u9650\u5236\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u5FC5\u987B\u4E0E\u76EE\u6807\u5BF9\u8C61\u7684 <code>isExtensible</code> \u5C5E\u6027\u4FDD\u6301\u4E00\u81F4\uFF0C\u5426\u5219\u5C31\u4F1A\u629B\u51FA\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span> <span class="token operator">===</span> Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">isExtensible</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">isExtensible</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ownkeys" tabindex="-1"><a class="header-anchor" href="#ownkeys" aria-hidden="true">#</a> ownKeys()</h3><p><code>ownKeys</code> \u65B9\u6CD5\u7528\u6765\u62E6\u622A\u5BF9\u8C61\u81EA\u8EAB\u5C5E\u6027\u7684\u8BFB\u53D6\u64CD\u4F5C\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u62E6\u622A\u4EE5\u4E0B\u64CD\u4F5C\u3002</p><ul><li><code>Object.getOwnPropertyNames()</code></li><li><code>Object.getOwnPropertySymbols()</code></li><li><code>Object.keys()</code></li><li><code>for...in</code> \u5FAA\u73AF</li></ul><p>\u4E0B\u9762\u662F\u62E6\u622A <code>Object.keys()</code> \u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;a&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u62E6\u622A\u4E86\u5BF9\u4E8E <code>target</code> \u5BF9\u8C61\u7684 <code>Object.keys()</code> \u64CD\u4F5C\uFF0C\u53EA\u8FD4\u56DE <code>a</code>\u3001<code>b</code>\u3001<code>c</code> \u4E09\u4E2A\u5C5E\u6027\u4E4B\u4E2D\u7684 <code>a</code> \u5C5E\u6027\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u662F\u62E6\u622A\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E3A\u4E0B\u5212\u7EBF\u7684\u5C5E\u6027\u540D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_bar</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">_prop</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;baz&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u4F7F\u7528 <code>Object.keys</code> \u65B9\u6CD5\u65F6\uFF0C\u6709\u4E09\u7C7B\u5C5E\u6027\u4F1A\u88AB <code>ownKeys</code> \u65B9\u6CD5\u81EA\u52A8\u8FC7\u6EE4\uFF0C\u4E0D\u4F1A\u8FD4\u56DE\u3002</p><ul><li>\u76EE\u6807\u5BF9\u8C61\u4E0A\u4E0D\u5B58\u5728\u7684\u5C5E\u6027</li><li>\u5C5E\u6027\u540D\u4E3A Symbol \u503C</li><li>\u4E0D\u53EF\u904D\u5386(<code>enumerable</code>)\u7684\u5C5E\u6027</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;static&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;a&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>ownKeys</code> \u65B9\u6CD5\u4E4B\u4E2D\uFF0C\u663E\u5F0F\u8FD4\u56DE\u4E0D\u5B58\u5728\u7684\u5C5E\u6027(<code>d</code>)\u3001Symbol \u503C(<code>Symbol.for(&#39;secret&#39;)</code>)\u3001\u4E0D\u53EF\u904D\u5386\u7684\u5C5E\u6027(<code>key</code>)\uFF0C\u7ED3\u679C\u90FD\u88AB\u81EA\u52A8\u8FC7\u6EE4\u6389\u3002</p><p><code>ownKeys</code> \u65B9\u6CD5\u8FD8\u53EF\u4EE5\u62E6\u622A <code>Object.getOwnPropertyNames()</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">ownKeys</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>for...in</code> \u5FAA\u73AF\u4E5F\u53D7\u5230 <code>ownKeys</code> \u65B9\u6CD5\u7684\u62E6\u622A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">hello</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">ownKeys</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u4EFB\u4F55\u8F93\u51FA</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>ownkeys</code> \u6307\u5B9A\u53EA\u8FD4\u56DE <code>a</code> \u548C <code>b</code> \u5C5E\u6027\uFF0C\u7531\u4E8E <code>obj</code> \u6CA1\u6709\u8FD9\u4E24\u4E2A\u5C5E\u6027\uFF0C\u56E0\u6B64 <code>for...in</code> \u5FAA\u73AF\u4E0D\u4F1A\u6709\u4EFB\u4F55\u8F93\u51FA\u3002</p><p><code>ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u6570\u7EC4\u6210\u5458\uFF0C\u53EA\u80FD\u662F\u5B57\u7B26\u4E32\u6216 Symbol \u503C\u3002\u5982\u679C\u6709\u5176\u4ED6\u7C7B\u578B\u7684\u503C\uFF0C\u6216\u8005\u8FD4\u56DE\u7684\u6839\u672C\u4E0D\u662F\u6570\u7EC4\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">ownKeys</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught TypeError: 123 is not a valid property name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>ownKeys</code> \u65B9\u6CD5\u867D\u7136\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662F\u6BCF\u4E00\u4E2A\u6570\u7EC4\u6210\u5458\u90FD\u4E0D\u662F\u5B57\u7B26\u4E32\u6216 Symbol \u503C\uFF0C\u56E0\u6B64\u5C31\u62A5\u9519\u4E86\u3002</p><p>\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u5305\u542B\u4E0D\u53EF\u914D\u7F6E\u7684\u5C5E\u6027\uFF0C\u5219\u8BE5\u5C5E\u6027\u5FC5\u987B\u88AB <code>ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\uFF0C\u5426\u5219\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">ownKeys</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught TypeError: &#39;ownKeys&#39; on proxy: trap result did not include &#39;a&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>obj</code> \u5BF9\u8C61\u7684 <code>a</code> \u5C5E\u6027\u662F\u4E0D\u53EF\u914D\u7F6E\u7684\uFF0C\u8FD9\u65F6 <code>ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u6570\u7EC4\u4E4B\u4E2D\uFF0C\u5FC5\u987B\u5305\u542B <code>a</code>\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><p>\u53E6\u5916\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u662F\u4E0D\u53EF\u6269\u5C55\u7684(non-extensition)\uFF0C\u8FD9\u65F6 <code>ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u6570\u7EC4\u4E4B\u4E2D\uFF0C\u5FC5\u987B\u5305\u542B\u539F\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF0C\u4E14\u4E0D\u80FD\u5305\u542B\u591A\u4F59\u7684\u5C5E\u6027\uFF0C\u5426\u5219\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">ownKeys</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught TypeError: &#39;ownKeys&#39; on proxy: trap returned extra keys but proxy target is non-extensible</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>obj</code> \u5BF9\u8C61\u662F\u4E0D\u53EF\u6269\u5C55\u7684\uFF0C\u8FD9\u65F6 <code>ownKeys</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u6570\u7EC4\u4E4B\u4E2D\uFF0C\u5305\u542B\u4E86 <code>obj</code> \u5BF9\u8C61\u7684\u591A\u4F59\u5C5E\u6027 <code>b</code>\uFF0C\u6240\u4EE5\u5BFC\u81F4\u4E86\u62A5\u9519\u3002</p><h3 id="preventextensions" tabindex="-1"><a class="header-anchor" href="#preventextensions" aria-hidden="true">#</a> preventExtensions()</h3><p><code>preventExtensions</code> \u65B9\u6CD5\u62E6\u622A <code>Object.preventExtensions()</code>\u3002\u8BE5\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u5426\u5219\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A\u5E03\u5C14\u503C\u3002</p><p>\u8FD9\u4E2A\u65B9\u6CD5\u6709\u4E00\u4E2A\u9650\u5236\uFF0C\u53EA\u6709\u76EE\u6807\u5BF9\u8C61\u4E0D\u53EF\u6269\u5C55\u65F6(\u5373 <code>Object.isExtensible(proxy)</code> \u4E3A <code>false</code>)\uFF0C<code>proxy.preventExtensions</code> \u624D\u80FD\u8FD4\u56DE <code>true</code>\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">preventExtensions</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>proxy.preventExtensions</code> \u65B9\u6CD5\u8FD4\u56DE <code>true</code>\uFF0C\u4F46\u8FD9\u65F6 <code>Object.isExtensible(proxy)</code> \u4F1A\u8FD4\u56DE <code>true</code>\uFF0C\u56E0\u6B64\u62A5\u9519\u3002</p><p>\u4E3A\u4E86\u9632\u6B62\u51FA\u73B0\u8FD9\u4E2A\u95EE\u9898\uFF0C\u901A\u5E38\u8981\u5728 <code>proxy.preventExtensions</code> \u65B9\u6CD5\u91CC\u9762\uFF0C\u8C03\u7528\u4E00\u6B21 <code>Object.preventExtensions</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">preventExtensions</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;called&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;called&quot;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setprototypeof" tabindex="-1"><a class="header-anchor" href="#setprototypeof" aria-hidden="true">#</a> setPrototypeOf()</h3><p><code>setPrototypeOf</code> \u65B9\u6CD5\u4E3B\u8981\u7528\u6765\u62E6\u622A <code>Object.setPrototypeOf</code> \u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> proto</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Changing the prototype is forbidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proto <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: Changing the prototype is forbidden</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EA\u8981\u4FEE\u6539 <code>target</code> \u7684\u539F\u578B\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u62A5\u9519\u3002</p><p>\u6CE8\u610F\uFF0C\u8BE5\u65B9\u6CD5\u53EA\u80FD\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u5426\u5219\u4F1A\u88AB\u81EA\u52A8\u8F6C\u4E3A\u5E03\u5C14\u503C\u3002\u53E6\u5916\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0D\u53EF\u6269\u5C55(extensible)\uFF0C<code>setPrototypeOf</code> \u65B9\u6CD5\u4E0D\u5F97\u6539\u53D8\u76EE\u6807\u5BF9\u8C61\u7684\u539F\u578B\u3002</p><h2 id="proxy-revocable" tabindex="-1"><a class="header-anchor" href="#proxy-revocable" aria-hidden="true">#</a> Proxy.revocable()</h2><p><code>Proxy.revocable</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u53EF\u53D6\u6D88\u7684 Proxy \u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token punctuation">{</span> proxy<span class="token punctuation">,</span> revoke <span class="token punctuation">}</span> <span class="token operator">=</span> Proxy<span class="token punctuation">.</span><span class="token function">revocable</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// 123</span>

<span class="token function">revoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo<span class="token punctuation">;</span> <span class="token comment">// TypeError: Revoked</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Proxy.revocable</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u7684 <code>proxy</code> \u5C5E\u6027\u662F <code>Proxy</code> \u5B9E\u4F8B\uFF0C<code>revoke</code> \u5C5E\u6027\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4EE5\u53D6\u6D88 <code>Proxy</code> \u5B9E\u4F8B\u3002\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5F53\u6267\u884C <code>revoke</code> \u51FD\u6570\u4E4B\u540E\uFF0C\u518D\u8BBF\u95EE <code>Proxy</code> \u5B9E\u4F8B\uFF0C\u5C31\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\u3002</p><p><code>Proxy.revocable</code> \u7684\u4E00\u4E2A\u4F7F\u7528\u573A\u666F\u662F\uFF0C\u76EE\u6807\u5BF9\u8C61\u4E0D\u5141\u8BB8\u76F4\u63A5\u8BBF\u95EE\uFF0C\u5FC5\u987B\u901A\u8FC7\u4EE3\u7406\u8BBF\u95EE\uFF0C\u4E00\u65E6\u8BBF\u95EE\u7ED3\u675F\uFF0C\u5C31\u6536\u56DE\u4EE3\u7406\u6743\uFF0C\u4E0D\u5141\u8BB8\u518D\u6B21\u8BBF\u95EE\u3002</p><h2 id="this-\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#this-\u95EE\u9898" aria-hidden="true">#</a> this \u95EE\u9898</h2><p>\u867D\u7136 Proxy \u53EF\u4EE5\u4EE3\u7406\u9488\u5BF9\u76EE\u6807\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u4F46\u5B83\u4E0D\u662F\u76EE\u6807\u5BF9\u8C61\u7684\u900F\u660E\u4EE3\u7406\uFF0C\u5373\u4E0D\u505A\u4EFB\u4F55\u62E6\u622A\u7684\u60C5\u51B5\u4E0B\uFF0C\u4E5F\u65E0\u6CD5\u4FDD\u8BC1\u4E0E\u76EE\u6807\u5BF9\u8C61\u7684\u884C\u4E3A\u4E00\u81F4\u3002\u4E3B\u8981\u539F\u56E0\u5C31\u662F\u5728 Proxy \u4EE3\u7406\u7684\u60C5\u51B5\u4E0B\uFF0C\u76EE\u6807\u5BF9\u8C61\u5185\u90E8\u7684 <code>this</code> \u5173\u952E\u5B57\u4F1A\u6307\u5411 Proxy \u4EE3\u7406\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">m</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

target<span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
proxy<span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E00\u65E6 <code>proxy</code> \u4EE3\u7406 <code>target.m</code>\uFF0C\u540E\u8005\u5185\u90E8\u7684 <code>this</code> \u5C31\u662F\u6307\u5411 <code>proxy</code>\uFF0C\u800C\u4E0D\u662F <code>target</code>\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u7531\u4E8E <code>this</code> \u6307\u5411\u7684\u53D8\u5316\uFF0C\u5BFC\u81F4 Proxy \u65E0\u6CD5\u4EE3\u7406\u76EE\u6807\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> _name <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _name<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> _name<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> jane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Jane&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jane<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// &#39;Jane&#39;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>jane<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u76EE\u6807\u5BF9\u8C61 <code>jane</code> \u7684 <code>name</code> \u5C5E\u6027\uFF0C\u5B9E\u9645\u4FDD\u5B58\u5728\u5916\u90E8 <code>WeakMap</code> \u5BF9\u8C61 <code>_name</code> \u4E0A\u9762\uFF0C\u901A\u8FC7 <code>this</code> \u952E\u533A\u5206\u3002\u7531\u4E8E\u901A\u8FC7 <code>proxy.name</code> \u8BBF\u95EE\u65F6\uFF0C<code>this</code> \u6307\u5411 <code>proxy</code>\uFF0C\u5BFC\u81F4\u65E0\u6CD5\u53D6\u5230\u503C\uFF0C\u6240\u4EE5\u8FD4\u56DE <code>undefined</code>\u3002</p><p>\u6B64\u5916\uFF0C\u6709\u4E9B\u539F\u751F\u5BF9\u8C61\u7684\u5185\u90E8\u5C5E\u6027\uFF0C\u53EA\u6709\u901A\u8FC7\u6B63\u786E\u7684 <code>this</code> \u624D\u80FD\u62FF\u5230\uFF0C\u6240\u4EE5 Proxy \u4E5F\u65E0\u6CD5\u4EE3\u7406\u8FD9\u4E9B\u539F\u751F\u5BF9\u8C61\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: this is not a Date object.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>getDate</code> \u65B9\u6CD5\u53EA\u80FD\u5728 <code>Date</code> \u5BF9\u8C61\u5B9E\u4F8B\u4E0A\u9762\u62FF\u5230\uFF0C\u5982\u679C <code>this</code> \u4E0D\u662F <code>Date</code> \u5BF9\u8C61\u5B9E\u4F8B\u5C31\u4F1A\u62A5\u9519\u3002\u8FD9\u65F6\uFF0C<code>this</code> \u7ED1\u5B9A\u539F\u59CB\u5BF9\u8C61\uFF0C\u5C31\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2015-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&quot;getDate&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u4F8B-web-\u670D\u52A1\u7684\u5BA2\u6237\u7AEF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-web-\u670D\u52A1\u7684\u5BA2\u6237\u7AEF" aria-hidden="true">#</a> \u5B9E\u4F8B: Web \u670D\u52A1\u7684\u5BA2\u6237\u7AEF</h2><p>Proxy \u5BF9\u8C61\u53EF\u4EE5\u62E6\u622A\u76EE\u6807\u5BF9\u8C61\u7684\u4EFB\u610F\u5C5E\u6027\uFF0C\u8FD9\u4F7F\u5F97\u5B83\u5F88\u5408\u9002\u7528\u6765\u5199 Web \u670D\u52A1\u7684\u5BA2\u6237\u7AEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> service <span class="token operator">=</span> <span class="token function">createWebService</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

service<span class="token punctuation">.</span><span class="token function">employees</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> employees <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \xB7\xB7\xB7</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u65B0\u5EFA\u4E86\u4E00\u4E2A Web \u670D\u52A1\u7684\u63A5\u53E3\uFF0C\u8FD9\u4E2A\u63A5\u53E3\u8FD4\u56DE\u5404\u79CD\u6570\u636E\u3002Proxy \u53EF\u4EE5\u62E6\u622A\u8FD9\u4E2A\u5BF9\u8C61\u7684\u4EFB\u610F\u5C5E\u6027\uFF0C\u6240\u4EE5\u4E0D\u7528\u4E3A\u6BCF\u4E00\u79CD\u6570\u636E\u5199\u4E00\u4E2A\u9002\u914D\u65B9\u6CD5\uFF0C\u53EA\u8981\u5199\u4E00\u4E2A Proxy \u62E6\u622A\u5C31\u53EF\u4EE5\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createWebService</span><span class="token punctuation">(</span><span class="token parameter">baseUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">httpGet</span><span class="token punctuation">(</span>baseUrl <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> propKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u7406\uFF0CProxy \u4E5F\u53EF\u4EE5\u7528\u6765\u5B9E\u73B0\u6570\u636E\u5E93\u7684 ORM \u5C42\u3002</p>`,189);function u(r,k){return a(),p("div",null,[c,l,t(" more "),i])}const m=s(o,[["render",u],["__file","proxy.html.vue"]]);export{m as default};
