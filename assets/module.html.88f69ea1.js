import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,a as n,b as s,e as t,d as l,f as e,r as i}from"./app.8754ca23.js";const u={},r=n("p",null,"\u6A21\u5757\u5316\u7684\u601D\u8DEF\u662F\u5C06\u4E00\u4E9B\u516C\u5171\u7684\u4EE3\u7801\u62BD\u79BB\u6210\u4E3A\u4E00\u4E2A\u5355\u72EC\u7684 js \u6587\u4EF6\uFF0C\u4F5C\u4E3A\u4E00\u4E2A\u6A21\u5757\u3002",-1),d=n("p",null,[s("\u6A21\u5757\u53EA\u6709\u901A\u8FC7 "),n("code",null,"module.exports"),s(" \u6216\u8005 "),n("code",null,"exports"),s(" \u624D\u80FD\u5BF9\u5916\u66B4\u9732\u63A5\u53E3\u3002")],-1),k=e(`<div class="custom-container warning"><p class="custom-container-title">Note</p><ul><li><code>exports</code> \u662F <code>module.exports</code> \u7684\u4E00\u4E2A\u5F15\u7528\uFF0C\u56E0\u6B64\u5728\u6A21\u5757\u91CC\u8FB9\u968F\u610F\u66F4\u6539 <code>exports</code> \u7684\u6307\u5411\u4F1A\u9020\u6210\u672A\u77E5\u7684\u9519\u8BEF\u3002\u6240\u4EE5\u66F4\u63A8\u8350\u5F00\u53D1\u8005\u91C7\u7528 <code>module.exports</code> \u6765\u66B4\u9732\u6A21\u5757\u63A5\u53E3\uFF0C\u9664\u975E\u60A8\u5DF2\u7ECF\u6E05\u6670\u77E5\u9053\u8FD9\u4E24\u8005\u7684\u5173\u7CFB\u3002</li><li>\u5C0F\u7A0B\u5E8F\u76EE\u524D\u4E0D\u652F\u6301\u76F4\u63A5\u5F15\u5165 <code>node_modules</code> , \u5F00\u53D1\u8005\u9700\u8981\u4F7F\u7528\u5230 <code>node_modules</code> \u65F6\u5019\u5EFA\u8BAE\u62F7\u8D1D\u51FA\u76F8\u5173\u7684\u4EE3\u7801\u5230\u5C0F\u7A0B\u5E8F\u7684\u76EE\u5F55\u4E2D\uFF0C\u6216\u8005\u4F7F\u7528\u5C0F\u7A0B\u5E8F\u652F\u6301\u7684 npm \u529F\u80FD\u3002</li></ul></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// common.js</span>
<span class="token keyword">const</span> <span class="token function-variable function">sayHello</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">sayGoodbye</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Goodbye </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>sayHello <span class="token operator">=</span> sayHello<span class="token punctuation">;</span>
exports<span class="token punctuation">.</span>sayGoodbye <span class="token operator">=</span> sayGoodbye<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u200B \u5728\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u6A21\u5757\u7684\u6587\u4EF6\u4E2D\uFF0C\u4F7F\u7528 <code>require</code> \u5C06\u516C\u5171\u4EE3\u7801\u5F15\u5165</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> common <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;common.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">helloMINA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">&quot;MINA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">goodbyeMINA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayGoodbye</span><span class="token punctuation">(</span><span class="token string">&quot;MINA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),m={id:"\u6587\u4EF6\u4F5C\u7528\u57DF",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#\u6587\u4EF6\u4F5C\u7528\u57DF","aria-hidden":"true"},"#",-1),b=e(`<div class="custom-container warning"><p class="custom-container-title">Note</p><p>\u5728 JavaScript \u6587\u4EF6\u4E2D\u58F0\u660E\u7684\u53D8\u91CF\u548C\u51FD\u6570\u53EA\u5728\u8BE5\u6587\u4EF6\u4E2D\u6709\u6548\uFF1B\u4E0D\u540C\u7684\u6587\u4EF6\u4E2D\u53EF\u4EE5\u58F0\u660E\u76F8\u540C\u540D\u5B57\u7684\u53D8\u91CF\u548C\u51FD\u6570\uFF0C\u4E0D\u4F1A\u4E92\u76F8\u5F71\u54CD\u3002</p></div><p>\u901A\u8FC7\u5168\u5C40\u51FD\u6570 <code>getApp</code> \u53EF\u4EE5\u83B7\u53D6\u5168\u5C40\u7684\u5E94\u7528\u5B9E\u4F8B\uFF0C\u5982\u679C\u9700\u8981\u5168\u5C40\u7684\u6570\u636E\u53EF\u4EE5\u5728 <code>App()</code> \u4E2D\u8BBE\u7F6E\uFF0C\u5982:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// a.js</span>
<span class="token comment">// The localValue can only be used in file a.js.</span>
<span class="token keyword">let</span> localValue <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Get the app instance.</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Get the global data and change it.</span>
app<span class="token punctuation">.</span>globalData<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token comment">// b.js</span>
<span class="token comment">// You can redefine localValue in file b.js, without interference with the localValue in a.js.</span>
<span class="token keyword">let</span> localValue <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// If a.js it run before b.js, now the globalData shoule be 2.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>globalData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><h3 id="object-module" tabindex="-1"><a class="header-anchor" href="#object-module" aria-hidden="true">#</a> Object module</h3><p>\u5F53\u524D\u6A21\u5757\u5BF9\u8C61</p><p>\u5C5E\u6027</p><table><thead><tr><th>\u5C5E\u6027</th><th>\u7C7B\u578B</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>exports</td><td>Object</td><td>\u6A21\u5757\u5411\u5916\u66B4\u9732\u7684\u5BF9\u8C61\uFF0C\u4F7F\u7528 require \u5F15\u7528\u8BE5\u6A21\u5757\u65F6\u53EF\u4EE5\u83B7\u53D6</td></tr></tbody></table><h3 id="object-exports" tabindex="-1"><a class="header-anchor" href="#object-exports" aria-hidden="true">#</a> Object exports</h3><p>module.exports \u7684\u5F15\u7528</p><h3 id="any-require-string-path" tabindex="-1"><a class="header-anchor" href="#any-require-string-path" aria-hidden="true">#</a> any require(string path)</h3><p>\u5F15\u5165\u6A21\u5757\u3002\u8FD4\u56DE\u6A21\u5757\u901A\u8FC7 <code>module.exports</code> \u6216 <code>exports</code> \u66B4\u9732\u7684\u63A5\u53E3\u3002</p><p>\u53C2\u6570</p><table><thead><tr><th>\u540D\u79F0</th><th>\u7C7B\u578B</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>path</td><td>string</td><td>\u9700\u8981\u5F15\u5165\u6A21\u5757\u6587\u4EF6\u76F8\u5BF9\u4E8E\u5F53\u524D\u6587\u4EF6\u7684\u76F8\u5BF9\u8DEF\u5F84\uFF0C\u6216 npm \u6A21\u5757\u540D\uFF0C\u6216 npm \u6A21\u5757\u8DEF\u5F84\u3002\u4E0D\u652F\u6301\u7EDD\u5BF9\u8DEF\u5F84</td></tr></tbody></table><p>\u793A\u4F8B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// common.js</span>
<span class="token keyword">const</span> <span class="token function-variable function">sayHello</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">sayGoodbye</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Goodbye </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> !</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>sayHello <span class="token operator">=</span> sayHello<span class="token punctuation">;</span>
exports<span class="token punctuation">.</span>sayGoodbye <span class="token operator">=</span> sayGoodbye<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> common <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;common.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">helloMINA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">&quot;MINA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">goodbyeMINA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    common<span class="token punctuation">.</span><span class="token function">sayGoodbye</span><span class="token punctuation">(</span><span class="token string">&quot;MINA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function g(h,y){const a=i("Badge");return o(),c("div",null,[n("p",null,[s("\u6B64\u90E8\u5206\u662F\u9AD8\u6548\u590D\u7528\u5C0F\u7A0B\u5E8F\u4EE3\u7801\u7684\u65B9\u5F0F\u3002"),t(a,{text:"\u91CD\u8981",type:"error"})]),r,d,l(" more "),k,n("h2",m,[v,s(" \u6587\u4EF6\u4F5C\u7528\u57DF "),t(a,{text:"\u52A1\u5FC5\u7406\u89E3",type:"error"})]),b])}const x=p(u,[["render",g],["__file","module.html.vue"]]);export{x as default};
