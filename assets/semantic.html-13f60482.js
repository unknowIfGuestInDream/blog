const t=JSON.parse('{"key":"v-aa6ff0a0","path":"/code/github/semantic.html","title":"语义化提交","lang":"zh-CN","frontmatter":{"title":"语义化提交","icon":"semantic","category":["GitHub"],"description":"Semantic 对于一个大型项目，几千个 commit 是很常见的，这些 commit 部分是项目维护者提交的 commit，部分是一些热心的开发者通过 PR 贡献的。 无论是对于项目维护者，还是想要贡献代码的热心开发者来说，一个简洁明了的 commit 描述都是必不可少的。也就是说我们需要用尽可能简短的备注信息，备注每一个 commit 的作用，以便大家查看。所以我们需要一种规范的，语义化的备注格式，很快由知名项目牵头，全球接收并统一了一种语义化的备注格式，这就是 semantic 规范的来源。 优势 当一个仓库所有的 commit 信息都是用标准的 semantic 格式时，用户可以很方便的理解每一个 commit 的作用。","head":[["meta",{"property":"og:url","content":"https://blog.tlcsdm.com/code/github/semantic.html"}],["meta",{"property":"og:site_name","content":"梦里不知身是客"}],["meta",{"property":"og:title","content":"语义化提交"}],["meta",{"property":"og:description","content":"Semantic 对于一个大型项目，几千个 commit 是很常见的，这些 commit 部分是项目维护者提交的 commit，部分是一些热心的开发者通过 PR 贡献的。 无论是对于项目维护者，还是想要贡献代码的热心开发者来说，一个简洁明了的 commit 描述都是必不可少的。也就是说我们需要用尽可能简短的备注信息，备注每一个 commit 的作用，以便大家查看。所以我们需要一种规范的，语义化的备注格式，很快由知名项目牵头，全球接收并统一了一种语义化的备注格式，这就是 semantic 规范的来源。 优势 当一个仓库所有的 commit 信息都是用标准的 semantic 格式时，用户可以很方便的理解每一个 commit 的作用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ja-JP"}],["meta",{"property":"og:updated_time","content":"2022-10-07T16:35:37.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-07T16:35:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"语义化提交\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-10-07T16:35:37.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","hreflang":"en-us","href":"https://blog.tlcsdm.com/en/code/github/semantic.html"}],["link",{"rel":"alternate","hreflang":"ja-jp","href":"https://blog.tlcsdm.com/ja/code/github/semantic.html"}]]},"headers":[{"level":2,"title":"Semantic","slug":"semantic","link":"#semantic","children":[]},{"level":2,"title":"优势","slug":"优势","link":"#优势","children":[]},{"level":2,"title":"格式","slug":"格式","link":"#格式","children":[{"level":3,"title":"header","slug":"header","link":"#header","children":[]},{"level":3,"title":"type","slug":"type","link":"#type","children":[]},{"level":3,"title":"scope","slug":"scope","link":"#scope","children":[]},{"level":3,"title":"subject","slug":"subject","link":"#subject","children":[]},{"level":3,"title":"body","slug":"body","link":"#body","children":[]},{"level":3,"title":"footer","slug":"footer","link":"#footer","children":[]}]},{"level":2,"title":"Semantic commit 与 Changelog 生成","slug":"semantic-commit-与-changelog-生成","link":"#semantic-commit-与-changelog-生成","children":[]}],"git":{"createdTime":1665160537000,"updatedTime":1665160537000,"contributors":[{"name":"梦里不知身是客","email":"tang97155@gmail.com","commits":1}]},"readingTime":{"minutes":2.64,"words":793},"filePathRelative":"code/github/semantic.md","localizedDate":"2022年10月7日","excerpt":"<h2> Semantic</h2>\\n<p>对于一个大型项目，几千个 commit 是很常见的，这些 commit 部分是项目维护者提交的 commit，部分是一些热心的开发者通过 PR 贡献的。</p>\\n<p>无论是对于项目维护者，还是想要贡献代码的热心开发者来说，一个简洁明了的 commit 描述都是必不可少的。也就是说我们需要用尽可能简短的备注信息，备注每一个 commit 的作用，以便大家查看。所以我们需要一种规范的，语义化的备注格式，很快由知名项目牵头，全球接收并统一了一种语义化的备注格式，这就是 semantic 规范的来源。</p>\\n<h2> 优势</h2>\\n<p>当一个仓库所有的 commit 信息都是用标准的 semantic 格式时，用户可以很方便的理解每一个 commit 的作用。</p>","autoDesc":true}');export{t as data};
