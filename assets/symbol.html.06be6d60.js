import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,f as p}from"./app.cad6791d.js";const t={},e=p(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>ES5 \u7684\u5BF9\u8C61\u5C5E\u6027\u540D\u90FD\u662F\u5B57\u7B26\u4E32\uFF0C\u8FD9\u5BB9\u6613\u9020\u6210\u5C5E\u6027\u540D\u7684\u51B2\u7A81\u3002\u6BD4\u5982\uFF0C\u60A8\u4F7F\u7528\u4E86\u4E00\u4E2A\u4ED6\u4EBA\u63D0\u4F9B\u7684\u5BF9\u8C61\uFF0C\u4F46\u53C8\u60F3\u4E3A\u8FD9\u4E2A\u5BF9\u8C61\u6DFB\u52A0\u65B0\u7684\u65B9\u6CD5(mixin \u6A21\u5F0F)\uFF0C\u65B0\u65B9\u6CD5\u7684\u540D\u5B57\u5C31\u6709\u53EF\u80FD\u4E0E\u73B0\u6709\u65B9\u6CD5\u4EA7\u751F\u51B2\u7A81\u3002\u5982\u679C\u6709\u4E00\u79CD\u673A\u5236\uFF0C\u4FDD\u8BC1\u6BCF\u4E2A\u5C5E\u6027\u7684\u540D\u5B57\u90FD\u662F\u72EC\u4E00\u65E0\u4E8C\u7684\u5C31\u597D\u4E86\uFF0C\u8FD9\u6837\u5C31\u4ECE\u6839\u672C\u4E0A\u9632\u6B62\u5C5E\u6027\u540D\u7684\u51B2\u7A81\u3002\u8FD9\u5C31\u662F ES6 \u5F15\u5165 <code>Symbol</code> \u7684\u539F\u56E0\u3002</p><p>ES6 \u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684\u539F\u59CB\u6570\u636E\u7C7B\u578B <code>Symbol</code>\uFF0C\u8868\u793A\u72EC\u4E00\u65E0\u4E8C\u7684\u503C\u3002\u5B83\u662F JavaScript \u8BED\u8A00\u7684\u7B2C\u4E03\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u524D\u516D\u79CD\u662F: <code>undefined</code>\u3001<code>null</code>\u3001\u5E03\u5C14\u503C(Boolean)\u3001\u5B57\u7B26\u4E32(String)\u3001\u6570\u503C(Number)\u3001\u5BF9\u8C61(Object)\u3002</p><p>Symbol \u503C\u901A\u8FC7 <code>Symbol</code> \u51FD\u6570\u751F\u6210\u3002\u8FD9\u5C31\u662F\u8BF4\uFF0C\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u73B0\u5728\u53EF\u4EE5\u6709\u4E24\u79CD\u7C7B\u578B\uFF0C\u4E00\u79CD\u662F\u539F\u6765\u5C31\u6709\u7684\u5B57\u7B26\u4E32\uFF0C\u53E6\u4E00\u79CD\u5C31\u662F\u65B0\u589E\u7684 Symbol \u7C7B\u578B\u3002\u51E1\u662F\u5C5E\u6027\u540D\u5C5E\u4E8E Symbol \u7C7B\u578B\uFF0C\u5C31\u90FD\u662F\u72EC\u4E00\u65E0\u4E8C\u7684\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u4E0D\u4F1A\u4E0E\u5176\u4ED6\u5C5E\u6027\u540D\u4EA7\u751F\u51B2\u7A81\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">typeof</span> s<span class="token punctuation">;</span>
<span class="token comment">// &quot;symbol&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>s</code> \u5C31\u662F\u4E00\u4E2A\u72EC\u4E00\u65E0\u4E8C\u7684\u503C\u3002<code>typeof</code> \u8FD0\u7B97\u7B26\u7684\u7ED3\u679C\uFF0C\u8868\u660E\u53D8\u91CF <code>s</code> \u662F Symbol \u6570\u636E\u7C7B\u578B\uFF0C\u800C\u4E0D\u662F\u5B57\u7B26\u4E32\u4E4B\u7C7B\u7684\u5176\u4ED6\u7C7B\u578B\u3002</p><p>\u6CE8\u610F\uFF0C<code>Symbol</code> \u51FD\u6570\u524D\u4E0D\u80FD\u4F7F\u7528 <code>new</code> \u547D\u4EE4\uFF0C\u5426\u5219\u4F1A\u62A5\u9519\u3002\u8FD9\u662F\u56E0\u4E3A\u751F\u6210\u7684 Symbol \u662F\u4E00\u4E2A\u539F\u59CB\u7C7B\u578B\u7684\u503C\uFF0C\u4E0D\u662F\u5BF9\u8C61\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u7531\u4E8E Symbol \u503C\u4E0D\u662F\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4E0D\u80FD\u6DFB\u52A0\u5C5E\u6027\u3002\u57FA\u672C\u4E0A\uFF0C\u5B83\u662F\u4E00\u79CD\u7C7B\u4F3C\u4E8E\u5B57\u7B26\u4E32\u7684\u6570\u636E\u7C7B\u578B\u3002</p><p><code>Symbol</code> \u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8868\u793A\u5BF9 Symbol \u5B9E\u4F8B\u7684\u63CF\u8FF0\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u5728\u63A7\u5236\u53F0\u663E\u793A\uFF0C\u6216\u8005\u8F6C\u4E3A\u5B57\u7B26\u4E32\u65F6\uFF0C\u6BD4\u8F83\u5BB9\u6613\u533A\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1<span class="token punctuation">;</span> <span class="token comment">// Symbol(foo)</span>
s2<span class="token punctuation">;</span> <span class="token comment">// Symbol(bar)</span>

s1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
s2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Symbol(bar)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>s1</code> \u548C <code>s2</code> \u662F\u4E24\u4E2A Symbol \u503C\u3002\u5982\u679C\u4E0D\u52A0\u53C2\u6570\uFF0C\u5B83\u4EEC\u5728\u63A7\u5236\u53F0\u7684\u8F93\u51FA\u90FD\u662F <code>Symbol()</code>\uFF0C\u4E0D\u5229\u4E8E\u533A\u5206\u3002\u6709\u4E86\u53C2\u6570\u4EE5\u540E\uFF0C\u5C31\u7B49\u4E8E\u4E3A\u5B83\u4EEC\u52A0\u4E0A\u4E86\u63CF\u8FF0\uFF0C\u8F93\u51FA\u7684\u65F6\u5019\u5C31\u80FD\u591F\u5206\u6E05\uFF0C\u5230\u5E95\u662F\u54EA\u4E00\u4E2A\u503C\u3002</p><p>\u5982\u679C Symbol \u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 <code>toString</code> \u65B9\u6CD5\uFF0C\u5C06\u5176\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u624D\u751F\u6210\u4E00\u4E2A Symbol \u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
sym<span class="token punctuation">;</span> <span class="token comment">// Symbol(abc)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C<code>Symbol</code> \u51FD\u6570\u7684\u53C2\u6570\u53EA\u662F\u8868\u793A\u5BF9\u5F53\u524D Symbol \u503C\u7684\u63CF\u8FF0\uFF0C\u56E0\u6B64\u76F8\u540C\u53C2\u6570\u7684 <code>Symbol</code> \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E0D\u76F8\u7B49\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CA1\u6709\u53C2\u6570\u7684\u60C5\u51B5</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2<span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// \u6709\u53C2\u6570\u7684\u60C5\u51B5</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2<span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>s1</code> \u548C <code>s2</code> \u90FD\u662F <code>Symbol</code> \u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u800C\u4E14\u53C2\u6570\u76F8\u540C\uFF0C\u4F46\u662F\u5B83\u4EEC\u662F\u4E0D\u76F8\u7B49\u7684\u3002</p><p>Symbol \u503C\u4E0D\u80FD\u4E0E\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u8FDB\u884C\u8FD0\u7B97\uFF0C\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;My symbol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token string">&quot;your symbol is &quot;</span> <span class="token operator">+</span>
  sym <span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">your symbol is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sym<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0CSymbol \u503C\u53EF\u4EE5\u663E\u5F0F\u8F6C\u4E3A\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;My symbol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">String</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
sym<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0CSymbol \u503C\u4E5F\u53EF\u4EE5\u8F6C\u4E3A\u5E03\u5C14\u503C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8F6C\u4E3A\u6570\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Boolean</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token operator">!</span>sym<span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token function">Number</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError</span>
sym <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// TypeError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684-symbol" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684-symbol" aria-hidden="true">#</a> \u4F5C\u4E3A\u5C5E\u6027\u540D\u7684 Symbol</h2><p>\u7531\u4E8E\u6BCF\u4E00\u4E2A Symbol \u503C\u90FD\u662F\u4E0D\u76F8\u7B49\u7684\uFF0C\u8FD9\u610F\u5473\u7740 Symbol \u503C\u53EF\u4EE5\u4F5C\u4E3A\u6807\u8BC6\u7B26\uFF0C\u7528\u4E8E\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u5C31\u80FD\u4FDD\u8BC1\u4E0D\u4F1A\u51FA\u73B0\u540C\u540D\u7684\u5C5E\u6027\u3002\u8FD9\u5BF9\u4E8E\u4E00\u4E2A\u5BF9\u8C61\u7531\u591A\u4E2A\u6A21\u5757\u6784\u6210\u7684\u60C5\u51B5\u975E\u5E38\u6709\u7528\uFF0C\u80FD\u9632\u6B62\u67D0\u4E00\u4E2A\u952E\u88AB\u4E0D\u5C0F\u5FC3\u6539\u5199\u6216\u8986\u76D6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B2C\u4E00\u79CD\u5199\u6CD5</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B2C\u4E8C\u79CD\u5199\u6CD5</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B2C\u4E09\u79CD\u5199\u6CD5</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mySymbol<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;Hello!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EE5\u4E0A\u5199\u6CD5\u90FD\u5F97\u5230\u540C\u6837\u7ED3\u679C</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u901A\u8FC7\u65B9\u62EC\u53F7\u7ED3\u6784\u548C <code>Object.defineProperty</code>\uFF0C\u5C06\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\u6307\u5B9A\u4E3A\u4E00\u4E2A Symbol \u503C\u3002</p><p>\u6CE8\u610F\uFF0CSymbol \u503C\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u540D\u65F6\uFF0C\u4E0D\u80FD\u7528\u70B9\u8FD0\u7B97\u7B26\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a<span class="token punctuation">.</span>mySymbol <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
a<span class="token punctuation">[</span><span class="token string">&quot;mySymbol&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Hello!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u56E0\u4E3A\u70B9\u8FD0\u7B97\u7B26\u540E\u9762\u603B\u662F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8BFB\u53D6 <code>mySymbol</code> \u4F5C\u4E3A\u6807\u8BC6\u540D\u6240\u6307\u4EE3\u7684\u90A3\u4E2A\u503C\uFF0C\u5BFC\u81F4 <code>a</code> \u7684\u5C5E\u6027\u540D\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A Symbol \u503C\u3002</p><p>\u540C\u7406\uFF0C\u5728\u5BF9\u8C61\u7684\u5185\u90E8\uFF0C\u4F7F\u7528 Symbol \u503C\u5B9A\u4E49\u5C5E\u6027\u65F6\uFF0CSymbol \u503C\u5FC5\u987B\u653E\u5728\u65B9\u62EC\u53F7\u4E4B\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

obj<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C <code>s</code> \u4E0D\u653E\u5728\u65B9\u62EC\u53F7\u4E2D\uFF0C\u8BE5\u5C5E\u6027\u7684\u952E\u540D\u5C31\u662F\u5B57\u7B26\u4E32 <code>s</code>\uFF0C\u800C\u4E0D\u662F <code>s</code> \u6240\u4EE3\u8868\u7684\u90A3\u4E2A Symbol \u503C\u3002</p><p>\u91C7\u7528\u589E\u5F3A\u7684\u5BF9\u8C61\u5199\u6CD5\uFF0C\u4E0A\u9762\u4EE3\u7801\u7684 <code>obj</code> \u5BF9\u8C61\u53EF\u4EE5\u5199\u5F97\u66F4\u7B80\u6D01\u4E00\u4E9B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symbol \u7C7B\u578B\u8FD8\u53EF\u4EE5\u7528\u4E8E\u5B9A\u4E49\u4E00\u7EC4\u5E38\u91CF\uFF0C\u4FDD\u8BC1\u8FD9\u7EC4\u5E38\u91CF\u7684\u503C\u90FD\u662F\u4E0D\u76F8\u7B49\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> log <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

log<span class="token punctuation">.</span>levels <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">DEBUG</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token constant">INFO</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token constant">WARN</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>levels<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;debug message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>levels<span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">,</span> <span class="token string">&quot;info message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u53E6\u5916\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">COLOR_RED</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">COLOR_GREEN</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getComplement</span><span class="token punctuation">(</span><span class="token parameter">color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token constant">COLOR_RED</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token constant">COLOR_GREEN</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token constant">COLOR_GREEN</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token constant">COLOR_RED</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Undefined color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E38\u91CF\u4F7F\u7528 Symbol \u503C\u6700\u5927\u7684\u597D\u5904\uFF0C\u5C31\u662F\u5176\u4ED6\u4EFB\u4F55\u503C\u90FD\u4E0D\u53EF\u80FD\u6709\u76F8\u540C\u7684\u503C\u4E86\uFF0C\u56E0\u6B64\u53EF\u4EE5\u4FDD\u8BC1\u4E0A\u9762\u7684 <code>switch</code> \u8BED\u53E5\u4F1A\u6309\u8BBE\u8BA1\u7684\u65B9\u5F0F\u5DE5\u4F5C\u3002</p><p>\u8FD8\u6709\u4E00\u70B9\u9700\u8981\u6CE8\u610F\uFF0CSymbol \u503C\u4F5C\u4E3A\u5C5E\u6027\u540D\u65F6\uFF0C\u8BE5\u5C5E\u6027\u8FD8\u662F\u516C\u5F00\u5C5E\u6027\uFF0C\u4E0D\u662F\u79C1\u6709\u5C5E\u6027\u3002</p><h2 id="\u5B9E\u4F8B-\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B9E\u4F8B: \u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32</h2><p>\u9B54\u672F\u5B57\u7B26\u4E32\u6307\u7684\u662F\uFF0C\u5728\u4EE3\u7801\u4E4B\u4E2D\u591A\u6B21\u51FA\u73B0\u3001\u4E0E\u4EE3\u7801\u5F62\u6210\u5F3A\u8026\u5408\u7684\u67D0\u4E00\u4E2A\u5177\u4F53\u7684\u5B57\u7B26\u4E32\u6216\u8005\u6570\u503C\u3002\u98CE\u683C\u826F\u597D\u7684\u4EE3\u7801\uFF0C\u5E94\u8BE5\u5C3D\u91CF\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32\uFF0C\u6539\u7531\u542B\u4E49\u6E05\u6670\u7684\u53D8\u91CF\u4EE3\u66FF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token parameter">shape<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">switch</span> <span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;Triangle&quot;</span><span class="token operator">:</span> <span class="token comment">// \u9B54\u672F\u5B57\u7B26\u4E32</span>
      area <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>width <span class="token operator">*</span> options<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token comment">/* ... more code ... */</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> area<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getArea</span><span class="token punctuation">(</span><span class="token string">&quot;Triangle&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9B54\u672F\u5B57\u7B26\u4E32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5B57\u7B26\u4E32 <code>Triangle</code> \u5C31\u662F\u4E00\u4E2A\u9B54\u672F\u5B57\u7B26\u4E32\u3002\u5B83\u591A\u6B21\u51FA\u73B0\uFF0C\u4E0E\u4EE3\u7801\u5F62\u6210\u201C\u5F3A\u8026\u5408\u201D\uFF0C\u4E0D\u5229\u4E8E\u5C06\u6765\u7684\u4FEE\u6539\u548C\u7EF4\u62A4\u3002</p><p>\u5E38\u7528\u7684\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5\uFF0C\u5C31\u662F\u628A\u5B83\u5199\u6210\u4E00\u4E2A\u53D8\u91CF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> shapeType <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">triangle</span><span class="token operator">:</span> <span class="token string">&quot;Triangle&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token parameter">shape<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> shapeType<span class="token punctuation">.</span>triangle<span class="token operator">:</span>
      area <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>width <span class="token operator">*</span> options<span class="token punctuation">.</span>height<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> area<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">getArea</span><span class="token punctuation">(</span>shapeType<span class="token punctuation">.</span>triangle<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u628A <code>Triangle</code> \u5199\u6210 <code>shapeType</code> \u5BF9\u8C61\u7684 <code>triangle</code> \u5C5E\u6027\uFF0C\u8FD9\u6837\u5C31\u6D88\u9664\u4E86\u5F3A\u8026\u5408\u3002</p><p>\u5982\u679C\u4ED4\u7EC6\u5206\u6790\uFF0C\u53EF\u4EE5\u53D1\u73B0 <code>shapeType.triangle</code> \u7B49\u4E8E\u54EA\u4E2A\u503C\u5E76\u4E0D\u91CD\u8981\uFF0C\u53EA\u8981\u786E\u4FDD\u4E0D\u4F1A\u8DDF\u5176\u4ED6 <code>shapeType</code> \u5C5E\u6027\u7684\u503C\u51B2\u7A81\u5373\u53EF\u3002\u56E0\u6B64\uFF0C\u8FD9\u91CC\u5C31\u5F88\u9002\u5408\u6539\u7528 Symbol \u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> shapeType <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">triangle</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u9664\u4E86\u5C06 <code>shapeType.triangle</code> \u7684\u503C\u8BBE\u4E3A\u4E00\u4E2A Symbol\uFF0C\u5176\u4ED6\u5730\u65B9\u90FD\u4E0D\u7528\u4FEE\u6539\u3002</p><h2 id="\u5C5E\u6027\u540D\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u540D\u7684\u904D\u5386" aria-hidden="true">#</a> \u5C5E\u6027\u540D\u7684\u904D\u5386</h2><p>Symbol \u4F5C\u4E3A\u5C5E\u6027\u540D\uFF0C\u8BE5\u5C5E\u6027\u4E0D\u4F1A\u51FA\u73B0\u5728 <code>for...in</code>\u3001<code>for...of</code> \u5FAA\u73AF\u4E2D\uFF0C\u4E5F\u4E0D\u4F1A\u88AB <code>Object.keys()</code>\u3001<code>Object.getOwnPropertyNames()</code>\u3001<code>JSON.stringify()</code> \u8FD4\u56DE\u3002\u4F46\u662F\uFF0C\u5B83\u4E5F\u4E0D\u662F\u79C1\u6709\u5C5E\u6027\uFF0C\u6709\u4E00\u4E2A <code>Object.getOwnPropertySymbols</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u83B7\u53D6\u6307\u5B9A\u5BF9\u8C61\u7684\u6240\u6709 Symbol \u5C5E\u6027\u540D\u3002</p><p><code>Object.getOwnPropertySymbols</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u6210\u5458\u662F\u5F53\u524D\u5BF9\u8C61\u7684\u6240\u6709\u7528\u4F5C\u5C5E\u6027\u540D\u7684 Symbol \u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> objectSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

objectSymbols<span class="token punctuation">;</span>
<span class="token comment">// [Symbol(a), Symbol(b)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\uFF0C<code>Object.getOwnPropertySymbols</code> \u65B9\u6CD5\u4E0E <code>for...in</code> \u5FAA\u73AF\u3001<code>Object.getOwnPropertyNames</code> \u65B9\u6CD5\u8FDB\u884C\u5BF9\u6BD4\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> foo<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;foobar&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u8F93\u51FA</span>
<span class="token punctuation">}</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// []</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [Symbol(foo)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4F7F\u7528 <code>Object.getOwnPropertyNames</code> \u65B9\u6CD5\u5F97\u4E0D\u5230 <code>Symbol</code> \u5C5E\u6027\u540D\uFF0C\u9700\u8981\u4F7F\u7528 <code>Object.getOwnPropertySymbols</code> \u65B9\u6CD5\u3002</p><p>\u53E6\u4E00\u4E2A\u65B0\u7684 API\uFF0C<code>Reflect.ownKeys</code> \u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE\u6240\u6709\u7C7B\u578B\u7684\u952E\u540D\uFF0C\u5305\u62EC\u5E38\u89C4\u952E\u540D\u548C Symbol \u952E\u540D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;my_key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">nonEnum</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  [&quot;enum&quot;, &quot;nonEnum&quot;, Symbol(my_key)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u4EE5 Symbol \u503C\u4F5C\u4E3A\u540D\u79F0\u7684\u5C5E\u6027\uFF0C\u4E0D\u4F1A\u88AB\u5E38\u89C4\u65B9\u6CD5\u904D\u5386\u5F97\u5230\u3002\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\uFF0C\u4E3A\u5BF9\u8C61\u5B9A\u4E49\u4E00\u4E9B\u975E\u79C1\u6709\u7684\u3001\u4F46\u53C8\u5E0C\u671B\u53EA\u7528\u4E8E\u5185\u90E8\u7684\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;size&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Collection</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">sizeOf</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> instance<span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Collection<span class="token punctuation">.</span><span class="token function">sizeOf</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>

x<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Collection<span class="token punctuation">.</span><span class="token function">sizeOf</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;0&#39;]</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;0&#39;]</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Symbol(size)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61 <code>x</code> \u7684 <code>size</code> \u5C5E\u6027\u662F\u4E00\u4E2A Symbol \u503C\uFF0C\u6240\u4EE5 <code>Object.keys(x)</code>\u3001<code>Object.getOwnPropertyNames(x)</code> \u90FD\u65E0\u6CD5\u83B7\u53D6\u5B83\u3002\u8FD9\u5C31\u9020\u6210\u4E86\u4E00\u79CD\u975E\u79C1\u6709\u7684\u5185\u90E8\u65B9\u6CD5\u7684\u6548\u679C\u3002</p><h2 id="symbol-for-symbol-keyfor" tabindex="-1"><a class="header-anchor" href="#symbol-for-symbol-keyfor" aria-hidden="true">#</a> Symbol.for()\uFF0CSymbol.keyFor()</h2><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u5E0C\u671B\u91CD\u65B0\u4F7F\u7528\u540C\u4E00\u4E2A Symbol \u503C\uFF0C<code>Symbol.for</code> \u65B9\u6CD5\u53EF\u4EE5\u505A\u5230\u8FD9\u4E00\u70B9\u3002\u5B83\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7136\u540E\u641C\u7D22\u6709\u6CA1\u6709\u4EE5\u8BE5\u53C2\u6570\u4F5C\u4E3A\u540D\u79F0\u7684 Symbol \u503C\u3002\u5982\u679C\u6709\uFF0C\u5C31\u8FD4\u56DE\u8FD9\u4E2A Symbol \u503C\uFF0C\u5426\u5219\u5C31\u65B0\u5EFA\u5E76\u8FD4\u56DE\u4E00\u4E2A\u4EE5\u8BE5\u5B57\u7B26\u4E32\u4E3A\u540D\u79F0\u7684 Symbol \u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>s1</code> \u548C <code>s2</code> \u90FD\u662F Symbol \u503C\uFF0C\u4F46\u662F\u5B83\u4EEC\u90FD\u662F\u540C\u6837\u53C2\u6570\u7684 <code>Symbol.for</code> \u65B9\u6CD5\u751F\u6210\u7684\uFF0C\u6240\u4EE5\u5B9E\u9645\u4E0A\u662F\u540C\u4E00\u4E2A\u503C\u3002</p><p><code>Symbol.for()</code> \u4E0E <code>Symbol()</code> \u8FD9\u4E24\u79CD\u5199\u6CD5\uFF0C\u90FD\u4F1A\u751F\u6210\u65B0\u7684 Symbol\u3002\u5B83\u4EEC\u7684\u533A\u522B\u662F\uFF0C\u524D\u8005\u4F1A\u88AB\u767B\u8BB0\u5728\u5168\u5C40\u73AF\u5883\u4E2D\u4F9B\u641C\u7D22\uFF0C\u540E\u8005\u4E0D\u4F1A\u3002<code>Symbol.for()</code> \u4E0D\u4F1A\u6BCF\u6B21\u8C03\u7528\u5C31\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Symbol \u7C7B\u578B\u7684\u503C\uFF0C\u800C\u662F\u4F1A\u5148\u68C0\u67E5\u7ED9\u5B9A\u7684 <code>key</code> \u662F\u5426\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u624D\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u503C\u3002\u6BD4\u5982\uFF0C\u5982\u679C\u60A8\u8C03\u7528 <code>Symbol.for(&quot;cat&quot;)</code>30 \u6B21\uFF0C\u6BCF\u6B21\u90FD\u4F1A\u8FD4\u56DE\u540C\u4E00\u4E2A Symbol \u503C\uFF0C\u4F46\u662F\u8C03\u7528 <code>Symbol(&quot;cat&quot;)</code>30 \u6B21\uFF0C\u4F1A\u8FD4\u56DE 30 \u4E2A\u4E0D\u540C\u7684 Symbol \u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>

<span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7531\u4E8E <code>Symbol()</code> \u5199\u6CD5\u6CA1\u6709\u767B\u8BB0\u673A\u5236\uFF0C\u6240\u4EE5\u6BCF\u6B21\u8C03\u7528\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u4E0D\u540C\u7684\u503C\u3002</p><p><code>Symbol.keyFor</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5DF2\u767B\u8BB0\u7684 Symbol \u7C7B\u578B\u503C\u7684 <code>key</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;foo&quot;</span>

<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>s2</code> \u5C5E\u4E8E\u672A\u767B\u8BB0\u7684 Symbol \u503C\uFF0C\u6240\u4EE5\u8FD4\u56DE <code>undefined</code>\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>Symbol.for</code> \u4E3A Symbol \u503C\u767B\u8BB0\u7684\u540D\u5B57\uFF0C\u662F\u5168\u5C40\u73AF\u5883\u7684\uFF0C\u53EF\u4EE5\u5728\u4E0D\u540C\u7684 iframe \u6216 service worker \u4E2D\u53D6\u5230\u540C\u4E00\u4E2A\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
iframe<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span><span class="token punctuation">;</span>

iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0Ciframe \u7A97\u53E3\u751F\u6210\u7684 Symbol \u503C\uFF0C\u53EF\u4EE5\u5728\u4E3B\u9875\u9762\u5F97\u5230\u3002</p><h2 id="\u5B9E\u4F8B-\u6A21\u5757\u7684-singleton-\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-\u6A21\u5757\u7684-singleton-\u6A21\u5F0F" aria-hidden="true">#</a> \u5B9E\u4F8B: \u6A21\u5757\u7684 Singleton \u6A21\u5F0F</h2><p>Singleton \u6A21\u5F0F\u6307\u7684\u662F\u8C03\u7528\u4E00\u4E2A\u7C7B\uFF0C\u4EFB\u4F55\u65F6\u5019\u8FD4\u56DE\u7684\u90FD\u662F\u540C\u4E00\u4E2A\u5B9E\u4F8B\u3002</p><p>\u5BF9\u4E8E Node.js \u6765\u8BF4\uFF0C\u6A21\u5757\u6587\u4EF6\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u7C7B\u3002\u600E\u4E48\u4FDD\u8BC1\u6BCF\u6B21\u6267\u884C\u8FD9\u4E2A\u6A21\u5757\u6587\u4EF6\uFF0C\u8FD4\u56DE\u7684\u90FD\u662F\u540C\u4E00\u4E2A\u5B9E\u4F8B\u5462?</p><p>\u5F88\u5BB9\u6613\u60F3\u5230\uFF0C\u53EF\u4EE5\u628A\u5B9E\u4F8B\u653E\u5230\u9876\u5C42\u5BF9\u8C61 <code>global</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// mod.js</span>
<span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>global<span class="token punctuation">.</span>_foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  global<span class="token punctuation">.</span>_foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> global<span class="token punctuation">.</span>_foo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u52A0\u8F7D\u4E0A\u9762\u7684 <code>mod.js</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./mod.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53D8\u91CF <code>a</code> \u4EFB\u4F55\u65F6\u5019\u52A0\u8F7D\u7684\u90FD\u662F <code>A</code> \u7684\u540C\u4E00\u4E2A\u5B9E\u4F8B\u3002</p><p>\u4F46\u662F\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u5168\u5C40\u53D8\u91CF <code>global._foo</code> \u662F\u53EF\u5199\u7684\uFF0C\u4EFB\u4F55\u6587\u4EF6\u90FD\u53EF\u4EE5\u4FEE\u6539\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>global<span class="token punctuation">.</span>_foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./mod.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\uFF0C\u4F1A\u4F7F\u5F97\u52A0\u8F7D <code>mod.js</code> \u7684\u811A\u672C\u90FD\u5931\u771F\u3002</p><p>\u4E3A\u4E86\u9632\u6B62\u8FD9\u79CD\u60C5\u51B5\u51FA\u73B0\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 Symbol\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// mod.js</span>
<span class="token keyword">const</span> <span class="token constant">FOO_KEY</span> <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>global<span class="token punctuation">[</span><span class="token constant">FOO_KEY</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  global<span class="token punctuation">[</span><span class="token constant">FOO_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> global<span class="token punctuation">[</span><span class="token constant">FOO_KEY</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53EF\u4EE5\u4FDD\u8BC1 <code>global[FOO_KEY]</code> \u4E0D\u4F1A\u88AB\u65E0\u610F\u95F4\u8986\u76D6\uFF0C\u4F46\u8FD8\u662F\u53EF\u4EE5\u88AB\u6539\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>global<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;world&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./mod.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u952E\u540D\u4F7F\u7528 <code>Symbol</code> \u65B9\u6CD5\u751F\u6210\uFF0C\u90A3\u4E48\u5916\u90E8\u5C06\u65E0\u6CD5\u5F15\u7528\u8FD9\u4E2A\u503C\uFF0C\u5F53\u7136\u4E5F\u5C31\u65E0\u6CD5\u6539\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// mod.js</span>
<span class="token keyword">const</span> <span class="token constant">FOO_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u540E\u9762\u4EE3\u7801\u76F8\u540C \u2026\u2026</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06\u5BFC\u81F4\u5176\u4ED6\u811A\u672C\u90FD\u65E0\u6CD5\u5F15\u7528 <code>FOO_KEY</code>\u3002\u4F46\u8FD9\u6837\u4E5F\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u5C31\u662F\u5982\u679C\u591A\u6B21\u6267\u884C\u8FD9\u4E2A\u811A\u672C\uFF0C\u6BCF\u6B21\u5F97\u5230\u7684 <code>FOO_KEY</code> \u90FD\u662F\u4E0D\u4E00\u6837\u7684\u3002\u867D\u7136 Node.js \u4F1A\u5C06\u811A\u672C\u7684\u6267\u884C\u7ED3\u679C\u7F13\u5B58\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u4E0D\u4F1A\u591A\u6B21\u6267\u884C\u540C\u4E00\u4E2A\u811A\u672C\uFF0C\u4F46\u662F\u7528\u6237\u53EF\u4EE5\u624B\u52A8\u6E05\u9664\u7F13\u5B58\uFF0C\u6240\u4EE5\u4E5F\u4E0D\u662F\u7EDD\u5BF9\u53EF\u9760\u3002</p><h2 id="\u5185\u7F6E\u7684-symbol-\u503C" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u7684-symbol-\u503C" aria-hidden="true">#</a> \u5185\u7F6E\u7684 Symbol \u503C</h2><p>\u9664\u4E86\u5B9A\u4E49\u81EA\u5DF1\u4F7F\u7528\u7684 Symbol \u503C\u4EE5\u5916\uFF0CES6 \u8FD8\u63D0\u4F9B\u4E86 11 \u4E2A\u5185\u7F6E\u7684 Symbol \u503C\uFF0C\u6307\u5411\u8BED\u8A00\u5185\u90E8\u4F7F\u7528\u7684\u65B9\u6CD5\u3002</p><h3 id="symbol-hasinstance" tabindex="-1"><a class="header-anchor" href="#symbol-hasinstance" aria-hidden="true">#</a> Symbol.hasInstance</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.hasInstance</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u5185\u90E8\u65B9\u6CD5\u3002\u5F53\u5176\u4ED6\u5BF9\u8C61\u4F7F\u7528 <code>instanceof</code> \u8FD0\u7B97\u7B26\uFF0C\u5224\u65AD\u662F\u5426\u4E3A\u8BE5\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65F6\uFF0C\u4F1A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u3002\u6BD4\u5982\uFF0C<code>foo instanceof Foo</code> \u5728\u8BED\u8A00\u5185\u90E8\uFF0C\u5B9E\u9645\u8C03\u7528\u7684\u662F <code>Foo[Symbol.hasInstance](foo)</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> foo <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">new</span> <span class="token function">MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>MyClass</code> \u662F\u4E00\u4E2A\u7C7B\uFF0C<code>new MyClass()</code> \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5B9E\u4F8B\u3002\u8BE5\u5B9E\u4F8B\u7684 <code>Symbol.hasInstance</code> \u65B9\u6CD5\uFF0C\u4F1A\u5728\u8FDB\u884C <code>instanceof</code> \u8FD0\u7B97\u65F6\u81EA\u52A8\u8C03\u7528\uFF0C\u5224\u65AD\u5DE6\u4FA7\u7684\u8FD0\u7B97\u5B50\u662F\u5426\u4E3A <code>Array</code> \u7684\u5B9E\u4F8B\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Even</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> Even <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token number">1</span> <span class="token keyword">instanceof</span> <span class="token class-name">Even</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token number">2</span> <span class="token keyword">instanceof</span> <span class="token class-name">Even</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token number">12345</span> <span class="token keyword">instanceof</span> <span class="token class-name">Even</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-isconcatspreadable" tabindex="-1"><a class="header-anchor" href="#symbol-isconcatspreadable" aria-hidden="true">#</a> Symbol.isConcatSpreadable</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.isConcatSpreadable</code> \u5C5E\u6027\u7B49\u4E8E\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u8BE5\u5BF9\u8C61\u7528\u4E8E <code>Array.prototype.concat()</code> \u65F6\uFF0C\u662F\u5426\u53EF\u4EE5\u5C55\u5F00\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span>
arr1<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>

<span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr2<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr2<span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, [&#39;c&#39;,&#39;d&#39;], &#39;e&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\uFF0C\u6570\u7EC4\u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u53EF\u4EE5\u5C55\u5F00\uFF0C<code>Symbol.isConcatSpreadable</code> \u9ED8\u8BA4\u7B49\u4E8E <code>undefined</code>\u3002\u8BE5\u5C5E\u6027\u7B49\u4E8E <code>true</code> \u65F6\uFF0C\u4E5F\u6709\u5C55\u5F00\u7684\u6548\u679C\u3002</p><p>\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\u6B63\u597D\u76F8\u53CD\uFF0C\u9ED8\u8BA4\u4E0D\u5C55\u5F00\u3002\u5B83\u7684 <code>Symbol.isConcatSpreadable</code> \u5C5E\u6027\u8BBE\u4E3A <code>true</code>\uFF0C\u624D\u53EF\u4EE5\u5C55\u5F00\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&quot;d&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, obj, &#39;e&#39;]</span>

obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.isConcatSpreadable</code> \u5C5E\u6027\u4E5F\u53EF\u4EE5\u5B9A\u4E49\u5728\u7C7B\u91CC\u9762\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">A1</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">A2</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
a2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>a2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [1, 2, 3, 4, [5, 6]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7C7B <code>A1</code> \u662F\u53EF\u5C55\u5F00\u7684\uFF0C\u7C7B <code>A2</code> \u662F\u4E0D\u53EF\u5C55\u5F00\u7684\uFF0C\u6240\u4EE5\u4F7F\u7528 <code>concat</code> \u65F6\u6709\u4E0D\u4E00\u6837\u7684\u7ED3\u679C\u3002</p><p>\u6CE8\u610F\uFF0C<code>Symbol.isConcatSpreadable</code> \u7684\u4F4D\u7F6E\u5DEE\u5F02\uFF0C<code>A1</code> \u662F\u5B9A\u4E49\u5728\u5B9E\u4F8B\u4E0A\uFF0C<code>A2</code> \u662F\u5B9A\u4E49\u5728\u7C7B\u672C\u8EAB\uFF0C\u6548\u679C\u76F8\u540C\u3002</p><h3 id="symbol-species" tabindex="-1"><a class="header-anchor" href="#symbol-species" aria-hidden="true">#</a> Symbol.species</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.species</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u3002\u521B\u5EFA\u884D\u751F\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u4F7F\u7528\u8BE5\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyArray</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyArray</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

b <span class="token keyword">instanceof</span> <span class="token class-name">MyArray</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
c <span class="token keyword">instanceof</span> <span class="token class-name">MyArray</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5B50\u7C7B <code>MyArray</code> \u7EE7\u627F\u4E86\u7236\u7C7B <code>Array</code>\uFF0C<code>a</code> \u662F <code>MyArray</code> \u7684\u5B9E\u4F8B\uFF0C<code>b</code> \u548C <code>c</code> \u662F <code>a</code> \u7684\u884D\u751F\u5BF9\u8C61\u3002\u60A8\u53EF\u80FD\u4F1A\u8BA4\u4E3A\uFF0C<code>b</code> \u548C <code>c</code> \u90FD\u662F\u8C03\u7528\u6570\u7EC4\u65B9\u6CD5\u751F\u6210\u7684\uFF0C\u6240\u4EE5\u5E94\u8BE5\u662F\u6570\u7EC4(<code>Array</code> \u7684\u5B9E\u4F8B)\uFF0C\u4F46\u5B9E\u9645\u4E0A\u5B83\u4EEC\u4E5F\u662F <code>MyArray</code> \u7684\u5B9E\u4F8B\u3002</p><p><code>Symbol.species</code> \u5C5E\u6027\u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u800C\u63D0\u4F9B\u7684\u3002\u73B0\u5728\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4E3A <code>MyArray</code> \u8BBE\u7F6E <code>Symbol.species</code> \u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyArray</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>species<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7531\u4E8E\u5B9A\u4E49\u4E86 <code>Symbol.species</code> \u5C5E\u6027\uFF0C\u521B\u5EFA\u884D\u751F\u5BF9\u8C61\u65F6\u5C31\u4F1A\u4F7F\u7528\u8FD9\u4E2A\u5C5E\u6027\u8FD4\u56DE\u7684\u51FD\u6570\uFF0C\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u3002\u8FD9\u4E2A\u4F8B\u5B50\u4E5F\u8BF4\u660E\uFF0C\u5B9A\u4E49 <code>Symbol.species</code> \u5C5E\u6027\u8981\u91C7\u7528 <code>get</code> \u53D6\u503C\u5668\u3002\u9ED8\u8BA4\u7684 <code>Symbol.species</code> \u5C5E\u6027\u7B49\u540C\u4E8E\u4E0B\u9762\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>species<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\uFF0C\u518D\u6765\u770B\u524D\u9762\u7684\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyArray</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>species<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

b <span class="token keyword">instanceof</span> <span class="token class-name">MyArray</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
b <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>a.map(x =&gt; x)</code> \u751F\u6210\u7684\u884D\u751F\u5BF9\u8C61\uFF0C\u5C31\u4E0D\u662F <code>MyArray</code> \u7684\u5B9E\u4F8B\uFF0C\u800C\u76F4\u63A5\u5C31\u662F <code>Array</code> \u7684\u5B9E\u4F8B\u3002</p><p>\u518D\u770B\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">T1</span> <span class="token keyword">extends</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">T2</span> <span class="token keyword">extends</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>species<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">T1</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">T1</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">new</span> <span class="token class-name">T2</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">T2</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>T2</code> \u5B9A\u4E49\u4E86 <code>Symbol.species</code> \u5C5E\u6027\uFF0C<code>T1</code> \u6CA1\u6709\u3002\u7ED3\u679C\u5C31\u5BFC\u81F4\u4E86\u521B\u5EFA\u884D\u751F\u5BF9\u8C61\u65F6(<code>then</code> \u65B9\u6CD5)\uFF0C<code>T1</code> \u8C03\u7528\u7684\u662F\u81EA\u8EAB\u7684\u6784\u9020\u65B9\u6CD5\uFF0C\u800C <code>T2</code> \u8C03\u7528\u7684\u662F <code>Promise</code> \u7684\u6784\u9020\u65B9\u6CD5\u3002</p><p>\u603B\u4E4B\uFF0C<code>Symbol.species</code> \u7684\u4F5C\u7528\u5728\u4E8E\uFF0C\u5B9E\u4F8B\u5BF9\u8C61\u5728\u8FD0\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u9700\u8981\u518D\u6B21\u8C03\u7528\u81EA\u8EAB\u7684\u6784\u9020\u51FD\u6570\u65F6\uFF0C\u4F1A\u8C03\u7528\u8BE5\u5C5E\u6027\u6307\u5B9A\u7684\u6784\u9020\u51FD\u6570\u3002\u5B83\u4E3B\u8981\u7684\u7528\u9014\u662F\uFF0C\u6709\u4E9B\u7C7B\u5E93\u662F\u5728\u57FA\u7C7B\u7684\u57FA\u7840\u4E0A\u4FEE\u6539\u7684\uFF0C\u90A3\u4E48\u5B50\u7C7B\u4F7F\u7528\u7EE7\u627F\u7684\u65B9\u6CD5\u65F6\uFF0C\u4F5C\u8005\u53EF\u80FD\u5E0C\u671B\u8FD4\u56DE\u57FA\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u800C\u4E0D\u662F\u5B50\u7C7B\u7684\u5B9E\u4F8B\u3002</p><h3 id="symbol-match" tabindex="-1"><a class="header-anchor" href="#symbol-match" aria-hidden="true">#</a> Symbol.match</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.match</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u51FD\u6570\u3002\u5F53\u6267\u884C <code>str.match(myObject)</code> \u65F6\uFF0C\u5982\u679C\u8BE5\u5C5E\u6027\u5B58\u5728\uFF0C\u4F1A\u8C03\u7528\u5B83\uFF0C\u8FD4\u56DE\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
regexp<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>match<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MyMatcher</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>match<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token string">&quot;e&quot;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-replace" tabindex="-1"><a class="header-anchor" href="#symbol-replace" aria-hidden="true">#</a> Symbol.replace</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.replace</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5F53\u8BE5\u5BF9\u8C61\u88AB <code>String.prototype.replace</code> \u65B9\u6CD5\u8C03\u7528\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>searchValue<span class="token punctuation">,</span> replaceValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
searchValue<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>replace<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> replaceValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
x<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>replace<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token string">&quot;Hello&quot;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token string">&quot;World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;Hello&quot;, &quot;World&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.replace</code> \u65B9\u6CD5\u4F1A\u6536\u5230\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F <code>replace</code> \u65B9\u6CD5\u6B63\u5728\u4F5C\u7528\u7684\u5BF9\u8C61\uFF0C\u4E0A\u9762\u4F8B\u5B50\u662F <code>Hello</code>\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u66FF\u6362\u540E\u7684\u503C\uFF0C\u4E0A\u9762\u4F8B\u5B50\u662F <code>World</code>\u3002</p><h3 id="symbol-search" tabindex="-1"><a class="header-anchor" href="#symbol-search" aria-hidden="true">#</a> Symbol.search</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.search</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5F53\u8BE5\u5BF9\u8C61\u88AB <code>String.prototype.search</code> \u65B9\u6CD5\u8C03\u7528\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
regexp<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>search<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MySearch</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>search<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token string">&quot;foobar&quot;</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySearch</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-split" tabindex="-1"><a class="header-anchor" href="#symbol-split" aria-hidden="true">#</a> Symbol.split</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.split</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5F53\u8BE5\u5BF9\u8C61\u88AB <code>String.prototype.split</code> \u65B9\u6CD5\u8C03\u7528\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>separator<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
separator<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>split<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MySplitter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>split<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> string<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>string<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">,</span> string<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token string">&quot;foobar&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySplitter</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;&#39;, &#39;bar&#39;]</span>

<span class="token string">&quot;foobar&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySplitter</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;foo&#39;, &#39;&#39;]</span>

<span class="token string">&quot;foobar&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySplitter</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;foobar&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u65B9\u6CD5\u4F7F\u7528 <code>Symbol.split</code> \u65B9\u6CD5\uFF0C\u91CD\u65B0\u5B9A\u4E49\u4E86\u5B57\u7B26\u4E32\u5BF9\u8C61\u7684 <code>split</code> \u65B9\u6CD5\u7684\u884C\u4E3A\uFF0C</p><h3 id="symbol-iterator" tabindex="-1"><a class="header-anchor" href="#symbol-iterator" aria-hidden="true">#</a> Symbol.iterator</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.iterator</code> \u5C5E\u6027\uFF0C\u6307\u5411\u8BE5\u5BF9\u8C61\u7684\u9ED8\u8BA4\u904D\u5386\u5668\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> myIterable <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
myIterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token operator">...</span>myIterable<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u8C61\u8FDB\u884C <code>for...of</code> \u5FAA\u73AF\u65F6\uFF0C\u4F1A\u8C03\u7528 <code>Symbol.iterator</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u8BE5\u5BF9\u8C61\u7684\u9ED8\u8BA4\u904D\u5386\u5668\uFF0C\u8BE6\u7EC6\u4ECB\u7ECD\u53C2\u89C1\u300AIterator \u548C for...of \u5FAA\u73AF\u300B\u4E00\u7AE0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Collection</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token operator">++</span>i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myCollection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myCollection<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
myCollection<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> myCollection<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-toprimitive" tabindex="-1"><a class="header-anchor" href="#symbol-toprimitive" aria-hidden="true">#</a> Symbol.toPrimitive</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.toPrimitive</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u65B9\u6CD5\u3002\u8BE5\u5BF9\u8C61\u88AB\u8F6C\u4E3A\u539F\u59CB\u7C7B\u578B\u7684\u503C\u65F6\uFF0C\u4F1A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u8BE5\u5BF9\u8C61\u5BF9\u5E94\u7684\u539F\u59CB\u7C7B\u578B\u503C\u3002</p><p><code>Symbol.toPrimitive</code> \u88AB\u8C03\u7528\u65F6\uFF0C\u4F1A\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u53C2\u6570\uFF0C\u8868\u793A\u5F53\u524D\u8FD0\u7B97\u7684\u6A21\u5F0F\uFF0C\u4E00\u5171\u6709\u4E09\u79CD\u6A21\u5F0F\u3002</p><ul><li>Number: \u8BE5\u573A\u5408\u9700\u8981\u8F6C\u6210\u6570\u503C</li><li>String: \u8BE5\u573A\u5408\u9700\u8981\u8F6C\u6210\u5B57\u7B26\u4E32</li><li>Default: \u8BE5\u573A\u5408\u53EF\u4EE5\u8F6C\u6210\u6570\u503C\uFF0C\u4E5F\u53EF\u4EE5\u8F6C\u6210\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toPrimitive<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">hint</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>hint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&quot;number&quot;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&quot;string&quot;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;str&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&quot;default&quot;</span><span class="token operator">:</span>
        <span class="token keyword">return</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token number">2</span> <span class="token operator">*</span> obj<span class="token punctuation">;</span> <span class="token comment">// 246</span>
<span class="token number">3</span> <span class="token operator">+</span> obj<span class="token punctuation">;</span> <span class="token comment">// &#39;3default&#39;</span>
obj <span class="token operator">==</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">String</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;str&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-tostringtag" tabindex="-1"><a class="header-anchor" href="#symbol-tostringtag" aria-hidden="true">#</a> Symbol.toStringTag</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.toStringTag</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u65B9\u6CD5\u3002\u5728\u8BE5\u5BF9\u8C61\u4E0A\u9762\u8C03\u7528 <code>Object.prototype.toString</code> \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C\u8FD9\u4E2A\u5C5E\u6027\u5B58\u5728\uFF0C\u5B83\u7684\u8FD4\u56DE\u503C\u4F1A\u51FA\u73B0\u5728 <code>toString</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\u5B57\u7B26\u4E32\u4E4B\u4E2D\uFF0C\u8868\u793A\u5BF9\u8C61\u7684\u7C7B\u578B\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u7528\u6765\u5B9A\u5236 <code>[object Object]</code> \u6216 <code>[object Array]</code> \u4E2D <code>object</code> \u540E\u9762\u7684\u90A3\u4E2A\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F8B\u4E00</span>
<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;Foo&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;[object Foo]&quot;</span>

<span class="token comment">// \u4F8B\u4E8C</span>
<span class="token keyword">class</span> <span class="token class-name">Collection</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>toStringTag<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;xxx&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Collection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;[object xxx]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u65B0\u589E\u5185\u7F6E\u5BF9\u8C61\u7684 <code>Symbol.toStringTag</code> \u5C5E\u6027\u503C\u5982\u4E0B\u3002</p><ul><li><code>JSON[Symbol.toStringTag]</code>: <code>&#39;JSON&#39;</code></li><li><code>Math[Symbol.toStringTag]</code>: <code>&#39;Math&#39;</code></li><li>Module \u5BF9\u8C61 <code>M[Symbol.toStringTag]</code>: <code>&#39;Module&#39;</code></li><li><code>ArrayBuffer.prototype[Symbol.toStringTag]</code>: <code>&#39;ArrayBuffer&#39;</code></li><li><code>DataView.prototype[Symbol.toStringTag]</code>: <code>&#39;DataView&#39;</code></li><li><code>Map.prototype[Symbol.toStringTag]</code>: <code>&#39;Map&#39;</code></li><li><code>Promise.prototype[Symbol.toStringTag]</code>: <code>&#39;Promise&#39;</code></li><li><code>Set.prototype[Symbol.toStringTag]</code>: <code>&#39;Set&#39;</code></li><li><code>%TypedArray%.prototype[Symbol.toStringTag]</code>: <code>&#39;Uint8Array&#39;</code> \u7B49</li><li><code>WeakMap.prototype[Symbol.toStringTag]</code>: <code>&#39;WeakMap&#39;</code></li><li><code>WeakSet.prototype[Symbol.toStringTag]</code>: <code>&#39;WeakSet&#39;</code></li><li><code>%MapIteratorPrototype%[Symbol.toStringTag]</code>: <code>&#39;Map Iterator&#39;</code></li><li><code>%SetIteratorPrototype%[Symbol.toStringTag]</code>: <code>&#39;Set Iterator&#39;</code></li><li><code>%StringIteratorPrototype%[Symbol.toStringTag]</code>: <code>&#39;String Iterator&#39;</code></li><li><code>Symbol.prototype[Symbol.toStringTag]</code>: <code>&#39;Symbol&#39;</code></li><li><code>Generator.prototype[Symbol.toStringTag]</code>: <code>&#39;Generator&#39;</code></li><li><code>GeneratorFunction.prototype[Symbol.toStringTag]</code>: <code>&#39;GeneratorFunction&#39;</code></li></ul><h3 id="symbol-unscopables" tabindex="-1"><a class="header-anchor" href="#symbol-unscopables" aria-hidden="true">#</a> Symbol.unscopables</h3><p>\u5BF9\u8C61\u7684 <code>Symbol.unscopables</code> \u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u5BF9\u8C61\u3002\u8BE5\u5BF9\u8C61\u6307\u5B9A\u4E86\u4F7F\u7528 <code>with</code> \u5173\u952E\u5B57\u65F6\uFF0C\u54EA\u4E9B\u5C5E\u6027\u4F1A\u88AB <code>with</code> \u73AF\u5883\u6392\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>unscopables<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">//   copyWithin: true,</span>
<span class="token comment">//   entries: true,</span>
<span class="token comment">//   fill: true,</span>
<span class="token comment">//   find: true,</span>
<span class="token comment">//   findIndex: true,</span>
<span class="token comment">//   includes: true,</span>
<span class="token comment">//   keys: true</span>
<span class="token comment">// }</span>

Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>unscopables<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;copyWithin&#39;, &#39;entries&#39;, &#39;fill&#39;, &#39;find&#39;, &#39;findIndex&#39;, &#39;includes&#39;, &#39;keys&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u8BF4\u660E\uFF0C\u6570\u7EC4\u6709 7 \u4E2A\u5C5E\u6027\uFF0C\u4F1A\u88AB <code>with</code> \u547D\u4EE4\u6392\u9664\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CA1\u6709 unscopables \u65F6</span>
<span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">with</span> <span class="token punctuation">(</span><span class="token class-name">MyClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6709 unscopables \u65F6</span>
<span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>unscopables<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">with</span> <span class="token punctuation">(</span><span class="token class-name">MyClass</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u901A\u8FC7\u6307\u5B9A <code>Symbol.unscopables</code> \u5C5E\u6027\uFF0C\u4F7F\u5F97 <code>with</code> \u8BED\u6CD5\u5757\u4E0D\u4F1A\u5728\u5F53\u524D\u4F5C\u7528\u57DF\u5BFB\u627E <code>foo</code> \u5C5E\u6027\uFF0C\u5373 <code>foo</code> \u5C06\u6307\u5411\u5916\u5C42\u4F5C\u7528\u57DF\u7684\u53D8\u91CF\u3002</p>`,165),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","symbol.html.vue"]]);export{d as default};
